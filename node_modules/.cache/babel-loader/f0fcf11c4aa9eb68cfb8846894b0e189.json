{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/Field/Field.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport validationConfig from \"/home/arturs/scandiweb/extension/src/component/Form/Form.config\";\nimport Field from \"./Field.component\";\nimport { CHECKBOX_TYPE, ENTER_KEY_CODE, FILE_TYPE, NUMBER_TYPE, PASSWORD_TYPE, RADIO_TYPE, SELECT_TYPE, TEXT_TYPE, TEXTAREA_TYPE } from \"./Field.config\";\n/** #namespace Component/Field/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const FieldContainer = Mosaic.middleware((_temp = _class = class FieldContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.containerFunctions = {\n      onChange: this.onChange.bind(this),\n      handleChange: this.handleChange.bind(this),\n      onChangeCheckbox: this.onChangeCheckbox.bind(this),\n      onFocus: this.onFocus.bind(this),\n      onKeyPress: this.onKeyPress.bind(this),\n      onKeyEnterDown: this.onKeyEnterDown.bind(this),\n      onClick: this.onClick.bind(this)\n    };\n\n    this.containerProps = function () {\n      const {\n        checked: propsChecked,\n        customValidationStatus\n      } = _this.props;\n      const {\n        type,\n        checked,\n        value,\n        validationStatus,\n        validationMessage,\n        filename\n      } = _this.state;\n      return {\n        checked: type === CHECKBOX_TYPE ? propsChecked : checked,\n        value,\n        validationStatus: customValidationStatus !== null && customValidationStatus !== void 0 ? customValidationStatus : validationStatus,\n        message: validationMessage,\n        filename\n      };\n    };\n  }\n\n  __construct(props) {\n    super.__construct(props);\n\n    const {\n      checked\n    } = props;\n    const value = this.getInitialPropsValue();\n    this.state = {\n      value,\n      checked,\n      validationMessage: '',\n      validationStatus: null,\n      eventId: ''\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      value: prevValue,\n      checked: prevChecked,\n      isSubmitted: prevSubmitted\n    } = prevProps;\n    const {\n      value: currentValue,\n      checked: currChecked,\n      type,\n      id,\n      validateSeparately,\n      isSubmitted\n    } = this.props;\n    const {\n      eventId\n    } = this.state;\n\n    if (prevValue !== currentValue) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        value: currentValue\n      });\n    }\n\n    if (type === CHECKBOX_TYPE && currChecked !== prevChecked) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        checked: currChecked\n      });\n    } // prevents validating all fields when entering data in only one of them\n\n\n    if (eventId === id || prevSubmitted !== isSubmitted || !validateSeparately) {\n      this.updateValidationStatus();\n      this.setValidationMessage(prevProps);\n    }\n  }\n\n  setValidationMessage(prevProps) {\n    const {\n      message: prevMessage = {}\n    } = prevProps;\n    const {\n      message = {}\n    } = this.props;\n    const {\n      validationMessage = {}\n    } = this.state;\n\n    if (message !== validationMessage && !prevMessage && message) {\n      this.setState({\n        validationMessage: message\n      });\n    }\n  }\n\n  getInitialPropsValue() {\n    const {\n      type,\n      value\n    } = this.props;\n\n    if (value) {\n      return value;\n    }\n\n    switch (type) {\n      case NUMBER_TYPE:\n        return 0;\n\n      case CHECKBOX_TYPE:\n        return false;\n\n      default:\n        return '';\n    }\n  }\n\n  validateField() {\n    const {\n      validation,\n      id,\n      formRef: refMap,\n      formRefMap\n    } = this.props;\n\n    if (!validation || !id || !refMap || !refMap.current) {\n      return {};\n    }\n\n    const {\n      current: inputNode\n    } = refMap || {};\n\n    if (!inputNode) {\n      return {};\n    } // we are looking for validation and executing it\n\n\n    const rule = validation.find(function (rule) {\n      if (!validationConfig[rule]) {\n        return false;\n      }\n\n      const validationRules = validationConfig[rule];\n      const isValid = validationRules.validate(inputNode, formRefMap);\n      return !isValid;\n    });\n    return validationConfig[rule] || {};\n  }\n\n  updateValidationStatus() {\n    const validationRule = this.validateField();\n    this.setState({\n      validationStatus: !validationRule.validate,\n      validationMessage: validationRule.message\n    });\n  }\n\n  onChange(event) {\n    var _event$target;\n\n    const {\n      type\n    } = this.props;\n    this.setState({\n      eventId: event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.name\n    });\n\n    if (typeof event === 'string' || typeof event === 'number') {\n      return this.handleChange(event);\n    }\n\n    if (event.currentTarget.value.length <= 0) {\n      this.setState({\n        validationStatus: null\n      });\n    }\n\n    this.updateValidationStatus();\n\n    if (type === FILE_TYPE) {\n      return this.handleChange(event.target.value, false, event.target.files[0]);\n    }\n\n    return this.handleChange(event.target.value);\n  }\n\n  onChangeCheckbox(event) {\n    const {\n      onChange\n    } = this.props;\n    const {\n      target: {\n        checked,\n        value\n      }\n    } = event;\n\n    if (onChange) {\n      onChange(value, checked);\n    }\n\n    this.setState({\n      checked\n    });\n  }\n\n  onFocus(event) {\n    const {\n      onFocus\n    } = this.props;\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  }\n\n  onBlur(event) {\n    const {\n      onBlur\n    } = this.props;\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }\n\n  onKeyPress(event) {\n    const {\n      onKeyPress\n    } = this.props;\n\n    if (onKeyPress) {\n      onKeyPress(event);\n    }\n  }\n\n  onKeyEnterDown(event) {\n    if (event.keyCode === ENTER_KEY_CODE) {\n      const value = event.target.value || 1;\n      this.handleChange(value);\n    }\n  }\n\n  onClick(event, selectValue = false) {\n    const {\n      onClick\n    } = this.props;\n\n    if (selectValue) {\n      event.target.select();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  }\n\n  handleChange(value, shouldUpdate = true, fileValue = false) {\n    const {\n      isControlled,\n      onChange,\n      type,\n      min,\n      max\n    } = this.props;\n\n    switch (type) {\n      case NUMBER_TYPE:\n        const isValueNaN = Number.isNaN(parseInt(value, 10));\n\n        if (min > value || value > max || isValueNaN) {\n          break;\n        }\n\n        if (onChange && shouldUpdate) {\n          onChange(value);\n        }\n\n        if (!isControlled) {\n          this.setState({\n            value\n          });\n        }\n\n        break;\n\n      case FILE_TYPE:\n        if (value) {\n          const result = onChange && onChange(fileValue);\n          this.setState({\n            value: result ? value : '',\n            filename: result ? value.substr(value.lastIndexOf('\\\\') + 1) : ''\n          });\n        }\n\n        break;\n\n      default:\n        if (onChange) {\n          onChange(value);\n        }\n\n        if (!isControlled) {\n          this.setState({\n            value\n          });\n        }\n\n    }\n  }\n\n  render() {\n    const {\n      customValidationStatus,\n      ...otherProps\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, Field, Object.assign({}, otherProps, this.containerProps(), this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  isControlled: PropTypes.bool,\n  checked: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  type: PropTypes.oneOf([TEXT_TYPE, NUMBER_TYPE, TEXTAREA_TYPE, PASSWORD_TYPE, RADIO_TYPE, CHECKBOX_TYPE, SELECT_TYPE, FILE_TYPE]).isRequired,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  validation: PropTypes.arrayOf(PropTypes.string),\n  message: PropTypes.string,\n  customValidationStatus: PropTypes.bool,\n  id: PropTypes.string,\n  formRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  })]),\n  formRefMap: PropTypes.object,\n  validateSeparately: PropTypes.bool,\n  isSubmitted: PropTypes.bool\n}, _class.defaultProps = {\n  min: 1,\n  max: 99,\n  checked: false,\n  value: null,\n  onChange: function () {},\n  onFocus: function () {},\n  onBlur: function () {},\n  onClick: function () {},\n  onKeyPress: function () {},\n  formRef: function () {},\n  isControlled: false,\n  validation: [],\n  message: '',\n  customValidationStatus: null,\n  id: '',\n  formRefMap: {},\n  validateSeparately: false,\n  isSubmitted: false\n}, _temp), \"Component/Field/Container\");\nexport default FieldContainer;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/Field/Field.container.js"],"names":["PropTypes","PureComponent","validationConfig","Field","CHECKBOX_TYPE","ENTER_KEY_CODE","FILE_TYPE","NUMBER_TYPE","PASSWORD_TYPE","RADIO_TYPE","SELECT_TYPE","TEXT_TYPE","TEXTAREA_TYPE","containerFunctions","onChange","bind","handleChange","onChangeCheckbox","onFocus","onKeyPress","onKeyEnterDown","onClick","containerProps","checked","propsChecked","customValidationStatus","props","type","value","validationStatus","validationMessage","filename","state","message","__construct","getInitialPropsValue","eventId","componentDidUpdate","prevProps","prevValue","prevChecked","isSubmitted","prevSubmitted","currentValue","currChecked","id","validateSeparately","setState","updateValidationStatus","setValidationMessage","prevMessage","validateField","validation","formRef","refMap","formRefMap","current","inputNode","rule","find","validationRules","isValid","validate","validationRule","event","target","name","currentTarget","length","files","onBlur","keyCode","selectValue","select","shouldUpdate","fileValue","isControlled","min","max","isValueNaN","Number","isNaN","parseInt","result","substr","lastIndexOf","render","otherProps","propTypes","bool","oneOfType","string","number","oneOf","isRequired","func","arrayOf","shape","instanceOf","Element","object","defaultProps","FieldContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport validationConfig from 'Component/Form/Form.config';\n\nimport Field from './Field.component';\nimport {\n    CHECKBOX_TYPE,\n    ENTER_KEY_CODE,\n    FILE_TYPE,\n    NUMBER_TYPE,\n    PASSWORD_TYPE,\n    RADIO_TYPE,\n    SELECT_TYPE,\n    TEXT_TYPE,\n    TEXTAREA_TYPE\n} from './Field.config';\n\n/** @namespace Component/Field/Container */\nexport class FieldContainer extends PureComponent {\n    static propTypes = {\n        isControlled: PropTypes.bool,\n        checked: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.string\n        ]),\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.bool\n        ]),\n        type: PropTypes.oneOf([\n            TEXT_TYPE,\n            NUMBER_TYPE,\n            TEXTAREA_TYPE,\n            PASSWORD_TYPE,\n            RADIO_TYPE,\n            CHECKBOX_TYPE,\n            SELECT_TYPE,\n            FILE_TYPE\n        ]).isRequired,\n        onChange: PropTypes.func,\n        onFocus: PropTypes.func,\n        onBlur: PropTypes.func,\n        onClick: PropTypes.func,\n        onKeyPress: PropTypes.func,\n        min: PropTypes.number,\n        max: PropTypes.number,\n        validation: PropTypes.arrayOf(PropTypes.string),\n        message: PropTypes.string,\n        customValidationStatus: PropTypes.bool,\n        id: PropTypes.string,\n        formRef: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.shape({ current: PropTypes.instanceOf(Element) })\n        ]),\n        formRefMap: PropTypes.object,\n        validateSeparately: PropTypes.bool,\n        isSubmitted: PropTypes.bool\n    };\n\n    static defaultProps = {\n        min: 1,\n        max: 99,\n        checked: false,\n        value: null,\n        onChange: () => {},\n        onFocus: () => {},\n        onBlur: () => {},\n        onClick: () => {},\n        onKeyPress: () => {},\n        formRef: () => {},\n        isControlled: false,\n        validation: [],\n        message: '',\n        customValidationStatus: null,\n        id: '',\n        formRefMap: {},\n        validateSeparately: false,\n        isSubmitted: false\n    };\n\n    containerFunctions = {\n        onChange: this.onChange.bind(this),\n        handleChange: this.handleChange.bind(this),\n        onChangeCheckbox: this.onChangeCheckbox.bind(this),\n        onFocus: this.onFocus.bind(this),\n        onKeyPress: this.onKeyPress.bind(this),\n        onKeyEnterDown: this.onKeyEnterDown.bind(this),\n        onClick: this.onClick.bind(this)\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        const { checked } = props;\n        const value = this.getInitialPropsValue();\n\n        this.state = {\n            value,\n            checked,\n            validationMessage: '',\n            validationStatus: null,\n            eventId: ''\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { value: prevValue, checked: prevChecked, isSubmitted: prevSubmitted } = prevProps;\n        const {\n            value: currentValue,\n            checked: currChecked,\n            type,\n            id,\n            validateSeparately,\n            isSubmitted\n        } = this.props;\n        const { eventId } = this.state;\n\n        if (prevValue !== currentValue) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ value: currentValue });\n        }\n        if (type === CHECKBOX_TYPE && currChecked !== prevChecked) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ checked: currChecked });\n        }\n\n        // prevents validating all fields when entering data in only one of them\n        if (eventId === id || prevSubmitted !== isSubmitted || !validateSeparately) {\n            this.updateValidationStatus();\n            this.setValidationMessage(prevProps);\n        }\n    }\n\n    setValidationMessage(prevProps) {\n        const { message: prevMessage = {} } = prevProps;\n        const { message = {} } = this.props;\n        const { validationMessage = {} } = this.state;\n\n        if (message !== validationMessage && !prevMessage && message) {\n            this.setState({ validationMessage: message });\n        }\n    }\n\n    getInitialPropsValue() {\n        const { type, value } = this.props;\n\n        if (value) {\n            return value;\n        }\n\n        switch (type) {\n        case NUMBER_TYPE:\n            return 0;\n        case CHECKBOX_TYPE:\n            return false;\n        default:\n            return '';\n        }\n    }\n\n    containerProps = () => {\n        const {\n            checked: propsChecked,\n            customValidationStatus\n        } = this.props;\n\n        const {\n            type,\n            checked,\n            value,\n            validationStatus,\n            validationMessage,\n            filename\n        } = this.state;\n\n        return {\n            checked: type === CHECKBOX_TYPE ? propsChecked : checked,\n            value,\n            validationStatus: customValidationStatus ?? validationStatus,\n            message: validationMessage,\n            filename\n        };\n    };\n\n    validateField() {\n        const {\n            validation,\n            id,\n            formRef: refMap,\n            formRefMap\n        } = this.props;\n\n        if (!validation || !id || !refMap || !refMap.current) {\n            return {};\n        }\n\n        const { current: inputNode } = refMap || {};\n\n        if (!inputNode) {\n            return {};\n        }\n\n        // we are looking for validation and executing it\n        const rule = validation.find((rule) => {\n            if (!validationConfig[rule]) {\n                return false;\n            }\n\n            const validationRules = validationConfig[rule];\n            const isValid = validationRules.validate(inputNode, formRefMap);\n            return !isValid;\n        });\n\n        return validationConfig[rule] || {};\n    }\n\n    updateValidationStatus() {\n        const validationRule = this.validateField();\n\n        this.setState({\n            validationStatus: !validationRule.validate,\n            validationMessage: validationRule.message\n        });\n    }\n\n    onChange(event) {\n        const { type } = this.props;\n        this.setState({ eventId: event?.target?.name });\n\n        if (typeof event === 'string' || typeof event === 'number') {\n            return this.handleChange(event);\n        }\n\n        if (event.currentTarget.value.length <= 0) {\n            this.setState({\n                validationStatus: null\n            });\n        }\n\n        this.updateValidationStatus();\n\n        if (type === FILE_TYPE) {\n            return this.handleChange(event.target.value, false, event.target.files[0]);\n        }\n\n        return this.handleChange(event.target.value);\n    }\n\n    onChangeCheckbox(event) {\n        const { onChange } = this.props;\n        const { target: { checked, value } } = event;\n\n        if (onChange) {\n            onChange(value, checked);\n        }\n\n        this.setState({ checked });\n    }\n\n    onFocus(event) {\n        const { onFocus } = this.props;\n\n        if (onFocus) {\n            onFocus(event);\n        }\n    }\n\n    onBlur(event) {\n        const { onBlur } = this.props;\n\n        if (onBlur) {\n            onBlur(event);\n        }\n    }\n\n    onKeyPress(event) {\n        const { onKeyPress } = this.props;\n\n        if (onKeyPress) {\n            onKeyPress(event);\n        }\n    }\n\n    onKeyEnterDown(event) {\n        if (event.keyCode === ENTER_KEY_CODE) {\n            const value = event.target.value || 1;\n            this.handleChange(value);\n        }\n    }\n\n    onClick(event, selectValue = false) {\n        const { onClick } = this.props;\n\n        if (selectValue) {\n            event.target.select();\n        }\n        if (onClick) {\n            onClick(event);\n        }\n    }\n\n    handleChange(value, shouldUpdate = true, fileValue = false) {\n        const {\n            isControlled,\n            onChange,\n            type,\n            min,\n            max\n        } = this.props;\n\n        switch (type) {\n        case NUMBER_TYPE:\n            const isValueNaN = Number.isNaN(parseInt(value, 10));\n            if (min > value || value > max || isValueNaN) {\n                break;\n            }\n            if (onChange && shouldUpdate) {\n                onChange(value);\n            }\n            if (!isControlled) {\n                this.setState({ value });\n            }\n            break;\n        case FILE_TYPE:\n            if (value) {\n                const result = onChange && onChange(fileValue);\n\n                this.setState({\n                    value: result ? value : '',\n                    filename: result ? value.substr(value.lastIndexOf('\\\\') + 1) : ''\n                });\n            }\n\n            break;\n        default:\n            if (onChange) {\n                onChange(value);\n            }\n            if (!isControlled) {\n                this.setState({ value });\n            }\n        }\n    }\n\n    render() {\n        const { customValidationStatus, ...otherProps } = this.props;\n\n        return (\n            <Field\n              { ...otherProps }\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default FieldContainer;\n"]},"metadata":{},"sourceType":"module"}