{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/route/ProductPage/ProductPage.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { PDP } from \"/home/arturs/scandiweb/scandipwa/src/component/Header/Header.config\";\nimport { MENU_TAB } from \"/home/arturs/scandiweb/scandipwa/src/component/NavigationTabs/NavigationTabs.config\";\nimport { IN_STOCK, OUT_OF_STOCK } from \"/home/arturs/scandiweb/scandipwa/src/component/ProductCard/ProductCard.config\";\nimport { LOADING_TIME } from \"/home/arturs/scandiweb/scandipwa/src/route/CategoryPage/CategoryPage.config\";\nimport { changeNavigationState, goToPreviousNavigationState } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.action\";\nimport { BOTTOM_NAVIGATION_TYPE, TOP_NAVIGATION_TYPE } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.reducer\";\nimport { setBigOfflineNotice } from \"/home/arturs/scandiweb/scandipwa/src/store/Offline/Offline.action\";\nimport { addRecentlyViewedProduct } from \"/home/arturs/scandiweb/scandipwa/src/store/RecentlyViewedProducts/RecentlyViewedProducts.action\";\nimport { HistoryType, LocationType, MatchType } from \"/home/arturs/scandiweb/scandipwa/src/type/Common\";\nimport { ProductType } from \"/home/arturs/scandiweb/scandipwa/src/type/ProductList\";\nimport { getVariantIndex } from \"/home/arturs/scandiweb/scandipwa/src/util/Product\";\nimport { debounce } from \"/home/arturs/scandiweb/scandipwa/src/util/Request\";\nimport { convertQueryStringToKeyValuePairs, objectToUri, removeQueryParamWithoutHistory, updateQueryParamWithoutHistory } from \"/home/arturs/scandiweb/scandipwa/src/util/Url\";\nimport ProductPage from \"./ProductPage.component\";\nexport const BreadcrumbsDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/scandipwa/src/store/Breadcrumbs/Breadcrumbs.dispatcher\");\nexport const MetaDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/scandipwa/src/store/Meta/Meta.dispatcher\");\nexport const ProductDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/scandipwa/src/store/Product/Product.dispatcher\");\n/** #namespace Route/ProductPage/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    isOffline: state.OfflineReducer.isOffline,\n    product: state.ProductReducer.product,\n    navigation: state.NavigationReducer[TOP_NAVIGATION_TYPE],\n    metaTitle: state.MetaReducer.title,\n    device: state.ConfigReducer.device,\n    store: state.ConfigReducer.code\n  };\n}, \"Route/ProductPage/Container/mapStateToProps\");\n/** #namespace Route/ProductPage/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    changeHeaderState: function (state) {\n      return dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state));\n    },\n    changeNavigationState: function (state) {\n      return dispatch(changeNavigationState(BOTTOM_NAVIGATION_TYPE, state));\n    },\n    requestProduct: function (options) {\n      // TODO: check linked products, there might be issues :'(\n      ProductDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.handleData(dispatch, options);\n      });\n    },\n    setBigOfflineNotice: function (isBig) {\n      return dispatch(setBigOfflineNotice(isBig));\n    },\n    updateBreadcrumbs: function (breadcrumbs, prevCategoryId) {\n      return BreadcrumbsDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.updateWithProduct(breadcrumbs, prevCategoryId, dispatch);\n      });\n    },\n    updateMetaFromProduct: function (product) {\n      return MetaDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.updateWithProduct(product, dispatch);\n      });\n    },\n    goToPreviousNavigationState: function (state) {\n      return dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE, state));\n    },\n    addRecentlyViewedProduct: function (product, store) {\n      return dispatch(addRecentlyViewedProduct(product, store));\n    }\n  };\n}, \"Route/ProductPage/Container/mapDispatchToProps\");\n/** #namespace Route/ProductPage/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductPageContainer = Mosaic.middleware((_temp = _class = class ProductPageContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      configurableVariantIndex: -1,\n      parameters: {},\n      productOptionsData: {},\n      selectedInitialBundlePrice: 0,\n      selectedBundlePrice: 0,\n      selectedBundlePriceExclTax: 0,\n      selectedLinkPrice: 0,\n      currentProductSKU: ''\n    };\n    this.containerFunctions = {\n      updateConfigurableVariant: this.updateConfigurableVariant.bind(this),\n      getLink: this.getLink.bind(this),\n      getSelectedCustomizableOptions: this.getSelectedCustomizableOptions.bind(this),\n      setBundlePrice: this.setBundlePrice.bind(this),\n      setLinkedDownloadables: this.setLinkedDownloadables.bind(this),\n      setLinkedDownloadablesPrice: this.setLinkedDownloadablesPrice.bind(this),\n      isProductInformationTabEmpty: this.isProductInformationTabEmpty.bind(this),\n      isProductAttributesTabEmpty: this.isProductAttributesTabEmpty.bind(this)\n    };\n\n    this.setOfflineNoticeSize = function () {\n      const {\n        setBigOfflineNotice,\n        productSKU\n      } = _this.props;\n\n      const {\n        sku\n      } = _this.getDataSource();\n      /**\n       * If there is any information about the product, in example,\n       * we know it's URL-rewrite SKU is matching the product SKU -\n       * show the small offline notice, else - show larger one.\n       */\n\n\n      if (sku !== productSKU) {\n        setBigOfflineNotice(true);\n      } else {\n        setBigOfflineNotice(false);\n      }\n    };\n\n    this.containerProps = function () {\n      return {\n        productOrVariant: _this.getProductOrVariant(),\n        dataSource: _this.getDataSource(),\n        areDetailsLoaded: _this.getAreDetailsLoaded(),\n        isInformationTabEmpty: _this.isProductInformationTabEmpty(),\n        isAttributesTabEmpty: _this.isProductAttributesTabEmpty()\n      };\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      product: {\n        sku,\n        variants,\n        configurable_options,\n        options,\n        productOptionsData\n      },\n      location: {\n        search\n      }\n    } = props;\n    const {\n      currentProductSKU: prevSKU,\n      productOptionsData: prevOptionData\n    } = state;\n    const currentProductSKU = prevSKU === sku ? '' : prevSKU;\n    /**\n     * If the product we expect to load is loaded -\n     * reset expected SKU\n     */\n\n    if (!configurable_options && !variants) {\n      return {\n        currentProductSKU\n      };\n    }\n\n    const parameters = Object.entries(convertQueryStringToKeyValuePairs(search)).reduce(function (acc, [key, value]) {\n      if (key in configurable_options) {\n        return { ...acc,\n          [key]: value\n        };\n      }\n\n      return acc;\n    }, {});\n\n    if (Object.keys(parameters).length !== Object.keys(configurable_options).length) {\n      return {\n        parameters,\n        currentProductSKU\n      };\n    }\n\n    const configurableVariantIndex = getVariantIndex(variants, parameters, true);\n    const newOptionsData = options.reduce(function (acc, {\n      option_id,\n      required\n    }) {\n      if (required) {\n        acc.push(option_id);\n      }\n\n      return acc;\n    }, []);\n    const prevRequiredOptions = (productOptionsData === null || productOptionsData === void 0 ? void 0 : productOptionsData.requiredOptions) || [];\n    const requiredOptions = [...prevRequiredOptions, ...newOptionsData];\n    return {\n      parameters,\n      currentProductSKU,\n      configurableVariantIndex,\n      productOptionsData: { ...prevOptionData,\n        ...productOptionsData,\n        requiredOptions\n      }\n    };\n  }\n\n  componentDidMount() {\n    /**\n     * Always make sure the navigation switches into the MENU tab\n     * */\n    this.updateNavigationState();\n    /**\n     * Ensure transition PDP => homepage => PDP always having proper meta\n     */\n\n    this.updateMeta();\n    /**\n     * Make sure to update header state, the data-source will\n     * define the correct information to use for update\n     * (it can be a product, history state product or an empty object).\n     */\n\n    this.updateHeaderState();\n    this.updateBreadcrumbs();\n    /**\n     * Scroll page top in order to display it from the start\n     */\n\n    this.scrollTop();\n  }\n\n  componentDidUpdate(prevProps) {\n    var _history, _history$state, _history$state$state;\n\n    const {\n      isOffline,\n      productSKU,\n      product: {\n        sku,\n        options,\n        items\n      }\n    } = this.props;\n    const {\n      productSKU: prevProductSKU,\n      product: {\n        sku: prevSku,\n        options: prevOptions,\n        items: prevItems\n      }\n    } = prevProps;\n    const {\n      sku: stateSKU\n    } = ((_history = history) === null || _history === void 0 ? void 0 : (_history$state = _history.state) === null || _history$state === void 0 ? void 0 : (_history$state$state = _history$state.state) === null || _history$state$state === void 0 ? void 0 : _history$state$state.product) || {};\n\n    if (isOffline) {\n      debounce(this.setOfflineNoticeSize, LOADING_TIME)();\n    }\n    /**\n     * We should also update product based data if, the URL\n     * rewrite SKU has changed to matching the product history SKU\n     * one. At this point there could be sufficient data for\n     * some updates (i.e. header state).\n     */\n\n\n    if (productSKU !== prevProductSKU && stateSKU === productSKU) {\n      this.updateHeaderState();\n    }\n    /**\n     * If the currently loaded category ID does not match the ID of\n     * category ID from URL rewrite, request category.\n     */\n\n\n    if (productSKU !== sku) {\n      this.requestProduct();\n    }\n    /**\n     * If product ID was changed => it is loaded => we need to\n     * update product specific information, i.e. breadcrumbs.\n     */\n\n\n    if (sku !== prevSku) {\n      this.updateBreadcrumbs();\n      this.updateHeaderState();\n      this.updateMeta();\n    }\n    /**\n     * LEGACY: needed to make sure required items are\n     * selected in the bundle product.\n     */\n\n\n    if (JSON.stringify(options) !== JSON.stringify(prevOptions)) {\n      this.getRequiredProductOptions(options);\n    }\n    /**\n     * LEGACY needed to make sure required options are\n     * selected in the customizable options product.\n     */\n\n\n    if (JSON.stringify(items) !== JSON.stringify(prevItems)) {\n      this.getRequiredProductOptions(items);\n    }\n\n    this._addToRecentlyViewedProducts();\n  }\n\n  isProductInformationTabEmpty() {\n    var _dataSource$descripti, _dataSource$descripti2;\n\n    const dataSource = this.getDataSource();\n    return (dataSource === null || dataSource === void 0 ? void 0 : (_dataSource$descripti = dataSource.description) === null || _dataSource$descripti === void 0 ? void 0 : (_dataSource$descripti2 = _dataSource$descripti.html) === null || _dataSource$descripti2 === void 0 ? void 0 : _dataSource$descripti2.length) === 0;\n  }\n\n  isProductAttributesTabEmpty() {\n    const dataSource = this.getDataSource();\n    return Object.keys((dataSource === null || dataSource === void 0 ? void 0 : dataSource.attributes) || {}).length === 0;\n  }\n\n  _addToRecentlyViewedProducts() {\n    const {\n      product,\n      product: {\n        sku\n      },\n      addRecentlyViewedProduct,\n      store\n    } = this.props; // necessary for skipping not loaded products\n\n    if (!sku) {\n      return;\n    } // push into localstorage only preview of product (image, name and etc)\n\n\n    const {\n      canonical_url,\n      categories,\n      configurable_options,\n      description,\n      items,\n      meta_description,\n      meta_keyword,\n      meta_title,\n      options,\n      product_links,\n      reviews,\n      short_description,\n      variants,\n      ...productPreview\n    } = product;\n    addRecentlyViewedProduct(productPreview, store);\n  }\n\n  scrollTop() {\n    window.scrollTo(0, 0);\n  }\n\n  getLink(key, value) {\n    const {\n      location: {\n        search,\n        pathname\n      }\n    } = this.props;\n    const obj = { ...convertQueryStringToKeyValuePairs(search)\n    };\n\n    if (key) {\n      obj[key] = value;\n    }\n\n    const query = objectToUri(obj);\n    return `${pathname}${query}`;\n  }\n\n  getRequiredProductOptions(options) {\n    const {\n      productOptionsData\n    } = this.state;\n\n    if (!options) {\n      return [];\n    }\n\n    const requiredOptions = options.reduce(function (acc, {\n      option_id,\n      required\n    }) {\n      if (required) {\n        acc.push(option_id);\n      }\n\n      return acc;\n    }, []);\n    return this.setState({\n      productOptionsData: { ...productOptionsData,\n        requiredOptions\n      }\n    });\n  }\n\n  setLinkedDownloadablesPrice(price) {\n    this.setState({\n      selectedLinkPrice: price\n    });\n  }\n\n  setBundlePrice(prices) {\n    const {\n      price = 0,\n      priceExclTax = 0,\n      finalPrice = 0\n    } = prices;\n    this.setState({\n      selectedInitialBundlePrice: price,\n      selectedBundlePrice: finalPrice,\n      selectedBundlePriceExclTax: priceExclTax\n    });\n  }\n\n  setLinkedDownloadables(links) {\n    const {\n      productOptionsData\n    } = this.state;\n    this.setState({\n      productOptionsData: { ...productOptionsData,\n        downloadableLinks: links\n      }\n    });\n  }\n\n  getSelectedCustomizableOptions(values, updateArray = false) {\n    const {\n      productOptionsData\n    } = this.state;\n\n    if (updateArray) {\n      this.setState({\n        productOptionsData: { ...productOptionsData,\n          productOptionsMulti: values\n        }\n      });\n    } else {\n      this.setState({\n        productOptionsData: { ...productOptionsData,\n          productOptions: values\n        }\n      });\n    }\n  }\n\n  getIsConfigurableParameterSelected(parameters, key, value) {\n    return Object.hasOwnProperty.call(parameters, key) && parameters[key] === value;\n  }\n\n  getNewParameters(key, value) {\n    const {\n      parameters\n    } = this.state; // If value is already selected, than we remove the key to achieve deselection\n\n    if (this.getIsConfigurableParameterSelected(parameters, key, value)) {\n      const {\n        [key]: oldValue,\n        ...newParameters\n      } = parameters;\n      return newParameters;\n    }\n\n    return { ...parameters,\n      [key]: value.toString()\n    };\n  }\n\n  updateConfigurableVariant(key, value) {\n    const parameters = this.getNewParameters(key, value);\n    this.setState({\n      parameters\n    });\n    this.updateUrl(key, value, parameters);\n    this.updateConfigurableVariantIndex(parameters);\n  }\n\n  updateUrl(key, value, parameters) {\n    const {\n      location,\n      history\n    } = this.props;\n    const isParameterSelected = this.getIsConfigurableParameterSelected(parameters, key, value);\n\n    if (isParameterSelected) {\n      updateQueryParamWithoutHistory(key, value, history, location);\n    } else {\n      removeQueryParamWithoutHistory(key, history, location);\n    }\n  }\n\n  updateConfigurableVariantIndex(parameters) {\n    const {\n      product: {\n        variants,\n        configurable_options\n      }\n    } = this.props;\n    const {\n      configurableVariantIndex\n    } = this.state;\n    const newIndex = Object.keys(parameters).length === Object.keys(configurable_options).length ? getVariantIndex(variants, parameters, true) // Not all parameters are selected yet, therefore variantIndex must be invalid\n    : -1;\n\n    if (configurableVariantIndex !== newIndex) {\n      this.setState({\n        configurableVariantIndex: newIndex\n      });\n    }\n  }\n\n  getAreDetailsLoaded() {\n    const {\n      product\n    } = this.props;\n    const dataSource = this.getDataSource();\n    return dataSource === product;\n  }\n\n  getProductOrVariant() {\n    const dataSource = this.getDataSource();\n    const {\n      variants\n    } = dataSource;\n    const currentVariantIndex = this.getConfigurableVariantIndex(variants);\n    const variant = variants && variants[currentVariantIndex];\n\n    if ((variants === null || variants === void 0 ? void 0 : variants.length) > 0) {\n      dataSource.stock_status = variants.some(function (v) {\n        return v.stock_status === IN_STOCK;\n      }) ? IN_STOCK : OUT_OF_STOCK;\n    }\n\n    return variant || dataSource;\n  }\n\n  getConfigurableVariantIndex(variants) {\n    const {\n      configurableVariantIndex,\n      parameters\n    } = this.state;\n    const hasParameters = !!Object.keys(parameters).length;\n\n    if (configurableVariantIndex >= 0) {\n      return configurableVariantIndex;\n    }\n\n    if (variants && hasParameters) {\n      return getVariantIndex(variants, parameters, true);\n    }\n\n    return -1;\n  }\n\n  getDataSource() {\n    var _history2, _history2$state;\n\n    const {\n      productSKU,\n      product\n    } = this.props;\n    const {\n      sku\n    } = product;\n    const {\n      product: stateProduct\n    } = ((_history2 = history) === null || _history2 === void 0 ? void 0 : (_history2$state = _history2.state) === null || _history2$state === void 0 ? void 0 : _history2$state.state) || {};\n    const {\n      sku: stateSKU\n    } = stateProduct || {};\n    /**\n     * If URL rewrite requested matches loaded product SKU\n     * assume it is a data-source.\n     */\n\n    if (productSKU === sku) {\n      return product;\n    }\n    /**\n     * If URL rewrite requested matches product SKU from\n     * history state - it is a data-source.\n     */\n\n\n    if (productSKU === stateSKU) {\n      return stateProduct;\n    }\n    /**\n     * Else there is no place to get a up-to-date\n     * information about the product from.\n     */\n\n\n    return {};\n  }\n\n  getProductRequestFilter() {\n    const {\n      productSKU\n    } = this.props;\n    return {\n      productSKU\n    };\n  }\n\n  requestProduct() {\n    const {\n      requestProduct,\n      productSKU\n    } = this.props;\n    const {\n      currentProductSKU\n    } = this.state;\n    /**\n     * If URL rewrite was not passed - do not request the product.\n     */\n\n    if (!productSKU) {\n      return;\n    }\n    /**\n     * Skip loading the same product SKU the second time\n     */\n\n\n    if (currentProductSKU === productSKU) {\n      return;\n    }\n\n    this.setState({\n      currentProductSKU: productSKU\n    });\n    const options = {\n      isSingleProduct: true,\n      args: {\n        filter: this.getProductRequestFilter()\n      }\n    };\n    requestProduct(options);\n  }\n\n  updateNavigationState() {\n    const {\n      changeNavigationState\n    } = this.props;\n    changeNavigationState({\n      name: MENU_TAB\n    });\n  }\n\n  updateMeta() {\n    const {\n      updateMetaFromProduct\n    } = this.props;\n    updateMetaFromProduct(this.getDataSource());\n  }\n\n  updateHeaderState() {\n    const {\n      name = ''\n    } = this.getDataSource();\n    const {\n      changeHeaderState\n    } = this.props;\n    changeHeaderState({\n      name: PDP,\n      title: name,\n      onBackClick: function () {\n        return history.back();\n      }\n    });\n  }\n\n  updateBreadcrumbs() {\n    const {\n      updateBreadcrumbs,\n      location\n    } = this.props;\n    const {\n      state: {\n        prevCategoryId = null\n      } = {}\n    } = location;\n    updateBreadcrumbs(this.getDataSource(), prevCategoryId);\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, ProductPage, Object.assign({}, this.props, this.state, this.containerFunctions, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  location: LocationType,\n  changeHeaderState: PropTypes.func.isRequired,\n  setBigOfflineNotice: PropTypes.func.isRequired,\n  changeNavigationState: PropTypes.func.isRequired,\n  updateMetaFromProduct: PropTypes.func.isRequired,\n  updateBreadcrumbs: PropTypes.func.isRequired,\n  requestProduct: PropTypes.func.isRequired,\n  isOffline: PropTypes.bool.isRequired,\n  productSKU: PropTypes.string,\n  product: ProductType.isRequired,\n  history: HistoryType.isRequired,\n  match: MatchType.isRequired,\n  goToPreviousNavigationState: PropTypes.func.isRequired,\n  navigation: PropTypes.shape(PropTypes.shape).isRequired,\n  metaTitle: PropTypes.string,\n  addRecentlyViewedProduct: PropTypes.func.isRequired,\n  store: PropTypes.string.isRequired\n}, _class.defaultProps = {\n  location: {\n    state: {}\n  },\n  productSKU: '',\n  metaTitle: undefined\n}, _temp), \"Route/ProductPage/Container\");\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProductPageContainer));","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/route/ProductPage/ProductPage.container.js"],"names":["PropTypes","PureComponent","connect","withRouter","PDP","MENU_TAB","IN_STOCK","OUT_OF_STOCK","LOADING_TIME","changeNavigationState","goToPreviousNavigationState","BOTTOM_NAVIGATION_TYPE","TOP_NAVIGATION_TYPE","setBigOfflineNotice","addRecentlyViewedProduct","HistoryType","LocationType","MatchType","ProductType","getVariantIndex","debounce","convertQueryStringToKeyValuePairs","objectToUri","removeQueryParamWithoutHistory","updateQueryParamWithoutHistory","ProductPage","BreadcrumbsDispatcher","MetaDispatcher","ProductDispatcher","mapStateToProps","state","isOffline","OfflineReducer","product","ProductReducer","navigation","NavigationReducer","metaTitle","MetaReducer","title","device","ConfigReducer","store","code","mapDispatchToProps","dispatch","changeHeaderState","requestProduct","options","then","default","dispatcher","handleData","isBig","updateBreadcrumbs","breadcrumbs","prevCategoryId","updateWithProduct","updateMetaFromProduct","configurableVariantIndex","parameters","productOptionsData","selectedInitialBundlePrice","selectedBundlePrice","selectedBundlePriceExclTax","selectedLinkPrice","currentProductSKU","containerFunctions","updateConfigurableVariant","bind","getLink","getSelectedCustomizableOptions","setBundlePrice","setLinkedDownloadables","setLinkedDownloadablesPrice","isProductInformationTabEmpty","isProductAttributesTabEmpty","setOfflineNoticeSize","productSKU","props","sku","getDataSource","containerProps","productOrVariant","getProductOrVariant","dataSource","areDetailsLoaded","getAreDetailsLoaded","isInformationTabEmpty","isAttributesTabEmpty","getDerivedStateFromProps","variants","configurable_options","location","search","prevSKU","prevOptionData","Object","entries","reduce","acc","key","value","keys","length","newOptionsData","option_id","required","push","prevRequiredOptions","requiredOptions","componentDidMount","updateNavigationState","updateMeta","updateHeaderState","scrollTop","componentDidUpdate","prevProps","items","prevProductSKU","prevSku","prevOptions","prevItems","stateSKU","history","JSON","stringify","getRequiredProductOptions","_addToRecentlyViewedProducts","description","html","attributes","canonical_url","categories","meta_description","meta_keyword","meta_title","product_links","reviews","short_description","productPreview","window","scrollTo","pathname","obj","query","setState","price","prices","priceExclTax","finalPrice","links","downloadableLinks","values","updateArray","productOptionsMulti","productOptions","getIsConfigurableParameterSelected","hasOwnProperty","call","getNewParameters","oldValue","newParameters","toString","updateUrl","updateConfigurableVariantIndex","isParameterSelected","newIndex","currentVariantIndex","getConfigurableVariantIndex","variant","stock_status","some","v","hasParameters","stateProduct","getProductRequestFilter","isSingleProduct","args","filter","name","onBackClick","back","render","propTypes","func","isRequired","bool","string","match","shape","defaultProps","undefined","ProductPageContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { PDP } from 'Component/Header/Header.config';\nimport { MENU_TAB } from 'Component/NavigationTabs/NavigationTabs.config';\nimport { IN_STOCK, OUT_OF_STOCK } from 'Component/ProductCard/ProductCard.config';\nimport { LOADING_TIME } from 'Route/CategoryPage/CategoryPage.config';\nimport { changeNavigationState, goToPreviousNavigationState } from 'Store/Navigation/Navigation.action';\nimport { BOTTOM_NAVIGATION_TYPE, TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { setBigOfflineNotice } from 'Store/Offline/Offline.action';\nimport { addRecentlyViewedProduct } from 'Store/RecentlyViewedProducts/RecentlyViewedProducts.action';\nimport { HistoryType, LocationType, MatchType } from 'Type/Common';\nimport { ProductType } from 'Type/ProductList';\nimport { getVariantIndex } from 'Util/Product';\nimport { debounce } from 'Util/Request';\nimport {\n    convertQueryStringToKeyValuePairs,\n    objectToUri,\n    removeQueryParamWithoutHistory,\n    updateQueryParamWithoutHistory\n} from 'Util/Url';\n\nimport ProductPage from './ProductPage.component';\n\nexport const BreadcrumbsDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Breadcrumbs/Breadcrumbs.dispatcher'\n);\n\nexport const MetaDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Meta/Meta.dispatcher'\n);\n\nexport const ProductDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Product/Product.dispatcher'\n);\n\n/** @namespace Route/ProductPage/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    isOffline: state.OfflineReducer.isOffline,\n    product: state.ProductReducer.product,\n    navigation: state.NavigationReducer[TOP_NAVIGATION_TYPE],\n    metaTitle: state.MetaReducer.title,\n    device: state.ConfigReducer.device,\n    store: state.ConfigReducer.code\n});\n\n/** @namespace Route/ProductPage/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    changeHeaderState: (state) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state)),\n    changeNavigationState: (state) => dispatch(changeNavigationState(BOTTOM_NAVIGATION_TYPE, state)),\n    requestProduct: (options) => {\n        // TODO: check linked products, there might be issues :'(\n        ProductDispatcher.then(\n            ({ default: dispatcher }) => dispatcher.handleData(dispatch, options)\n        );\n    },\n    setBigOfflineNotice: (isBig) => dispatch(setBigOfflineNotice(isBig)),\n    updateBreadcrumbs: (breadcrumbs, prevCategoryId) => BreadcrumbsDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.updateWithProduct(breadcrumbs, prevCategoryId, dispatch)\n    ),\n    updateMetaFromProduct: (product) => MetaDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.updateWithProduct(product, dispatch)\n    ),\n    goToPreviousNavigationState: (state) => dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE, state)),\n    addRecentlyViewedProduct: (product, store) => dispatch(addRecentlyViewedProduct(product, store))\n});\n\n/** @namespace Route/ProductPage/Container */\nexport class ProductPageContainer extends PureComponent {\n    state = {\n        configurableVariantIndex: -1,\n        parameters: {},\n        productOptionsData: {},\n        selectedInitialBundlePrice: 0,\n        selectedBundlePrice: 0,\n        selectedBundlePriceExclTax: 0,\n        selectedLinkPrice: 0,\n        currentProductSKU: ''\n    };\n\n    containerFunctions = {\n        updateConfigurableVariant: this.updateConfigurableVariant.bind(this),\n        getLink: this.getLink.bind(this),\n        getSelectedCustomizableOptions: this.getSelectedCustomizableOptions.bind(this),\n        setBundlePrice: this.setBundlePrice.bind(this),\n        setLinkedDownloadables: this.setLinkedDownloadables.bind(this),\n        setLinkedDownloadablesPrice: this.setLinkedDownloadablesPrice.bind(this),\n        isProductInformationTabEmpty: this.isProductInformationTabEmpty.bind(this),\n        isProductAttributesTabEmpty: this.isProductAttributesTabEmpty.bind(this)\n    };\n\n    static propTypes = {\n        location: LocationType,\n        changeHeaderState: PropTypes.func.isRequired,\n        setBigOfflineNotice: PropTypes.func.isRequired,\n        changeNavigationState: PropTypes.func.isRequired,\n        updateMetaFromProduct: PropTypes.func.isRequired,\n        updateBreadcrumbs: PropTypes.func.isRequired,\n        requestProduct: PropTypes.func.isRequired,\n        isOffline: PropTypes.bool.isRequired,\n        productSKU: PropTypes.string,\n        product: ProductType.isRequired,\n        history: HistoryType.isRequired,\n        match: MatchType.isRequired,\n        goToPreviousNavigationState: PropTypes.func.isRequired,\n        navigation: PropTypes.shape(PropTypes.shape).isRequired,\n        metaTitle: PropTypes.string,\n        addRecentlyViewedProduct: PropTypes.func.isRequired,\n        store: PropTypes.string.isRequired\n    };\n\n    static defaultProps = {\n        location: { state: {} },\n        productSKU: '',\n        metaTitle: undefined\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const {\n            product: {\n                sku,\n                variants,\n                configurable_options,\n                options,\n                productOptionsData\n            },\n            location: { search }\n        } = props;\n\n        const {\n            currentProductSKU: prevSKU,\n            productOptionsData: prevOptionData\n        } = state;\n\n        const currentProductSKU = prevSKU === sku ? '' : prevSKU;\n\n        /**\n         * If the product we expect to load is loaded -\n         * reset expected SKU\n         */\n        if (!configurable_options && !variants) {\n            return {\n                currentProductSKU\n            };\n        }\n\n        const parameters = Object.entries(convertQueryStringToKeyValuePairs(search))\n            .reduce((acc, [key, value]) => {\n                if (key in configurable_options) {\n                    return { ...acc, [key]: value };\n                }\n\n                return acc;\n            }, {});\n\n        if (Object.keys(parameters).length !== Object.keys(configurable_options).length) {\n            return {\n                parameters,\n                currentProductSKU\n            };\n        }\n\n        const configurableVariantIndex = getVariantIndex(variants, parameters, true);\n\n        const newOptionsData = options.reduce((acc, { option_id, required }) => {\n            if (required) {\n                acc.push(option_id);\n            }\n\n            return acc;\n        }, []);\n\n        const prevRequiredOptions = productOptionsData?.requiredOptions || [];\n        const requiredOptions = [...prevRequiredOptions, ...newOptionsData];\n\n        return {\n            parameters,\n            currentProductSKU,\n            configurableVariantIndex,\n            productOptionsData: {\n                ...prevOptionData, ...productOptionsData, requiredOptions\n            }\n        };\n    }\n\n    componentDidMount() {\n        /**\n         * Always make sure the navigation switches into the MENU tab\n         * */\n        this.updateNavigationState();\n\n        /**\n         * Ensure transition PDP => homepage => PDP always having proper meta\n         */\n        this.updateMeta();\n\n        /**\n         * Make sure to update header state, the data-source will\n         * define the correct information to use for update\n         * (it can be a product, history state product or an empty object).\n         */\n        this.updateHeaderState();\n        this.updateBreadcrumbs();\n\n        /**\n         * Scroll page top in order to display it from the start\n         */\n        this.scrollTop();\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            isOffline,\n            productSKU,\n            product: {\n                sku,\n                options,\n                items\n            }\n        } = this.props;\n\n        const {\n            productSKU: prevProductSKU,\n            product: {\n                sku: prevSku,\n                options: prevOptions,\n                items: prevItems\n            }\n        } = prevProps;\n\n        const { sku: stateSKU } = history?.state?.state?.product || {};\n\n        if (isOffline) {\n            debounce(this.setOfflineNoticeSize, LOADING_TIME)();\n        }\n\n        /**\n         * We should also update product based data if, the URL\n         * rewrite SKU has changed to matching the product history SKU\n         * one. At this point there could be sufficient data for\n         * some updates (i.e. header state).\n         */\n        if (\n            productSKU !== prevProductSKU\n            && stateSKU === productSKU\n        ) {\n            this.updateHeaderState();\n        }\n\n        /**\n         * If the currently loaded category ID does not match the ID of\n         * category ID from URL rewrite, request category.\n         */\n        if (productSKU !== sku) {\n            this.requestProduct();\n        }\n\n        /**\n         * If product ID was changed => it is loaded => we need to\n         * update product specific information, i.e. breadcrumbs.\n         */\n        if (sku !== prevSku) {\n            this.updateBreadcrumbs();\n            this.updateHeaderState();\n            this.updateMeta();\n        }\n\n        /**\n         * LEGACY: needed to make sure required items are\n         * selected in the bundle product.\n         */\n        if (JSON.stringify(options) !== JSON.stringify(prevOptions)) {\n            this.getRequiredProductOptions(options);\n        }\n\n        /**\n         * LEGACY needed to make sure required options are\n         * selected in the customizable options product.\n         */\n        if (JSON.stringify(items) !== JSON.stringify(prevItems)) {\n            this.getRequiredProductOptions(items);\n        }\n\n        this._addToRecentlyViewedProducts();\n    }\n\n    isProductInformationTabEmpty() {\n        const dataSource = this.getDataSource();\n\n        return dataSource?.description?.html?.length === 0;\n    }\n\n    isProductAttributesTabEmpty() {\n        const dataSource = this.getDataSource();\n\n        return Object.keys(dataSource?.attributes || {}).length === 0;\n    }\n\n    _addToRecentlyViewedProducts() {\n        const {\n            product,\n            product: { sku },\n            addRecentlyViewedProduct,\n            store\n        } = this.props;\n\n        // necessary for skipping not loaded products\n        if (!sku) {\n            return;\n        }\n\n        // push into localstorage only preview of product (image, name and etc)\n        const {\n            canonical_url,\n            categories,\n            configurable_options,\n            description,\n            items,\n            meta_description,\n            meta_keyword,\n            meta_title,\n            options,\n            product_links,\n            reviews,\n            short_description,\n            variants,\n            ...productPreview\n        } = product;\n\n        addRecentlyViewedProduct(productPreview, store);\n    }\n\n    scrollTop() {\n        window.scrollTo(0, 0);\n    }\n\n    setOfflineNoticeSize = () => {\n        const { setBigOfflineNotice, productSKU } = this.props;\n        const { sku } = this.getDataSource();\n\n        /**\n         * If there is any information about the product, in example,\n         * we know it's URL-rewrite SKU is matching the product SKU -\n         * show the small offline notice, else - show larger one.\n         */\n        if (sku !== productSKU) {\n            setBigOfflineNotice(true);\n        } else {\n            setBigOfflineNotice(false);\n        }\n    };\n\n    getLink(key, value) {\n        const { location: { search, pathname } } = this.props;\n        const obj = {\n            ...convertQueryStringToKeyValuePairs(search)\n        };\n\n        if (key) {\n            obj[key] = value;\n        }\n\n        const query = objectToUri(obj);\n\n        return `${pathname}${query}`;\n    }\n\n    getRequiredProductOptions(options) {\n        const { productOptionsData } = this.state;\n\n        if (!options) {\n            return [];\n        }\n        const requiredOptions = options.reduce((acc, { option_id, required }) => {\n            if (required) {\n                acc.push(option_id);\n            }\n\n            return acc;\n        }, []);\n\n        return this.setState({\n            productOptionsData:\n                { ...productOptionsData, requiredOptions }\n        });\n    }\n\n    setLinkedDownloadablesPrice(price) {\n        this.setState({\n            selectedLinkPrice: price\n        });\n    }\n\n    setBundlePrice(prices) {\n        const { price = 0, priceExclTax = 0, finalPrice = 0 } = prices;\n        this.setState({\n            selectedInitialBundlePrice: price,\n            selectedBundlePrice: finalPrice,\n            selectedBundlePriceExclTax: priceExclTax\n        });\n    }\n\n    setLinkedDownloadables(links) {\n        const { productOptionsData } = this.state;\n        this.setState({\n            productOptionsData: {\n                ...productOptionsData, downloadableLinks: links\n            }\n        });\n    }\n\n    getSelectedCustomizableOptions(values, updateArray = false) {\n        const { productOptionsData } = this.state;\n\n        if (updateArray) {\n            this.setState({\n                productOptionsData:\n                    { ...productOptionsData, productOptionsMulti: values }\n            });\n        } else {\n            this.setState({\n                productOptionsData:\n                    { ...productOptionsData, productOptions: values }\n            });\n        }\n    }\n\n    getIsConfigurableParameterSelected(parameters, key, value) {\n        return Object.hasOwnProperty.call(parameters, key) && parameters[key] === value;\n    }\n\n    getNewParameters(key, value) {\n        const { parameters } = this.state;\n\n        // If value is already selected, than we remove the key to achieve deselection\n        if (this.getIsConfigurableParameterSelected(parameters, key, value)) {\n            const { [key]: oldValue, ...newParameters } = parameters;\n\n            return newParameters;\n        }\n\n        return {\n            ...parameters,\n            [key]: value.toString()\n        };\n    }\n\n    containerProps = () => ({\n        productOrVariant: this.getProductOrVariant(),\n        dataSource: this.getDataSource(),\n        areDetailsLoaded: this.getAreDetailsLoaded(),\n        isInformationTabEmpty: this.isProductInformationTabEmpty(),\n        isAttributesTabEmpty: this.isProductAttributesTabEmpty()\n    });\n\n    updateConfigurableVariant(key, value) {\n        const parameters = this.getNewParameters(key, value);\n        this.setState({ parameters });\n\n        this.updateUrl(key, value, parameters);\n        this.updateConfigurableVariantIndex(parameters);\n    }\n\n    updateUrl(key, value, parameters) {\n        const { location, history } = this.props;\n\n        const isParameterSelected = this.getIsConfigurableParameterSelected(parameters, key, value);\n\n        if (isParameterSelected) {\n            updateQueryParamWithoutHistory(key, value, history, location);\n        } else {\n            removeQueryParamWithoutHistory(key, history, location);\n        }\n    }\n\n    updateConfigurableVariantIndex(parameters) {\n        const { product: { variants, configurable_options } } = this.props;\n        const { configurableVariantIndex } = this.state;\n\n        const newIndex = Object.keys(parameters).length === Object.keys(configurable_options).length\n            ? getVariantIndex(variants, parameters, true)\n            // Not all parameters are selected yet, therefore variantIndex must be invalid\n            : -1;\n\n        if (configurableVariantIndex !== newIndex) {\n            this.setState({ configurableVariantIndex: newIndex });\n        }\n    }\n\n    getAreDetailsLoaded() {\n        const { product } = this.props;\n        const dataSource = this.getDataSource();\n        return dataSource === product;\n    }\n\n    getProductOrVariant() {\n        const dataSource = this.getDataSource();\n        const { variants } = dataSource;\n        const currentVariantIndex = this.getConfigurableVariantIndex(variants);\n        const variant = variants && variants[currentVariantIndex];\n\n        if (variants?.length > 0) {\n            dataSource.stock_status = variants.some((v) => v.stock_status === IN_STOCK) ? IN_STOCK : OUT_OF_STOCK;\n        }\n\n        return variant || dataSource;\n    }\n\n    getConfigurableVariantIndex(variants) {\n        const { configurableVariantIndex, parameters } = this.state;\n        const hasParameters = !!Object.keys(parameters).length;\n\n        if (configurableVariantIndex >= 0) {\n            return configurableVariantIndex;\n        }\n\n        if (variants && hasParameters) {\n            return getVariantIndex(variants, parameters, true);\n        }\n\n        return -1;\n    }\n\n    getDataSource() {\n        const {\n            productSKU,\n            product\n        } = this.props;\n\n        const { sku } = product;\n        const { product: stateProduct } = history?.state?.state || {};\n        const { sku: stateSKU } = stateProduct || {};\n\n        /**\n         * If URL rewrite requested matches loaded product SKU\n         * assume it is a data-source.\n         */\n        if (productSKU === sku) {\n            return product;\n        }\n\n        /**\n         * If URL rewrite requested matches product SKU from\n         * history state - it is a data-source.\n         */\n        if (productSKU === stateSKU) {\n            return stateProduct;\n        }\n\n        /**\n         * Else there is no place to get a up-to-date\n         * information about the product from.\n         */\n        return {};\n    }\n\n    getProductRequestFilter() {\n        const { productSKU } = this.props;\n        return { productSKU };\n    }\n\n    requestProduct() {\n        const { requestProduct, productSKU } = this.props;\n        const { currentProductSKU } = this.state;\n\n        /**\n         * If URL rewrite was not passed - do not request the product.\n         */\n        if (!productSKU) {\n            return;\n        }\n\n        /**\n         * Skip loading the same product SKU the second time\n         */\n        if (currentProductSKU === productSKU) {\n            return;\n        }\n\n        this.setState({ currentProductSKU: productSKU });\n\n        const options = {\n            isSingleProduct: true,\n            args: { filter: this.getProductRequestFilter() }\n        };\n\n        requestProduct(options);\n    }\n\n    updateNavigationState() {\n        const { changeNavigationState } = this.props;\n        changeNavigationState({ name: MENU_TAB });\n    }\n\n    updateMeta() {\n        const { updateMetaFromProduct } = this.props;\n        updateMetaFromProduct(this.getDataSource());\n    }\n\n    updateHeaderState() {\n        const { name = '' } = this.getDataSource();\n        const { changeHeaderState } = this.props;\n\n        changeHeaderState({\n            name: PDP,\n            title: name,\n            onBackClick: () => history.back()\n        });\n    }\n\n    updateBreadcrumbs() {\n        const { updateBreadcrumbs, location } = this.props;\n        const { state: { prevCategoryId = null } = {} } = location;\n        updateBreadcrumbs(this.getDataSource(), prevCategoryId);\n    }\n\n    render() {\n        return (\n            <ProductPage\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(ProductPageContainer)\n);\n"]},"metadata":{},"sourceType":"module"}