{"ast":null,"code":"import _asyncToGenerator from \"/home/arturs/scandiweb/extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport ProductListQuery from \"/home/arturs/scandiweb/extension/src/query/ProductList.query\";\nimport { updateLinkedProducts } from \"/home/arturs/scandiweb/extension/src/store/LinkedProducts/LinkedProducts.action\";\nimport { showNotification } from \"/home/arturs/scandiweb/extension/src/store/Notification/Notification.action\";\nimport BrowserDatabase from \"/home/arturs/scandiweb/extension/src/util/BrowserDatabase\";\nimport { getIndexedProduct } from \"/home/arturs/scandiweb/extension/src/util/Product\";\nimport { fetchQuery, QueryDispatcher } from \"/home/arturs/scandiweb/extension/src/util/Request\";\nimport { ONE_MONTH_IN_SECONDS } from \"/home/arturs/scandiweb/extension/src/util/Request/QueryDispatcher\";\nexport const LINKED_PRODUCTS = 'LINKED_PRODUCTS';\n/**\n * Linked Prodcts List Dispatcher\n * @class LinkedProductsDispatcher\n * @extends QueryDispatcher\n * #namespace Store/LinkedProducts/Dispatcher\n */\n\nexport const LinkedProductsDispatcher = Mosaic.middleware(class LinkedProductsDispatcher_ extends Mosaic.Extensible(QueryDispatcher) {\n  __construct() {\n    super.__construct('LinkedProducts', ONE_MONTH_IN_SECONDS);\n  }\n\n  onSuccess(data, dispatch, product_links) {\n    const linkedProducts = this._processResponse(data, product_links);\n\n    BrowserDatabase.setItem(linkedProducts, LINKED_PRODUCTS);\n    dispatch(updateLinkedProducts(linkedProducts));\n  }\n\n  onError(error, dispatch) {\n    dispatch(showNotification('error', __('Error fetching LinkedProducts!'), error));\n  }\n  /**\n   * Prepare LinkedProducts query\n   * @return {Query} ProductList query\n   * @memberof LinkedProductsDispatcher\n   * @param product_links\n   */\n\n\n  prepareRequest(product_links) {\n    const relatedSKUs = product_links.reduce(function (links, link) {\n      const {\n        linked_product_sku\n      } = link;\n      return [...links, `${linked_product_sku.replace(/ /g, '%20')}`];\n    }, []);\n    return [ProductListQuery.getQuery({\n      args: {\n        filter: {\n          productsSkuArray: relatedSKUs\n        }\n      },\n      notRequireInfo: true\n    })];\n  }\n  /**\n   * Clear linked products list\n   * @param {{productsSkuArray: Array<String>}} options A object containing different aspects of query, each item can be omitted\n   * @return {Query} ProductList query\n   * @memberof LinkedProductsDispatcher\n   */\n\n\n  clearLinkedProducts(dispatch, updateCrossSell = false) {\n    const linkedProducts = {\n      upsell: {\n        total_count: 0,\n        items: []\n      },\n      related: {\n        total_count: 0,\n        items: []\n      },\n      crosssell: {\n        total_count: 0,\n        items: []\n      }\n    };\n    BrowserDatabase.setItem(linkedProducts, LINKED_PRODUCTS);\n    dispatch(updateLinkedProducts({ ...linkedProducts,\n      updateCrossSell\n    }));\n  }\n\n  fetchCrossSellProducts(dispatch, product_links) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const query = _this.prepareRequest(product_links);\n\n      const data = yield fetchQuery(query);\n\n      const {\n        crosssell\n      } = _this._processResponse(data, product_links);\n\n      const linkedProducts = BrowserDatabase.getItem(LINKED_PRODUCTS);\n      Object.assign(linkedProducts, {\n        crosssell,\n        updateCrossSell: true\n      });\n      dispatch(updateLinkedProducts(linkedProducts));\n    })();\n  }\n\n  clearCrossSellProducts(dispatch) {\n    const linkedProducts = BrowserDatabase.getItem(LINKED_PRODUCTS) || {};\n    Object.assign(linkedProducts, {\n      crosssell: {\n        total_count: 0,\n        items: []\n      },\n      updateCrossSell: true\n    });\n    dispatch(updateLinkedProducts(linkedProducts));\n  }\n\n  _processResponse(data, product_links) {\n    const {\n      products: {\n        items\n      }\n    } = data;\n    const indexedBySku = items.reduce(function (acc, item) {\n      const {\n        sku\n      } = item;\n      acc[sku] = getIndexedProduct(item);\n      return acc;\n    }, {});\n    const linkedProducts = product_links.reduce(function (acc, link) {\n      const {\n        linked_product_sku,\n        link_type\n      } = link;\n\n      if (indexedBySku[linked_product_sku] && acc[link_type]) {\n        acc[link_type].items.push(indexedBySku[linked_product_sku]);\n        acc[link_type].total_count++;\n      }\n\n      return acc;\n    }, {\n      upsell: {\n        total_count: 0,\n        items: []\n      },\n      related: {\n        total_count: 0,\n        items: []\n      },\n      crosssell: {\n        total_count: 0,\n        items: []\n      },\n      associated: {\n        total_count: 0,\n        items: []\n      }\n    });\n    return linkedProducts;\n  }\n\n}, \"Store/LinkedProducts/Dispatcher\");\nexport default new LinkedProductsDispatcher();","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/store/LinkedProducts/LinkedProducts.dispatcher.js"],"names":["ProductListQuery","updateLinkedProducts","showNotification","BrowserDatabase","getIndexedProduct","fetchQuery","QueryDispatcher","ONE_MONTH_IN_SECONDS","LINKED_PRODUCTS","__construct","onSuccess","data","dispatch","product_links","linkedProducts","_processResponse","setItem","onError","error","__","prepareRequest","relatedSKUs","reduce","links","link","linked_product_sku","replace","getQuery","args","filter","productsSkuArray","notRequireInfo","clearLinkedProducts","updateCrossSell","upsell","total_count","items","related","crosssell","fetchCrossSellProducts","query","getItem","Object","assign","clearCrossSellProducts","products","indexedBySku","acc","item","sku","link_type","push","associated","LinkedProductsDispatcher"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport ProductListQuery from 'Query/ProductList.query';\nimport { updateLinkedProducts } from 'Store/LinkedProducts/LinkedProducts.action';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport BrowserDatabase from 'Util/BrowserDatabase';\nimport { getIndexedProduct } from 'Util/Product';\nimport { fetchQuery, QueryDispatcher } from 'Util/Request';\nimport { ONE_MONTH_IN_SECONDS } from 'Util/Request/QueryDispatcher';\n\nexport const LINKED_PRODUCTS = 'LINKED_PRODUCTS';\n\n/**\n * Linked Prodcts List Dispatcher\n * @class LinkedProductsDispatcher\n * @extends QueryDispatcher\n * @namespace Store/LinkedProducts/Dispatcher\n */\nexport class LinkedProductsDispatcher extends QueryDispatcher {\n    __construct() {\n        super.__construct('LinkedProducts', ONE_MONTH_IN_SECONDS);\n    }\n\n    onSuccess(data, dispatch, product_links) {\n        const linkedProducts = this._processResponse(data, product_links);\n\n        BrowserDatabase.setItem(linkedProducts, LINKED_PRODUCTS);\n        dispatch(updateLinkedProducts(linkedProducts));\n    }\n\n    onError(error, dispatch) {\n        dispatch(showNotification('error', __('Error fetching LinkedProducts!'), error));\n    }\n\n    /**\n     * Prepare LinkedProducts query\n     * @return {Query} ProductList query\n     * @memberof LinkedProductsDispatcher\n     * @param product_links\n     */\n    prepareRequest(product_links) {\n        const relatedSKUs = product_links.reduce((links, link) => {\n            const { linked_product_sku } = link;\n            return [...links, `${ linked_product_sku.replace(/ /g, '%20') }`];\n        }, []);\n\n        return [\n            ProductListQuery.getQuery({\n                args: {\n                    filter: {\n                        productsSkuArray: relatedSKUs\n                    }\n                },\n                notRequireInfo: true\n            })\n        ];\n    }\n\n    /**\n     * Clear linked products list\n     * @param {{productsSkuArray: Array<String>}} options A object containing different aspects of query, each item can be omitted\n     * @return {Query} ProductList query\n     * @memberof LinkedProductsDispatcher\n     */\n    clearLinkedProducts(dispatch, updateCrossSell = false) {\n        const linkedProducts = {\n            upsell: { total_count: 0, items: [] },\n            related: { total_count: 0, items: [] },\n            crosssell: { total_count: 0, items: [] }\n        };\n\n        BrowserDatabase.setItem(linkedProducts, LINKED_PRODUCTS);\n\n        dispatch(updateLinkedProducts({\n            ...linkedProducts,\n            updateCrossSell\n        }));\n    }\n\n    async fetchCrossSellProducts(dispatch, product_links) {\n        const query = this.prepareRequest(product_links);\n        const data = await fetchQuery(query);\n        const { crosssell } = this._processResponse(data, product_links);\n        const linkedProducts = BrowserDatabase.getItem(LINKED_PRODUCTS);\n\n        Object.assign(linkedProducts, {\n            crosssell,\n            updateCrossSell: true\n        });\n\n        dispatch(updateLinkedProducts(linkedProducts));\n    }\n\n    clearCrossSellProducts(dispatch) {\n        const linkedProducts = BrowserDatabase.getItem(LINKED_PRODUCTS) || {};\n\n        Object.assign(linkedProducts, {\n            crosssell: { total_count: 0, items: [] },\n            updateCrossSell: true\n        });\n\n        dispatch(updateLinkedProducts(linkedProducts));\n    }\n\n    _processResponse(data, product_links) {\n        const { products: { items } } = data;\n\n        const indexedBySku = items.reduce((acc, item) => {\n            const { sku } = item;\n            acc[sku] = getIndexedProduct(item);\n            return acc;\n        }, {});\n\n        const linkedProducts = product_links.reduce((acc, link) => {\n            const { linked_product_sku, link_type } = link;\n\n            if (indexedBySku[linked_product_sku] && acc[link_type]) {\n                acc[link_type].items.push(\n                    indexedBySku[linked_product_sku]\n                );\n\n                acc[link_type].total_count++;\n            }\n\n            return acc;\n        }, {\n            upsell: { total_count: 0, items: [] },\n            related: { total_count: 0, items: [] },\n            crosssell: { total_count: 0, items: [] },\n            associated: { total_count: 0, items: [] }\n        });\n\n        return linkedProducts;\n    }\n}\n\nexport default new LinkedProductsDispatcher();\n"]},"metadata":{},"sourceType":"module"}