{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CheckoutBilling/CheckoutBilling.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport CheckoutAddressBook from \"/home/arturs/scandiweb/scandipwa/src/component/CheckoutAddressBook\";\nimport CheckoutPayments from \"/home/arturs/scandiweb/scandipwa/src/component/CheckoutPayments\";\nimport CheckoutTermsAndConditionsPopup from \"/home/arturs/scandiweb/scandipwa/src/component/CheckoutTermsAndConditionsPopup\";\nimport Field from \"/home/arturs/scandiweb/scandipwa/src/component/Field\";\nimport Form from \"/home/arturs/scandiweb/scandipwa/src/component/Form\";\nimport { STORE_IN_PICK_UP_METHOD_CODE } from \"/home/arturs/scandiweb/scandipwa/src/component/StoreInPickUp/StoreInPickUp.config\";\nimport { BILLING_STEP } from \"/home/arturs/scandiweb/scandipwa/src/route/Checkout/Checkout.config\";\nimport { addressType } from \"/home/arturs/scandiweb/scandipwa/src/type/Account\";\nimport { paymentMethodsType } from \"/home/arturs/scandiweb/scandipwa/src/type/Checkout\";\nimport { TotalsType } from \"/home/arturs/scandiweb/scandipwa/src/type/MiniCart\";\nimport { formatPrice } from \"/home/arturs/scandiweb/scandipwa/src/util/Price\";\nimport \"./CheckoutBilling.style\";\n/** #namespace Component/CheckoutBilling/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CheckoutBilling = Mosaic.middleware((_temp = _class = class CheckoutBilling_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      isOrderButtonVisible: true,\n      isOrderButtonEnabled: true,\n      isTermsAndConditionsAccepted: false\n    };\n\n    this.setOrderButtonVisibility = function (isOrderButtonVisible) {\n      _this.setState({\n        isOrderButtonVisible\n      });\n    };\n\n    this.setOrderButtonEnableStatus = function (isOrderButtonEnabled) {\n      _this.setState({\n        isOrderButtonEnabled\n      });\n    };\n\n    this.setTACAccepted = function () {\n      _this.setState(function ({\n        isTermsAndConditionsAccepted: oldIsTACAccepted\n      }) {\n        return {\n          isTermsAndConditionsAccepted: !oldIsTACAccepted\n        };\n      });\n    };\n\n    this.handleShowPopup = function (e) {\n      const {\n        showPopup\n      } = _this.props;\n      e.preventDefault();\n      showPopup();\n    };\n  }\n\n  componentDidMount() {\n    const {\n      termsAreEnabled\n    } = this.props;\n\n    if (!termsAreEnabled) {\n      this.setState({\n        isOrderButtonEnabled: true\n      });\n    }\n  }\n\n  renderTermsAndConditions() {\n    const {\n      termsAreEnabled,\n      termsAndConditions\n    } = this.props;\n    const {\n      checkbox_text = __('I agree to terms and conditions')\n    } = termsAndConditions[0] || {};\n    const {\n      isTermsAndConditionsAccepted\n    } = this.state;\n\n    if (!termsAreEnabled) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"CheckoutBilling\",\n      elem: \"TermsAndConditions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"label\", {\n      block: \"CheckoutBilling\",\n      elem: \"TACLabel\",\n      htmlFor: \"termsAndConditions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, checkbox_text, /*#__PURE__*/_checkBEM(React, \"button\", {\n      block: \"CheckoutBilling\",\n      elem: \"TACLink\",\n      onClick: this.handleShowPopup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, __('read more'))), /*#__PURE__*/_checkBEM(React, Field, {\n      id: \"termsAndConditions\",\n      name: \"termsAndConditions\",\n      type: \"checkbox\",\n      value: \"termsAndConditions\",\n      mix: {\n        block: 'CheckoutBilling',\n        elem: 'TermsAndConditions-Checkbox'\n      },\n      checked: isTermsAndConditionsAccepted,\n      onChange: this.setTACAccepted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderOrderTotalExlTax() {\n    const {\n      cartTotalSubPrice,\n      totals: {\n        quote_currency_code\n      }\n    } = this.props;\n\n    if (!cartTotalSubPrice) {\n      return null;\n    }\n\n    const orderTotalExlTax = formatPrice(cartTotalSubPrice, quote_currency_code);\n    return /*#__PURE__*/_checkBEM(React, \"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, `${__('Excl. tax:')} ${orderTotalExlTax}`);\n  }\n\n  renderOrderTotal() {\n    const {\n      totals: {\n        grand_total,\n        quote_currency_code\n      }\n    } = this.props;\n    const orderTotal = formatPrice(grand_total, quote_currency_code);\n    return /*#__PURE__*/_checkBEM(React, \"dl\", {\n      block: \"Checkout\",\n      elem: \"OrderTotal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"dt\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, __('Order total:')), /*#__PURE__*/_checkBEM(React, \"dd\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, orderTotal, this.renderOrderTotalExlTax()));\n  }\n\n  renderActions() {\n    const {\n      isOrderButtonVisible,\n      isOrderButtonEnabled,\n      isTermsAndConditionsAccepted\n    } = this.state;\n    const {\n      termsAreEnabled\n    } = this.props;\n\n    if (!isOrderButtonVisible) {\n      return null;\n    } // if terms and conditions are enabled, validate for acceptance\n\n\n    const isDisabled = termsAreEnabled ? !isOrderButtonEnabled || !isTermsAndConditionsAccepted : !isOrderButtonEnabled;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"Checkout\",\n      elem: \"StickyButtonWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, this.renderOrderTotal(), /*#__PURE__*/_checkBEM(React, \"button\", {\n      type: \"submit\",\n      block: \"Button\",\n      disabled: isDisabled,\n      mix: {\n        block: 'CheckoutBilling',\n        elem: 'Button'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, __('Complete order')));\n  }\n\n  renderAddressBook() {\n    const {\n      onAddressSelect,\n      isSameAsShipping,\n      totals: {\n        is_virtual\n      }\n    } = this.props;\n\n    if (isSameAsShipping && !is_virtual) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, CheckoutAddressBook, {\n      onAddressSelect: onAddressSelect,\n      isBilling: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderSameAsShippingCheckbox() {\n    const {\n      isSameAsShipping,\n      onSameAsShippingChange,\n      totals: {\n        is_virtual\n      },\n      selectedShippingMethod\n    } = this.props;\n\n    if (is_virtual) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, Field, {\n      id: \"sameAsShippingAddress\",\n      name: \"sameAsShippingAddress\",\n      type: \"checkbox\",\n      label: __('My billing and shipping are the same'),\n      value: \"sameAsShippingAddress\",\n      mix: {\n        block: 'CheckoutBilling',\n        elem: 'Checkbox'\n      },\n      checked: isSameAsShipping && selectedShippingMethod !== STORE_IN_PICK_UP_METHOD_CODE,\n      onChange: onSameAsShippingChange,\n      isDisabled: selectedShippingMethod === STORE_IN_PICK_UP_METHOD_CODE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderAddresses() {\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, this.renderSameAsShippingCheckbox(), this.renderAddressBook());\n  }\n\n  renderPayments() {\n    const {\n      paymentMethods,\n      onPaymentMethodSelect,\n      setLoading,\n      setDetailsStep,\n      shippingAddress\n    } = this.props;\n\n    if (!paymentMethods.length) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, CheckoutPayments, {\n      setLoading: setLoading,\n      setDetailsStep: setDetailsStep,\n      paymentMethods: paymentMethods,\n      onPaymentMethodSelect: onPaymentMethodSelect,\n      setOrderButtonVisibility: this.setOrderButtonVisibility,\n      billingAddress: shippingAddress,\n      setOrderButtonEnableStatus: this.setOrderButtonEnableStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderPopup() {\n    return /*#__PURE__*/_checkBEM(React, CheckoutTermsAndConditionsPopup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 16\n      }\n    });\n  }\n\n  render() {\n    const {\n      onBillingSuccess,\n      onBillingError\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, Form, {\n      mix: {\n        block: 'CheckoutBilling'\n      },\n      id: BILLING_STEP,\n      onSubmitError: onBillingError,\n      onSubmitSuccess: onBillingSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }\n    }, this.renderAddresses(), this.renderPayments(), this.renderTermsAndConditions(), this.renderActions(), this.renderPopup());\n  }\n\n}, _class.propTypes = {\n  setLoading: PropTypes.func.isRequired,\n  setDetailsStep: PropTypes.func.isRequired,\n  isSameAsShipping: PropTypes.bool.isRequired,\n  termsAreEnabled: PropTypes.bool,\n  onSameAsShippingChange: PropTypes.func.isRequired,\n  onPaymentMethodSelect: PropTypes.func.isRequired,\n  onBillingSuccess: PropTypes.func.isRequired,\n  onBillingError: PropTypes.func.isRequired,\n  onAddressSelect: PropTypes.func.isRequired,\n  showPopup: PropTypes.func.isRequired,\n  paymentMethods: paymentMethodsType.isRequired,\n  totals: TotalsType.isRequired,\n  cartTotalSubPrice: PropTypes.number,\n  shippingAddress: addressType.isRequired,\n  termsAndConditions: PropTypes.arrayOf(PropTypes.shape({\n    checkbox_text: PropTypes.string\n  })).isRequired,\n  selectedShippingMethod: PropTypes.string.isRequired\n}, _class.defaultProps = {\n  termsAreEnabled: false,\n  cartTotalSubPrice: null\n}, _temp), \"Component/CheckoutBilling/Component\");\nexport default CheckoutBilling;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CheckoutBilling/CheckoutBilling.component.js"],"names":["PropTypes","PureComponent","CheckoutAddressBook","CheckoutPayments","CheckoutTermsAndConditionsPopup","Field","Form","STORE_IN_PICK_UP_METHOD_CODE","BILLING_STEP","addressType","paymentMethodsType","TotalsType","formatPrice","state","isOrderButtonVisible","isOrderButtonEnabled","isTermsAndConditionsAccepted","setOrderButtonVisibility","setState","setOrderButtonEnableStatus","setTACAccepted","oldIsTACAccepted","handleShowPopup","e","showPopup","props","preventDefault","componentDidMount","termsAreEnabled","renderTermsAndConditions","termsAndConditions","checkbox_text","__","block","elem","renderOrderTotalExlTax","cartTotalSubPrice","totals","quote_currency_code","orderTotalExlTax","renderOrderTotal","grand_total","orderTotal","renderActions","isDisabled","renderAddressBook","onAddressSelect","isSameAsShipping","is_virtual","renderSameAsShippingCheckbox","onSameAsShippingChange","selectedShippingMethod","renderAddresses","renderPayments","paymentMethods","onPaymentMethodSelect","setLoading","setDetailsStep","shippingAddress","length","renderPopup","render","onBillingSuccess","onBillingError","propTypes","func","isRequired","bool","number","arrayOf","shape","string","defaultProps","CheckoutBilling"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CheckoutAddressBook from 'Component/CheckoutAddressBook';\nimport CheckoutPayments from 'Component/CheckoutPayments';\nimport CheckoutTermsAndConditionsPopup from 'Component/CheckoutTermsAndConditionsPopup';\nimport Field from 'Component/Field';\nimport Form from 'Component/Form';\nimport { STORE_IN_PICK_UP_METHOD_CODE } from 'Component/StoreInPickUp/StoreInPickUp.config';\nimport { BILLING_STEP } from 'Route/Checkout/Checkout.config';\nimport { addressType } from 'Type/Account';\nimport { paymentMethodsType } from 'Type/Checkout';\nimport { TotalsType } from 'Type/MiniCart';\nimport { formatPrice } from 'Util/Price';\n\nimport './CheckoutBilling.style';\n\n/** @namespace Component/CheckoutBilling/Component */\nexport class CheckoutBilling extends PureComponent {\n    state = {\n        isOrderButtonVisible: true,\n        isOrderButtonEnabled: true,\n        isTermsAndConditionsAccepted: false\n    };\n\n    static propTypes = {\n        setLoading: PropTypes.func.isRequired,\n        setDetailsStep: PropTypes.func.isRequired,\n        isSameAsShipping: PropTypes.bool.isRequired,\n        termsAreEnabled: PropTypes.bool,\n        onSameAsShippingChange: PropTypes.func.isRequired,\n        onPaymentMethodSelect: PropTypes.func.isRequired,\n        onBillingSuccess: PropTypes.func.isRequired,\n        onBillingError: PropTypes.func.isRequired,\n        onAddressSelect: PropTypes.func.isRequired,\n        showPopup: PropTypes.func.isRequired,\n        paymentMethods: paymentMethodsType.isRequired,\n        totals: TotalsType.isRequired,\n        cartTotalSubPrice: PropTypes.number,\n        shippingAddress: addressType.isRequired,\n        termsAndConditions: PropTypes.arrayOf(PropTypes.shape({\n            checkbox_text: PropTypes.string\n        })).isRequired,\n        selectedShippingMethod: PropTypes.string.isRequired\n    };\n\n    static defaultProps = {\n        termsAreEnabled: false,\n        cartTotalSubPrice: null\n    };\n\n    componentDidMount() {\n        const { termsAreEnabled } = this.props;\n        if (!termsAreEnabled) {\n            this.setState({ isOrderButtonEnabled: true });\n        }\n    }\n\n    setOrderButtonVisibility = (isOrderButtonVisible) => {\n        this.setState({ isOrderButtonVisible });\n    };\n\n    setOrderButtonEnableStatus = (isOrderButtonEnabled) => {\n        this.setState({ isOrderButtonEnabled });\n    };\n\n    setTACAccepted = () => {\n        this.setState(({ isTermsAndConditionsAccepted: oldIsTACAccepted }) => ({\n            isTermsAndConditionsAccepted: !oldIsTACAccepted\n        }));\n    };\n\n    handleShowPopup = (e) => {\n        const { showPopup } = this.props;\n        e.preventDefault();\n        showPopup();\n    };\n\n    renderTermsAndConditions() {\n        const {\n            termsAreEnabled,\n            termsAndConditions\n        } = this.props;\n\n        const {\n            checkbox_text = __('I agree to terms and conditions')\n        } = termsAndConditions[0] || {};\n\n        const { isTermsAndConditionsAccepted } = this.state;\n\n        if (!termsAreEnabled) {\n            return null;\n        }\n\n        return (\n            <div\n              block=\"CheckoutBilling\"\n              elem=\"TermsAndConditions\"\n            >\n                <label\n                  block=\"CheckoutBilling\"\n                  elem=\"TACLabel\"\n                  htmlFor=\"termsAndConditions\"\n                >\n                    { checkbox_text }\n                    <button\n                      block=\"CheckoutBilling\"\n                      elem=\"TACLink\"\n                      onClick={ this.handleShowPopup }\n                    >\n                        { __('read more') }\n                    </button>\n                </label>\n                <Field\n                  id=\"termsAndConditions\"\n                  name=\"termsAndConditions\"\n                  type=\"checkbox\"\n                  value=\"termsAndConditions\"\n                  mix={ { block: 'CheckoutBilling', elem: 'TermsAndConditions-Checkbox' } }\n                  checked={ isTermsAndConditionsAccepted }\n                  onChange={ this.setTACAccepted }\n                />\n            </div>\n        );\n    }\n\n    renderOrderTotalExlTax() {\n        const {\n            cartTotalSubPrice,\n            totals: { quote_currency_code }\n        } = this.props;\n\n        if (!cartTotalSubPrice) {\n            return null;\n        }\n\n        const orderTotalExlTax = formatPrice(cartTotalSubPrice, quote_currency_code);\n\n        return (\n            <span>\n                { `${ __('Excl. tax:') } ${ orderTotalExlTax }` }\n            </span>\n        );\n    }\n\n    renderOrderTotal() {\n        const { totals: { grand_total, quote_currency_code } } = this.props;\n\n        const orderTotal = formatPrice(grand_total, quote_currency_code);\n\n        return (\n            <dl block=\"Checkout\" elem=\"OrderTotal\">\n                <dt>\n                    { __('Order total:') }\n                </dt>\n                <dd>\n                    { orderTotal }\n                    { this.renderOrderTotalExlTax() }\n                </dd>\n            </dl>\n        );\n    }\n\n    renderActions() {\n        const {\n            isOrderButtonVisible,\n            isOrderButtonEnabled,\n            isTermsAndConditionsAccepted\n        } = this.state;\n\n        const { termsAreEnabled } = this.props;\n\n        if (!isOrderButtonVisible) {\n            return null;\n        }\n\n        // if terms and conditions are enabled, validate for acceptance\n        const isDisabled = termsAreEnabled\n            ? !isOrderButtonEnabled || !isTermsAndConditionsAccepted\n            : !isOrderButtonEnabled;\n\n        return (\n            <div block=\"Checkout\" elem=\"StickyButtonWrapper\">\n                { this.renderOrderTotal() }\n                <button\n                  type=\"submit\"\n                  block=\"Button\"\n                  disabled={ isDisabled }\n                  mix={ { block: 'CheckoutBilling', elem: 'Button' } }\n                >\n                    { __('Complete order') }\n                </button>\n            </div>\n        );\n    }\n\n    renderAddressBook() {\n        const {\n            onAddressSelect,\n            isSameAsShipping,\n            totals: { is_virtual }\n        } = this.props;\n\n        if (isSameAsShipping && !is_virtual) {\n            return null;\n        }\n\n        return (\n            <CheckoutAddressBook\n              onAddressSelect={ onAddressSelect }\n              isBilling\n            />\n        );\n    }\n\n    renderSameAsShippingCheckbox() {\n        const {\n            isSameAsShipping,\n            onSameAsShippingChange,\n            totals: { is_virtual },\n            selectedShippingMethod\n        } = this.props;\n\n        if (is_virtual) {\n            return null;\n        }\n\n        return (\n            <Field\n              id=\"sameAsShippingAddress\"\n              name=\"sameAsShippingAddress\"\n              type=\"checkbox\"\n              label={ __('My billing and shipping are the same') }\n              value=\"sameAsShippingAddress\"\n              mix={ { block: 'CheckoutBilling', elem: 'Checkbox' } }\n              checked={ isSameAsShipping && selectedShippingMethod !== STORE_IN_PICK_UP_METHOD_CODE }\n              onChange={ onSameAsShippingChange }\n              isDisabled={ selectedShippingMethod === STORE_IN_PICK_UP_METHOD_CODE }\n            />\n        );\n    }\n\n    renderAddresses() {\n        return (\n            <>\n                { this.renderSameAsShippingCheckbox() }\n                { this.renderAddressBook() }\n            </>\n        );\n    }\n\n    renderPayments() {\n        const {\n            paymentMethods,\n            onPaymentMethodSelect,\n            setLoading,\n            setDetailsStep,\n            shippingAddress\n        } = this.props;\n\n        if (!paymentMethods.length) {\n            return null;\n        }\n\n        return (\n            <CheckoutPayments\n              setLoading={ setLoading }\n              setDetailsStep={ setDetailsStep }\n              paymentMethods={ paymentMethods }\n              onPaymentMethodSelect={ onPaymentMethodSelect }\n              setOrderButtonVisibility={ this.setOrderButtonVisibility }\n              billingAddress={ shippingAddress }\n              setOrderButtonEnableStatus={ this.setOrderButtonEnableStatus }\n            />\n        );\n    }\n\n    renderPopup() {\n        return <CheckoutTermsAndConditionsPopup />;\n    }\n\n    render() {\n        const { onBillingSuccess, onBillingError } = this.props;\n\n        return (\n            <Form\n              mix={ { block: 'CheckoutBilling' } }\n              id={ BILLING_STEP }\n              onSubmitError={ onBillingError }\n              onSubmitSuccess={ onBillingSuccess }\n            >\n                { this.renderAddresses() }\n                { this.renderPayments() }\n                { this.renderTermsAndConditions() }\n                { this.renderActions() }\n                { this.renderPopup() }\n            </Form>\n        );\n    }\n}\n\nexport default CheckoutBilling;\n"]},"metadata":{},"sourceType":"module"}