{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/CurrencySwitcher/CurrencySwitcher.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport Field from \"/home/arturs/scandiweb/extension/src/component/Field\";\nimport { getCurrency } from \"/home/arturs/scandiweb/extension/src/util/Currency\";\nimport \"./CurrencySwitcher.style\";\n/** #namespace Component/CurrencySwitcher/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CurrencySwitcher = Mosaic.middleware((_temp = _class = class CurrencySwitcher_ extends Mosaic.Extensible(PureComponent) {\n  getCurrencyValue() {\n    const {\n      currencyData: {\n        available_currencies_data: availableCurrencies,\n        current_currency_code: currentCurrencyCode\n      } = {}\n    } = this.props; // check whether user’s selected currency is among available currencies for current store,\n    // otherwise use default currency for current store.\n\n    const currency = getCurrency();\n    const value = availableCurrencies.some(function (e) {\n      return e.id === currency;\n    }) ? currency : currentCurrencyCode;\n    return value;\n  }\n\n  render() {\n    const {\n      handleCurrencySelect,\n      currencyData: {\n        available_currencies_data: availableCurrencies\n      } = {}\n    } = this.props;\n\n    if (availableCurrencies && availableCurrencies.length > 1) {\n      return /*#__PURE__*/_checkBEM(React, \"div\", {\n        block: \"CurrencySwitcher\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/_checkBEM(React, Field, {\n        id: \"CurrencySwitcherList\",\n        name: \"CurrencySwitcherList\",\n        type: \"select\",\n        selectOptions: availableCurrencies,\n        value: this.getCurrencyValue(),\n        onChange: handleCurrencySelect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return null;\n  }\n\n}, _class.propTypes = {\n  currencyData: PropTypes.shape({\n    available_currencies_data: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n    current_currency_code: PropTypes.string\n  }).isRequired,\n  handleCurrencySelect: PropTypes.func.isRequired\n}, _temp), \"Component/CurrencySwitcher/Component\");\nexport default CurrencySwitcher;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/CurrencySwitcher/CurrencySwitcher.component.js"],"names":["PropTypes","PureComponent","Field","getCurrency","getCurrencyValue","currencyData","available_currencies_data","availableCurrencies","current_currency_code","currentCurrencyCode","props","currency","value","some","e","id","render","handleCurrencySelect","length","propTypes","shape","arrayOf","objectOf","string","isRequired","func","CurrencySwitcher"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,KAAP;AACA,SAASC,WAAT;AAEA;AAEA;;;;AACA,sHAAsCF,aAAtC,EAAoD;AAahDG,EAAAA,gBAAgB,GAAG;AACf,UAAM;AACFC,MAAAA,YAAY,EAAE;AACVC,QAAAA,yBAAyB,EAAEC,mBADjB;AAEVC,QAAAA,qBAAqB,EAAEC;AAFb,UAGV;AAJF,QAKF,KAAKC,KALT,CADe,CAQf;AACA;;AACA,UAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,UAAMS,KAAK,GAAGL,mBAAmB,CAACM,IAApB,CAAyB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,EAAF,KAASJ,QAAhB;AAAA,KAAzB,IAAqDA,QAArD,GAAgEF,mBAA9E;AAEA,WAAOG,KAAP;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,oBADE;AAEFZ,MAAAA,YAAY,EAAE;AACVC,QAAAA,yBAAyB,EAAEC;AADjB,UAEV;AAJF,QAKF,KAAKG,KALT;;AAOA,QAAIH,mBAAmB,IAAIA,mBAAmB,CAACW,MAApB,GAA6B,CAAxD,EAA2D;AACvD;AACS,QAAA,KAAK,EAAC,kBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAES,KAFT;AAGU,QAAA,EAAE,EAAC,sBAHb;AAIU,QAAA,IAAI,EAAC,sBAJf;AAKU,QAAA,IAAI,EAAC,QALf;AAMU,QAAA,aAAa,EAAGX,mBAN1B;AAOU,QAAA,KAAK,EAAG,KAAKH,gBAAL,EAPlB;AAQU,QAAA,QAAQ,EAAGa,oBARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYH;;AAED,WAAO,IAAP;AACH;;AArD+C,CAApD,SACWE,SADX,GACuB;AACfd,EAAAA,YAAY,EAAEL,SAAS,CAACoB,KAAV,CAAgB;AAC1Bd,IAAAA,yBAAyB,EAAEN,SAAS,CAACqB,OAAV,CACvBrB,SAAS,CAACsB,QAAV,CACItB,SAAS,CAACuB,MADd,CADuB,CADD;AAM1Bf,IAAAA,qBAAqB,EAAER,SAAS,CAACuB;AANP,GAAhB,EAOXC,UARY;AASfP,EAAAA,oBAAoB,EAAEjB,SAAS,CAACyB,IAAV,CAAeD;AATtB,CADvB;AAwDA,eAAeE,gBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Field from 'Component/Field';\nimport { getCurrency } from 'Util/Currency';\n\nimport './CurrencySwitcher.style';\n\n/** @namespace Component/CurrencySwitcher/Component */\nexport class CurrencySwitcher extends PureComponent {\n    static propTypes = {\n        currencyData: PropTypes.shape({\n            available_currencies_data: PropTypes.arrayOf(\n                PropTypes.objectOf(\n                    PropTypes.string\n                )\n            ),\n            current_currency_code: PropTypes.string\n        }).isRequired,\n        handleCurrencySelect: PropTypes.func.isRequired\n    };\n\n    getCurrencyValue() {\n        const {\n            currencyData: {\n                available_currencies_data: availableCurrencies,\n                current_currency_code: currentCurrencyCode\n            } = {}\n        } = this.props;\n\n        // check whether user’s selected currency is among available currencies for current store,\n        // otherwise use default currency for current store.\n        const currency = getCurrency();\n        const value = availableCurrencies.some((e) => e.id === currency) ? currency : currentCurrencyCode;\n\n        return value;\n    }\n\n    render() {\n        const {\n            handleCurrencySelect,\n            currencyData: {\n                available_currencies_data: availableCurrencies\n            } = {}\n        } = this.props;\n\n        if (availableCurrencies && availableCurrencies.length > 1) {\n            return (\n                <div block=\"CurrencySwitcher\">\n                    <Field\n                      id=\"CurrencySwitcherList\"\n                      name=\"CurrencySwitcherList\"\n                      type=\"select\"\n                      selectOptions={ availableCurrencies }\n                      value={ this.getCurrencyValue() }\n                      onChange={ handleCurrencySelect }\n                    />\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default CurrencySwitcher;\n"]},"metadata":{},"sourceType":"module"}