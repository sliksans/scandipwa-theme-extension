{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/InstallPrompt/InstallPrompt.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { DeviceType } from \"/home/arturs/scandiweb/extension/src/type/Device\";\nimport BrowserDatabase from \"/home/arturs/scandiweb/extension/src/util/BrowserDatabase\";\nimport InstallPrompt from \"./InstallPrompt.component\";\n/** #namespace Component/InstallPrompt/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    device: state.ConfigReducer.device\n  };\n}, \"Component/InstallPrompt/Container/mapStateToProps\");\n/** #namespace Component/InstallPrompt/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {};\n}, \"Component/InstallPrompt/Container/mapDispatchToProps\");\n/** #namespace Component/InstallPrompt/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const InstallPromptContainer = Mosaic.middleware((_temp = _class = class InstallPromptContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isBannerClosed: !!BrowserDatabase.getItem('postpone_installation'),\n      hasInstallPromptEvent: false\n    };\n    this.containerFunctions = {\n      handleAppInstall: this.handleAppInstall.bind(this),\n      handleBannerClose: this.handleBannerClose.bind(this)\n    };\n  }\n\n  componentDidMount() {\n    this.listenForInstallPrompt();\n  }\n\n  handleAppInstall() {\n    var _this = this;\n\n    if (!window.promt_event) {\n      return;\n    } // Show the modal add to home screen dialog\n\n\n    window.promt_event.prompt(); // Wait for the user to respond to the prompt\n\n    window.promt_event.userChoice.then(\n    /** #namespace Component/InstallPrompt/Container/then */\n    Mosaic.middleware(function (choice) {\n      if (choice.outcome === 'accepted') {\n        _this.setState({\n          isBannerClosed: true\n        });\n      } // Clear the saved prompt since it can't be used again\n\n\n      window.promt_event = null;\n\n      _this.setState({\n        hasInstallPromptEvent: false\n      });\n    }, \"Component/InstallPrompt/Container/then\"));\n  }\n\n  handleBannerClose() {\n    this.setState({\n      isBannerClosed: true\n    });\n    const THREE_DAYS_IN_SECONDS = '259200';\n    BrowserDatabase.setItem(true, 'postpone_installation', THREE_DAYS_IN_SECONDS);\n  }\n\n  listenForInstallPrompt() {\n    var _this2 = this;\n\n    window.addEventListener('beforeinstallprompt', function (event) {\n      event.preventDefault();\n      window.promt_event = Object.assign(event);\n\n      _this2.setState({\n        hasInstallPromptEvent: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, InstallPrompt, Object.assign({}, this.props, this.state, {\n      containerFunctions: this.containerFunctions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  device: DeviceType.isRequired\n}, _temp), \"Component/InstallPrompt/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(InstallPromptContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/InstallPrompt/InstallPrompt.container.js"],"names":["PureComponent","connect","DeviceType","BrowserDatabase","InstallPrompt","mapStateToProps","state","device","ConfigReducer","mapDispatchToProps","dispatch","isBannerClosed","getItem","hasInstallPromptEvent","containerFunctions","handleAppInstall","bind","handleBannerClose","componentDidMount","listenForInstallPrompt","window","promt_event","prompt","userChoice","then","choice","outcome","setState","THREE_DAYS_IN_SECONDS","setItem","addEventListener","event","preventDefault","Object","assign","render","props","propTypes","isRequired","InstallPromptContainer"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT;AACA,OAAOC,eAAP;AAEA,OAAOC,aAAP;AAEA;;AACA,OAAO,MAAMC,eAAe,qBAAG,UAACC,KAAD;AAAA,SAAY;AACvCC,IAAAA,MAAM,EAAED,KAAK,CAACE,aAAN,CAAoBD;AADW,GAAZ;AAAA,CAAH,sDAArB;AAIP;AACA;;AACA,OAAO,MAAME,kBAAkB,qBAAG,UAACC,QAAD;AAAA,SAAe,EAAf;AAAA,CAAH,yDAAxB;AAEP;;;;AACA,kIAA4CV,aAA5C,EAA0D;AAAA;AAAA;AAAA,SAKtDM,KALsD,GAK9C;AACJK,MAAAA,cAAc,EAAE,CAAC,CAACR,eAAe,CAACS,OAAhB,CAAwB,uBAAxB,CADd;AAEJC,MAAAA,qBAAqB,EAAE;AAFnB,KAL8C;AAAA,SAUtDC,kBAVsD,GAUjC;AACjBC,MAAAA,gBAAgB,EAAE,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CADD;AAEjBC,MAAAA,iBAAiB,EAAE,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B;AAFF,KAViC;AAAA;;AAetDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,sBAAL;AACH;;AAEDJ,EAAAA,gBAAgB,GAAG;AAAA;;AACf,QAAI,CAACK,MAAM,CAACC,WAAZ,EAAyB;AACrB;AACH,KAHc,CAKf;;;AACAD,IAAAA,MAAM,CAACC,WAAP,CAAmBC,MAAnB,GANe,CAQf;;AACAF,IAAAA,MAAM,CAACC,WAAP,CAAmBE,UAAnB,CAA8BC,IAA9B;AACI;AADJ,sBAEI,UAACC,MAAD,EAAY;AACR,UAAIA,MAAM,CAACC,OAAP,KAAmB,UAAvB,EAAmC;AAC/B,QAAA,KAAI,CAACC,QAAL,CAAc;AAAEhB,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACH,OAHO,CAKR;;;AACAS,MAAAA,MAAM,CAACC,WAAP,GAAqB,IAArB;;AACA,MAAA,KAAI,CAACM,QAAL,CAAc;AAAEd,QAAAA,qBAAqB,EAAE;AAAzB,OAAd;AACH,KAVL;AAYH;;AAEDI,EAAAA,iBAAiB,GAAG;AAChB,SAAKU,QAAL,CAAc;AAAEhB,MAAAA,cAAc,EAAE;AAAlB,KAAd;AACA,UAAMiB,qBAAqB,GAAG,QAA9B;AACAzB,IAAAA,eAAe,CAAC0B,OAAhB,CAAwB,IAAxB,EAA8B,uBAA9B,EAAuDD,qBAAvD;AACH;;AAEDT,EAAAA,sBAAsB,GAAG;AAAA;;AACrBC,IAAAA,MAAM,CAACU,gBAAP,CAAwB,qBAAxB,EAA+C,UAACC,KAAD,EAAW;AACtDA,MAAAA,KAAK,CAACC,cAAN;AACAZ,MAAAA,MAAM,CAACC,WAAP,GAAqBY,MAAM,CAACC,MAAP,CAAcH,KAAd,CAArB;;AACA,MAAA,MAAI,CAACJ,QAAL,CAAc;AAAEd,QAAAA,qBAAqB,EAAE;AAAzB,OAAd;AACH,KAJD;AAKH;;AAEDsB,EAAAA,MAAM,GAAG;AACL,yCACK,aADL,oBAEW,KAAKC,KAFhB,EAGW,KAAK9B,KAHhB;AAIM,MAAA,kBAAkB,EAAG,KAAKQ,kBAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOH;;AAhEqD,CAA1D,SACWuB,SADX,GACuB;AACf9B,EAAAA,MAAM,EAAEL,UAAU,CAACoC;AADJ,CADvB;AAmEA,eAAerC,OAAO,CAACI,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C8B,sBAA7C,CAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { DeviceType } from 'Type/Device';\nimport BrowserDatabase from 'Util/BrowserDatabase';\n\nimport InstallPrompt from './InstallPrompt.component';\n\n/** @namespace Component/InstallPrompt/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device\n});\n\n/** @namespace Component/InstallPrompt/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({});\n\n/** @namespace Component/InstallPrompt/Container */\nexport class InstallPromptContainer extends PureComponent {\n    static propTypes = {\n        device: DeviceType.isRequired\n    };\n\n    state = {\n        isBannerClosed: !!BrowserDatabase.getItem('postpone_installation'),\n        hasInstallPromptEvent: false\n    };\n\n    containerFunctions = {\n        handleAppInstall: this.handleAppInstall.bind(this),\n        handleBannerClose: this.handleBannerClose.bind(this)\n    };\n\n    componentDidMount() {\n        this.listenForInstallPrompt();\n    }\n\n    handleAppInstall() {\n        if (!window.promt_event) {\n            return;\n        }\n\n        // Show the modal add to home screen dialog\n        window.promt_event.prompt();\n\n        // Wait for the user to respond to the prompt\n        window.promt_event.userChoice.then(\n            /** @namespace Component/InstallPrompt/Container/then */\n            (choice) => {\n                if (choice.outcome === 'accepted') {\n                    this.setState({ isBannerClosed: true });\n                }\n\n                // Clear the saved prompt since it can't be used again\n                window.promt_event = null;\n                this.setState({ hasInstallPromptEvent: false });\n            }\n        );\n    }\n\n    handleBannerClose() {\n        this.setState({ isBannerClosed: true });\n        const THREE_DAYS_IN_SECONDS = '259200';\n        BrowserDatabase.setItem(true, 'postpone_installation', THREE_DAYS_IN_SECONDS);\n    }\n\n    listenForInstallPrompt() {\n        window.addEventListener('beforeinstallprompt', (event) => {\n            event.preventDefault();\n            window.promt_event = Object.assign(event);\n            this.setState({ hasInstallPromptEvent: true });\n        });\n    }\n\n    render() {\n        return (\n            <InstallPrompt\n              { ...this.props }\n              { ...this.state }\n              containerFunctions={ this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstallPromptContainer);\n"]},"metadata":{},"sourceType":"module"}