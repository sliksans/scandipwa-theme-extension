{"ast":null,"code":"var _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CurrencySwitcher/CurrencySwitcher.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { connect } from 'react-redux';\nimport { ConfigDispatcher } from \"/home/arturs/scandiweb/scandipwa/src/store/Config/Config.dispatcher\";\nimport DataContainer from \"/home/arturs/scandiweb/scandipwa/src/util/Request/DataContainer\";\nimport CurrencySwitcher from \"./CurrencySwitcher.component\";\n/** #namespace Component/CurrencySwitcher/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    currencyData: state.ConfigReducer.currencyData\n  };\n}, \"Component/CurrencySwitcher/Container/mapStateToProps\");\n/** #namespace Component/CurrencySwitcher/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    updateCurrency: function (options) {\n      return ConfigDispatcher.updateCurrency(dispatch, options);\n    }\n  };\n}, \"Component/CurrencySwitcher/Container/mapDispatchToProps\");\n/** #namespace Component/CurrencySwitcher/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CurrencySwitcherContainer = Mosaic.middleware(class CurrencySwitcherContainer_ extends Mosaic.Extensible(DataContainer) {\n  constructor(...args) {\n    super(...args);\n    this.containerFunctions = {\n      handleCurrencySelect: this._handleCurrencySelect.bind(this)\n    };\n  }\n\n  _handleCurrencySelect(currencyCode) {\n    const {\n      updateCurrency\n    } = this.props;\n    updateCurrency({\n      currencyCode\n    }).then(\n    /** #namespace Component/CurrencySwitcher/Container/updateCurrencyThen */\n    Mosaic.middleware(function () {\n      return location.reload();\n    }, \"Component/CurrencySwitcher/Container/updateCurrencyThen\"));\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, CurrencySwitcher, Object.assign({}, this.containerFunctions, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, \"Component/CurrencySwitcher/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencySwitcherContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CurrencySwitcher/CurrencySwitcher.container.js"],"names":["connect","ConfigDispatcher","DataContainer","CurrencySwitcher","mapStateToProps","state","currencyData","ConfigReducer","mapDispatchToProps","dispatch","updateCurrency","options","containerFunctions","handleCurrencySelect","_handleCurrencySelect","bind","currencyCode","props","then","location","reload","render","CurrencySwitcherContainer"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT;AACA,OAAOC,aAAP;AAEA,OAAOC,gBAAP;AAEA;;AACA,OAAO,MAAMC,eAAe,qBAAG,UAACC,KAAD;AAAA,SAAY;AACvCC,IAAAA,YAAY,EAAED,KAAK,CAACE,aAAN,CAAoBD;AADK,GAAZ;AAAA,CAAH,yDAArB;AAIP;;AACA,OAAO,MAAME,kBAAkB,qBAAG,UAACC,QAAD;AAAA,SAAe;AAC7CC,IAAAA,cAAc,EAAE,UAACC,OAAD;AAAA,aAAaV,gBAAgB,CAACS,cAAjB,CAAgCD,QAAhC,EAA0CE,OAA1C,CAAb;AAAA;AAD6B,GAAf;AAAA,CAAH,4DAAxB;AAIP;;;;AACA,sHAA+CT,aAA/C,EAA6D;AAAA;AAAA;AAAA,SACzDU,kBADyD,GACpC;AACjBC,MAAAA,oBAAoB,EAAE,KAAKC,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC;AADL,KADoC;AAAA;;AAKzDD,EAAAA,qBAAqB,CAACE,YAAD,EAAe;AAChC,UAAM;AAAEN,MAAAA;AAAF,QAAqB,KAAKO,KAAhC;AAEAP,IAAAA,cAAc,CAAC;AAAEM,MAAAA;AAAF,KAAD,CAAd,CAAiCE,IAAjC;AACI;AADJ,sBAEI;AAAA,aAAMC,QAAQ,CAACC,MAAT,EAAN;AAAA,KAFJ;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,yCACK,gBADL,oBAEW,KAAKT,kBAFhB,EAGW,KAAKK,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;;AArBwD,CAA7D;AAwBA,eAAejB,OAAO,CAClBI,eADkB,EAElBI,kBAFkB,CAAP,CAIXc,yBAJW,CAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { connect } from 'react-redux';\n\nimport { ConfigDispatcher } from 'Store/Config/Config.dispatcher';\nimport DataContainer from 'Util/Request/DataContainer';\n\nimport CurrencySwitcher from './CurrencySwitcher.component';\n\n/** @namespace Component/CurrencySwitcher/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    currencyData: state.ConfigReducer.currencyData\n});\n\n/** @namespace Component/CurrencySwitcher/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    updateCurrency: (options) => ConfigDispatcher.updateCurrency(dispatch, options)\n});\n\n/** @namespace Component/CurrencySwitcher/Container */\nexport class CurrencySwitcherContainer extends DataContainer {\n    containerFunctions = {\n        handleCurrencySelect: this._handleCurrencySelect.bind(this)\n    };\n\n    _handleCurrencySelect(currencyCode) {\n        const { updateCurrency } = this.props;\n\n        updateCurrency({ currencyCode }).then(\n            /** @namespace Component/CurrencySwitcher/Container/updateCurrencyThen */\n            () => location.reload()\n        );\n    }\n\n    render() {\n        return (\n            <CurrencySwitcher\n              { ...this.containerFunctions }\n              { ...this.props }\n            />\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(\n    CurrencySwitcherContainer\n);\n"]},"metadata":{},"sourceType":"module"}