{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductConfigurableAttributeDropdown/ProductConfigurableAttributeDropdown.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { AttributeType } from \"/home/arturs/scandiweb/extension/src/type/ProductList\";\nimport ProductConfigurableAttributeDropdown from \"./ProductConfigurableAttributeDropdown.component\";\n/** #namespace Component/ProductConfigurableAttributeDropdown/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductConfigurableAttributeDropdownContainer = Mosaic.middleware((_temp = _class = class ProductConfigurableAttributeDropdownContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.containerFunctions = {\n      onChange: this.onChange.bind(this)\n    };\n\n    this.containerProps = function () {\n      const {\n        option: {\n          attribute_code,\n          attribute_label\n        }\n      } = _this.props;\n      return {\n        selectValue: _this._getSelectValue(),\n        selectOptions: _this._getSelectOptions(),\n        selectName: attribute_code,\n        selectLabel: attribute_label\n      };\n    };\n\n    this._getSelectOptions = function () {\n      const {\n        option: {\n          attribute_options,\n          attribute_code\n        },\n        getIsConfigurableAttributeAvailable\n      } = _this.props;\n\n      if (!attribute_options) {\n        // eslint-disable-next-line no-console\n        console.warn(`Please make sure \"${attribute_code}\" is visible on Storefront.`);\n        return [];\n      }\n\n      return Object.values(attribute_options).reduce(function (acc, option) {\n        const {\n          value\n        } = option;\n        const isAvailable = getIsConfigurableAttributeAvailable({\n          attribute_code,\n          attribute_value: value\n        });\n\n        if (!isAvailable) {\n          return acc;\n        }\n\n        return [...acc, { ...option,\n          id: value\n        }];\n      }, []);\n    };\n\n    this._getSelectValue = function () {\n      const {\n        option: {\n          attribute_code\n        }\n      } = _this.props;\n      const {\n        parameters = {}\n      } = _this.props;\n      return parameters[attribute_code];\n    };\n  }\n\n  onChange(value) {\n    const {\n      updateConfigurableVariant,\n      option: {\n        attribute_code\n      }\n    } = this.props;\n    updateConfigurableVariant(attribute_code, value);\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, ProductConfigurableAttributeDropdown, Object.assign({}, this.props, this.containerFunctions, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  option: AttributeType.isRequired,\n  updateConfigurableVariant: PropTypes.func.isRequired,\n  getIsConfigurableAttributeAvailable: PropTypes.func.isRequired,\n  parameters: PropTypes.objectOf(PropTypes.string).isRequired\n}, _temp), \"Component/ProductConfigurableAttributeDropdown/Container\");\nexport default ProductConfigurableAttributeDropdownContainer;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductConfigurableAttributeDropdown/ProductConfigurableAttributeDropdown.container.js"],"names":["PropTypes","PureComponent","AttributeType","ProductConfigurableAttributeDropdown","containerFunctions","onChange","bind","containerProps","option","attribute_code","attribute_label","props","selectValue","_getSelectValue","selectOptions","_getSelectOptions","selectName","selectLabel","attribute_options","getIsConfigurableAttributeAvailable","console","warn","Object","values","reduce","acc","value","isAvailable","attribute_value","id","parameters","updateConfigurableVariant","render","propTypes","isRequired","func","objectOf","string","ProductConfigurableAttributeDropdownContainer"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,SAASC,aAAT;AAEA,OAAOC,oCAAP;AAEA;;;;AACA,gLAAmEF,aAAnE,EAAiF;AAAA;AAAA;;AAAA;AAAA;AAAA,SAQ7EG,kBAR6E,GAQxD;AACjBC,MAAAA,QAAQ,EAAE,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB;AADO,KARwD;;AAAA,SAqB7EC,cArB6E,GAqB5D,YAAM;AACnB,YAAM;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,cAAF;AAAkBC,UAAAA;AAAlB;AAAV,UAAkD,KAAI,CAACC,KAA7D;AAEA,aAAO;AACHC,QAAAA,WAAW,EAAE,KAAI,CAACC,eAAL,EADV;AAEHC,QAAAA,aAAa,EAAE,KAAI,CAACC,iBAAL,EAFZ;AAGHC,QAAAA,UAAU,EAAEP,cAHT;AAIHQ,QAAAA,WAAW,EAAEP;AAJV,OAAP;AAMH,KA9B4E;;AAAA,SAgC7EK,iBAhC6E,GAgCzD,YAAM;AACtB,YAAM;AACFP,QAAAA,MAAM,EAAE;AACJU,UAAAA,iBADI;AAEJT,UAAAA;AAFI,SADN;AAKFU,QAAAA;AALE,UAMF,KAAI,CAACR,KANT;;AAQA,UAAI,CAACO,iBAAL,EAAwB;AACpB;AACAE,QAAAA,OAAO,CAACC,IAAR,CAAc,qBAAqBZ,cAAgB,6BAAnD;AACA,eAAO,EAAP;AACH;;AAED,aAAOa,MAAM,CAACC,MAAP,CAAcL,iBAAd,EACFM,MADE,CACK,UAACC,GAAD,EAAMjB,MAAN,EAAiB;AACrB,cAAM;AAAEkB,UAAAA;AAAF,YAAYlB,MAAlB;AAEA,cAAMmB,WAAW,GAAGR,mCAAmC,CAAC;AACpDV,UAAAA,cADoD;AAEpDmB,UAAAA,eAAe,EAAEF;AAFmC,SAAD,CAAvD;;AAKA,YAAI,CAACC,WAAL,EAAkB;AACd,iBAAOF,GAAP;AACH;;AAED,eAAO,CAAC,GAAGA,GAAJ,EAAS,EACZ,GAAGjB,MADS;AAEZqB,UAAAA,EAAE,EAAEH;AAFQ,SAAT,CAAP;AAIH,OAjBE,EAiBA,EAjBA,CAAP;AAkBH,KAjE4E;;AAAA,SAmE7Eb,eAnE6E,GAmE3D,YAAM;AACpB,YAAM;AAAEL,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,UAAiC,KAAI,CAACE,KAA5C;AACA,YAAM;AAAEmB,QAAAA,UAAU,GAAG;AAAf,UAAsB,KAAI,CAACnB,KAAjC;AACA,aAAOmB,UAAU,CAACrB,cAAD,CAAjB;AACH,KAvE4E;AAAA;;AAY7EJ,EAAAA,QAAQ,CAACqB,KAAD,EAAQ;AACZ,UAAM;AACFK,MAAAA,yBADE;AAEFvB,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAFN,QAGF,KAAKE,KAHT;AAKAoB,IAAAA,yBAAyB,CAACtB,cAAD,EAAiBiB,KAAjB,CAAzB;AACH;;AAsDDM,EAAAA,MAAM,GAAG;AACL,yCACK,oCADL,oBAEW,KAAKrB,KAFhB,EAGW,KAAKP,kBAHhB,EAIW,KAAKG,cAAL,EAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOH;;AAjF4E,CAAjF,SACW0B,SADX,GACuB;AACfzB,EAAAA,MAAM,EAAEN,aAAa,CAACgC,UADP;AAEfH,EAAAA,yBAAyB,EAAE/B,SAAS,CAACmC,IAAV,CAAeD,UAF3B;AAGff,EAAAA,mCAAmC,EAAEnB,SAAS,CAACmC,IAAV,CAAeD,UAHrC;AAIfJ,EAAAA,UAAU,EAAE9B,SAAS,CAACoC,QAAV,CAAmBpC,SAAS,CAACqC,MAA7B,EAAqCH;AAJlC,CADvB;AAoFA,eAAeI,6CAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { AttributeType } from 'Type/ProductList';\n\nimport ProductConfigurableAttributeDropdown from './ProductConfigurableAttributeDropdown.component';\n\n/** @namespace Component/ProductConfigurableAttributeDropdown/Container */\nexport class ProductConfigurableAttributeDropdownContainer extends PureComponent {\n    static propTypes = {\n        option: AttributeType.isRequired,\n        updateConfigurableVariant: PropTypes.func.isRequired,\n        getIsConfigurableAttributeAvailable: PropTypes.func.isRequired,\n        parameters: PropTypes.objectOf(PropTypes.string).isRequired\n    };\n\n    containerFunctions = {\n        onChange: this.onChange.bind(this)\n    };\n\n    onChange(value) {\n        const {\n            updateConfigurableVariant,\n            option: { attribute_code }\n        } = this.props;\n\n        updateConfigurableVariant(attribute_code, value);\n    }\n\n    containerProps = () => {\n        const { option: { attribute_code, attribute_label } } = this.props;\n\n        return {\n            selectValue: this._getSelectValue(),\n            selectOptions: this._getSelectOptions(),\n            selectName: attribute_code,\n            selectLabel: attribute_label\n        };\n    };\n\n    _getSelectOptions = () => {\n        const {\n            option: {\n                attribute_options,\n                attribute_code\n            },\n            getIsConfigurableAttributeAvailable\n        } = this.props;\n\n        if (!attribute_options) {\n            // eslint-disable-next-line no-console\n            console.warn(`Please make sure \"${ attribute_code }\" is visible on Storefront.`);\n            return [];\n        }\n\n        return Object.values(attribute_options)\n            .reduce((acc, option) => {\n                const { value } = option;\n\n                const isAvailable = getIsConfigurableAttributeAvailable({\n                    attribute_code,\n                    attribute_value: value\n                });\n\n                if (!isAvailable) {\n                    return acc;\n                }\n\n                return [...acc, {\n                    ...option,\n                    id: value\n                }];\n            }, []);\n    };\n\n    _getSelectValue = () => {\n        const { option: { attribute_code } } = this.props;\n        const { parameters = {} } = this.props;\n        return parameters[attribute_code];\n    };\n\n    render() {\n        return (\n            <ProductConfigurableAttributeDropdown\n              { ...this.props }\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default ProductConfigurableAttributeDropdownContainer;\n"]},"metadata":{},"sourceType":"module"}