{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressTable/MyAccountAddressTable.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { ADDRESS_POPUP_ID, DELETE_ADDRESS, EDIT_ADDRESS } from \"/home/arturs/scandiweb/scandipwa/src/component/MyAccountAddressPopup/MyAccountAddressPopup.config\";\nimport { showPopup } from \"/home/arturs/scandiweb/scandipwa/src/store/Popup/Popup.action\";\nimport { addressType } from \"/home/arturs/scandiweb/scandipwa/src/type/Account\";\nimport { countriesType } from \"/home/arturs/scandiweb/scandipwa/src/type/Config\";\nimport MyAccountAddressTable from \"./MyAccountAddressTable.component\";\n/** #namespace Component/MyAccountAddressTable/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    countries: state.ConfigReducer.countries\n  };\n}, \"Component/MyAccountAddressTable/Container/mapStateToProps\");\n/** #namespace Component/MyAccountAddressTable/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    showEditPopup: function (payload) {\n      return dispatch(showPopup(ADDRESS_POPUP_ID, payload));\n    }\n  };\n}, \"Component/MyAccountAddressTable/Container/mapDispatchToProps\");\n/** #namespace Component/MyAccountAddressTable/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountAddressTableContainer = Mosaic.middleware((_temp = _class = class MyAccountAddressTableContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.containerFunctions = {\n      getFormatedRegion: this.getFormatedRegion.bind(this),\n      onEditClick: this.onEditClick.bind(this),\n      onDeleteClick: this.onDeleteClick.bind(this)\n    };\n  }\n\n  onEditClick() {\n    const {\n      showEditPopup,\n      address\n    } = this.props;\n    showEditPopup({\n      action: EDIT_ADDRESS,\n      title: __('Edit address'),\n      address\n    });\n  }\n\n  onDeleteClick() {\n    const {\n      showEditPopup,\n      address\n    } = this.props;\n    showEditPopup({\n      action: DELETE_ADDRESS,\n      title: __('Confirm delete'),\n      address\n    });\n  }\n\n  getFormatedRegion(address) {\n    const {\n      countries\n    } = this.props;\n    const {\n      country_id,\n      region: regionData\n    } = address;\n\n    if (!regionData) {\n      return {};\n    }\n\n    const {\n      region_id,\n      region\n    } = regionData;\n    const country = countries.find(function ({\n      id\n    }) {\n      return id === country_id;\n    });\n\n    if (!country) {\n      return {};\n    }\n\n    const {\n      label,\n      available_regions\n    } = country;\n    const regions = available_regions || [];\n    const {\n      name\n    } = regions.find(function ({\n      id\n    }) {\n      return id === region_id;\n    }) || {\n      name: region\n    };\n    return {\n      country: label,\n      region: name\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, MyAccountAddressTable, Object.assign({}, this.props, this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  address: addressType.isRequired,\n  showEditPopup: PropTypes.func.isRequired,\n  countries: countriesType.isRequired\n}, _temp), \"Component/MyAccountAddressTable/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountAddressTableContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressTable/MyAccountAddressTable.container.js"],"names":["PropTypes","PureComponent","connect","ADDRESS_POPUP_ID","DELETE_ADDRESS","EDIT_ADDRESS","showPopup","addressType","countriesType","MyAccountAddressTable","mapStateToProps","state","countries","ConfigReducer","mapDispatchToProps","dispatch","showEditPopup","payload","containerFunctions","getFormatedRegion","bind","onEditClick","onDeleteClick","address","props","action","title","__","country_id","region","regionData","region_id","country","find","id","label","available_regions","regions","name","render","propTypes","isRequired","func","MyAccountAddressTableContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    ADDRESS_POPUP_ID,\n    DELETE_ADDRESS,\n    EDIT_ADDRESS\n} from 'Component/MyAccountAddressPopup/MyAccountAddressPopup.config';\nimport { showPopup } from 'Store/Popup/Popup.action';\nimport { addressType } from 'Type/Account';\nimport { countriesType } from 'Type/Config';\n\nimport MyAccountAddressTable from './MyAccountAddressTable.component';\n\n/** @namespace Component/MyAccountAddressTable/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    countries: state.ConfigReducer.countries\n});\n\n/** @namespace Component/MyAccountAddressTable/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showEditPopup: (payload) => dispatch(showPopup(ADDRESS_POPUP_ID, payload))\n});\n\n/** @namespace Component/MyAccountAddressTable/Container */\nexport class MyAccountAddressTableContainer extends PureComponent {\n    static propTypes = {\n        address: addressType.isRequired,\n        showEditPopup: PropTypes.func.isRequired,\n        countries: countriesType.isRequired\n    };\n\n    containerFunctions = {\n        getFormatedRegion: this.getFormatedRegion.bind(this),\n        onEditClick: this.onEditClick.bind(this),\n        onDeleteClick: this.onDeleteClick.bind(this)\n    };\n\n    onEditClick() {\n        const { showEditPopup, address } = this.props;\n\n        showEditPopup({\n            action: EDIT_ADDRESS,\n            title: __('Edit address'),\n            address\n        });\n    }\n\n    onDeleteClick() {\n        const { showEditPopup, address } = this.props;\n\n        showEditPopup({\n            action: DELETE_ADDRESS,\n            title: __('Confirm delete'),\n            address\n        });\n    }\n\n    getFormatedRegion(address) {\n        const { countries } = this.props;\n        const { country_id, region: regionData } = address;\n\n        if (!regionData) {\n            return {};\n        }\n\n        const { region_id, region } = regionData;\n        const country = countries.find(({ id }) => id === country_id);\n\n        if (!country) {\n            return {};\n        }\n\n        const { label, available_regions } = country;\n        const regions = available_regions || [];\n        const { name } = regions.find(({ id }) => id === region_id) || { name: region };\n\n        return {\n            country: label,\n            region: name\n        };\n    }\n\n    render() {\n        return (\n            <MyAccountAddressTable\n              { ...this.props }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountAddressTableContainer);\n"]},"metadata":{},"sourceType":"module"}