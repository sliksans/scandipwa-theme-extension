{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductCustomizableOption/ProductCustomizableOption.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { PRICE_TYPE_PERCENT } from \"/home/arturs/scandiweb/scandipwa/src/component/ProductBundleItem/ProductBundleItem.config\";\nimport { showNotification } from \"/home/arturs/scandiweb/scandipwa/src/store/Notification/Notification.action\";\nimport { PriceType } from \"/home/arturs/scandiweb/scandipwa/src/type/ProductList\";\nimport { formatPrice } from \"/home/arturs/scandiweb/scandipwa/src/util/Price\";\nimport ProductCustomizableOption from \"./ProductCustomizableOption.component\";\n/** #namespace Component/ProductCustomizableOption/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    showNotification: function (type, message) {\n      return dispatch(showNotification(type, message));\n    }\n  };\n}, \"Component/ProductCustomizableOption/Container/mapDispatchToProps\");\n/** #namespace Component/ProductCustomizableOption/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapStateToProps = Mosaic.middleware(function () {\n  return {};\n}, \"Component/ProductCustomizableOption/Container/mapStateToProps\");\n/** #namespace Component/ProductCustomizableOption/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductCustomizableOptionContainer = Mosaic.middleware((_temp = _class = class ProductCustomizableOptionContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      textValue: '',\n      selectedDropdownValue: 0,\n      textFieldValid: null\n    };\n    this.containerFunctions = {\n      getDropdownOptions: this.getDropdownOptions.bind(this),\n      getSelectedCheckboxValue: this.getSelectedCheckboxValue.bind(this),\n      updateTextFieldValue: this.updateTextFieldValue.bind(this),\n      setDropdownValue: this.setDropdownValue.bind(this),\n      processFileUpload: this.processFileUpload.bind(this),\n      renderOptionLabel: this.renderOptionLabel.bind(this)\n    };\n\n    this.containerProps = function () {\n      return {\n        optionType: _this.getOptionType(),\n        requiredSelected: _this.getIsRequiredSelected()\n      };\n    };\n  }\n\n  getOptionType() {\n    const {\n      option\n    } = this.props;\n    const {\n      type\n    } = option;\n    return type;\n  }\n\n  getIsRequiredSelected() {\n    const {\n      productOptionsData,\n      productOptionsData: {\n        requiredOptions,\n        productOptions,\n        productOptionsMulti\n      },\n      option: {\n        option_id\n      }\n    } = this.props;\n\n    if (Object.keys(productOptionsData).length < 1 || !requiredOptions) {\n      return true;\n    }\n\n    const selectedItems = [...(productOptions || []), ...(productOptionsMulti || [])];\n    const isRequired = requiredOptions.reduce(function (acc, item) {\n      if (item === option_id) {\n        acc.push(item);\n      }\n\n      return acc;\n    }, []);\n\n    if (!isRequired.length) {\n      return true;\n    }\n\n    const isRequiredSelected = selectedItems.reduce(function (acc, {\n      option_id\n    }) {\n      if (isRequired[0] === option_id) {\n        acc.push(option_id);\n      }\n\n      return acc;\n    }, []);\n    return !!isRequiredSelected.length;\n  }\n\n  renderPercent(priceType, price) {\n    if (priceType !== PRICE_TYPE_PERCENT) {\n      return '';\n    }\n\n    return ` (${price}%)`;\n  }\n\n  renderOptionLabel(priceType, priceInclTax, price, currency) {\n    return price === 0 && priceInclTax === 0 ? '' : `+ ${formatPrice(priceInclTax, currency)}${this.renderPercent(priceType, price)}`;\n  }\n\n  getSelectedCheckboxValue(value) {\n    const {\n      option,\n      setSelectedCheckboxValues\n    } = this.props;\n    const {\n      option_id\n    } = option;\n    setSelectedCheckboxValues(option_id, value);\n  }\n\n  updateTextFieldValue(value) {\n    const {\n      option,\n      setCustomizableOptionTextFieldValue\n    } = this.props;\n    const {\n      option_id,\n      required\n    } = option;\n    setCustomizableOptionTextFieldValue(option_id, value);\n    this.setState({\n      fieldValue: value,\n      textFieldValid: required ? value.length > 0 : true\n    });\n  }\n\n  setDropdownValue(value) {\n    const {\n      setSelectedDropdownValue,\n      option\n    } = this.props;\n    const {\n      selectedDropdownValue\n    } = this.state;\n\n    if (selectedDropdownValue === value) {\n      setSelectedDropdownValue(null, option);\n      this.setState({\n        selectedDropdownValue: 0\n      });\n    } else {\n      setSelectedDropdownValue(value, option);\n      this.setState({\n        selectedDropdownValue: parseInt(value, 10)\n      });\n    }\n  }\n\n  getDropdownOptions(values) {\n    var _this2 = this;\n\n    return values.reduce(function (acc, {\n      option_type_id,\n      title,\n      priceInclTax,\n      price,\n      price_type,\n      currency\n    }) {\n      acc.push({\n        id: option_type_id,\n        name: title,\n        value: option_type_id,\n        label: `${title} ${_this2.renderOptionLabel(price_type, priceInclTax, price, currency)}`\n      });\n      return acc;\n    }, []);\n  }\n\n  processFileUpload(values) {\n    const {\n      option,\n      option: {\n        data: {\n          file_extension = ''\n        }\n      },\n      setCustomizableOptionFileFieldValue,\n      showNotification\n    } = this.props;\n    const {\n      type = '',\n      name\n    } = values;\n\n    if (file_extension && !file_extension.split(', ').some(function (fileType) {\n      return type.includes(fileType);\n    })) {\n      showNotification('error', __('File type is incorrect'));\n      return false;\n    }\n\n    const reader = new FileReader();\n\n    reader.onloadend = function () {\n      setCustomizableOptionFileFieldValue(reader.result, option, name);\n    };\n\n    reader.readAsDataURL(values);\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, ProductCustomizableOption, Object.assign({}, this.props, this.state, this.containerFunctions, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  option: PropTypes.object.isRequired,\n  productOptionsData: PropTypes.object.isRequired,\n  setSelectedCheckboxValues: PropTypes.func.isRequired,\n  setCustomizableOptionTextFieldValue: PropTypes.func.isRequired,\n  setCustomizableOptionFileFieldValue: PropTypes.func,\n  setSelectedDropdownValue: PropTypes.func.isRequired,\n  showNotification: PropTypes.func.isRequired,\n  price_range: PriceType.isRequired,\n  type_id: PropTypes.string.isRequired\n}, _class.defaultProps = {\n  setCustomizableOptionFileFieldValue: function () {\n    return null;\n  }\n}, _temp), \"Component/ProductCustomizableOption/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCustomizableOptionContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductCustomizableOption/ProductCustomizableOption.container.js"],"names":["PropTypes","PureComponent","connect","PRICE_TYPE_PERCENT","showNotification","PriceType","formatPrice","ProductCustomizableOption","mapDispatchToProps","dispatch","type","message","mapStateToProps","state","textValue","selectedDropdownValue","textFieldValid","containerFunctions","getDropdownOptions","bind","getSelectedCheckboxValue","updateTextFieldValue","setDropdownValue","processFileUpload","renderOptionLabel","containerProps","optionType","getOptionType","requiredSelected","getIsRequiredSelected","option","props","productOptionsData","requiredOptions","productOptions","productOptionsMulti","option_id","Object","keys","length","selectedItems","isRequired","reduce","acc","item","push","isRequiredSelected","renderPercent","priceType","price","priceInclTax","currency","value","setSelectedCheckboxValues","setCustomizableOptionTextFieldValue","required","setState","fieldValue","setSelectedDropdownValue","parseInt","values","option_type_id","title","price_type","id","name","label","data","file_extension","setCustomizableOptionFileFieldValue","split","some","fileType","includes","__","reader","FileReader","onloadend","result","readAsDataURL","render","propTypes","object","func","price_range","type_id","string","defaultProps","ProductCustomizableOptionContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { PRICE_TYPE_PERCENT } from 'Component/ProductBundleItem/ProductBundleItem.config';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { PriceType } from 'Type/ProductList';\nimport { formatPrice } from 'Util/Price';\n\nimport ProductCustomizableOption from './ProductCustomizableOption.component';\n\n/** @namespace Component/ProductCustomizableOption/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showNotification: (type, message) => dispatch(showNotification(type, message))\n});\n\n/** @namespace Component/ProductCustomizableOption/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = () => ({});\n\n/** @namespace Component/ProductCustomizableOption/Container */\nexport class ProductCustomizableOptionContainer extends PureComponent {\n    static propTypes = {\n        option: PropTypes.object.isRequired,\n        productOptionsData: PropTypes.object.isRequired,\n        setSelectedCheckboxValues: PropTypes.func.isRequired,\n        setCustomizableOptionTextFieldValue: PropTypes.func.isRequired,\n        setCustomizableOptionFileFieldValue: PropTypes.func,\n        setSelectedDropdownValue: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired,\n        price_range: PriceType.isRequired,\n        type_id: PropTypes.string.isRequired\n    };\n\n    static defaultProps = {\n        setCustomizableOptionFileFieldValue: () => null\n    };\n\n    state = {\n        textValue: '',\n        selectedDropdownValue: 0,\n        textFieldValid: null\n    };\n\n    containerFunctions = {\n        getDropdownOptions: this.getDropdownOptions.bind(this),\n        getSelectedCheckboxValue: this.getSelectedCheckboxValue.bind(this),\n        updateTextFieldValue: this.updateTextFieldValue.bind(this),\n        setDropdownValue: this.setDropdownValue.bind(this),\n        processFileUpload: this.processFileUpload.bind(this),\n        renderOptionLabel: this.renderOptionLabel.bind(this)\n    };\n\n    containerProps = () => ({\n        optionType: this.getOptionType(),\n        requiredSelected: this.getIsRequiredSelected()\n    });\n\n    getOptionType() {\n        const { option } = this.props;\n        const { type } = option;\n\n        return type;\n    }\n\n    getIsRequiredSelected() {\n        const {\n            productOptionsData,\n            productOptionsData: {\n                requiredOptions,\n                productOptions,\n                productOptionsMulti\n            },\n            option: {\n                option_id\n            }\n        } = this.props;\n\n        if (Object.keys(productOptionsData).length < 1 || !requiredOptions) {\n            return true;\n        }\n\n        const selectedItems = [...productOptions || [], ...productOptionsMulti || []];\n        const isRequired = requiredOptions.reduce((acc, item) => {\n            if (item === option_id) {\n                acc.push(item);\n            }\n\n            return acc;\n        }, []);\n\n        if (!isRequired.length) {\n            return true;\n        }\n\n        const isRequiredSelected = selectedItems.reduce((acc, { option_id }) => {\n            if (isRequired[0] === option_id) {\n                acc.push(option_id);\n            }\n\n            return acc;\n        }, []);\n\n        return !!isRequiredSelected.length;\n    }\n\n    renderPercent(priceType, price) {\n        if (priceType !== PRICE_TYPE_PERCENT) {\n            return '';\n        }\n\n        return ` (${ price }%)`;\n    }\n\n    renderOptionLabel(priceType, priceInclTax, price, currency) {\n        return (price === 0 && priceInclTax === 0)\n            ? ''\n            : `+ ${formatPrice(priceInclTax, currency)}${this.renderPercent(priceType, price)}`;\n    }\n\n    getSelectedCheckboxValue(value) {\n        const { option, setSelectedCheckboxValues } = this.props;\n        const { option_id } = option;\n\n        setSelectedCheckboxValues(option_id, value);\n    }\n\n    updateTextFieldValue(value) {\n        const { option, setCustomizableOptionTextFieldValue } = this.props;\n        const { option_id, required } = option;\n\n        setCustomizableOptionTextFieldValue(option_id, value);\n        this.setState({\n            fieldValue: value,\n            textFieldValid: required ? value.length > 0 : true\n        });\n    }\n\n    setDropdownValue(value) {\n        const { setSelectedDropdownValue, option } = this.props;\n        const { selectedDropdownValue } = this.state;\n\n        if (selectedDropdownValue === value) {\n            setSelectedDropdownValue(null, option);\n            this.setState({ selectedDropdownValue: 0 });\n        } else {\n            setSelectedDropdownValue(value, option);\n            this.setState({ selectedDropdownValue: parseInt(value, 10) });\n        }\n    }\n\n    getDropdownOptions(values) {\n        return values.reduce((acc, {\n            option_type_id,\n            title,\n            priceInclTax,\n            price,\n            price_type,\n            currency\n        }) => {\n            acc.push({\n                id: option_type_id,\n                name: title,\n                value: option_type_id,\n                label: `${title} ${this.renderOptionLabel(price_type, priceInclTax, price, currency)}`\n            });\n\n            return acc;\n        }, []);\n    }\n\n    processFileUpload(values) {\n        const {\n            option,\n            option: { data: { file_extension = '' } },\n            setCustomizableOptionFileFieldValue,\n            showNotification\n        } = this.props;\n        const { type = '', name } = values;\n\n        if (file_extension && !file_extension.split(', ').some((fileType) => type.includes(fileType))) {\n            showNotification('error', __('File type is incorrect'));\n\n            return false;\n        }\n\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            setCustomizableOptionFileFieldValue(reader.result, option, name);\n        };\n\n        reader.readAsDataURL(values);\n\n        return true;\n    }\n\n    render() {\n        return (\n            <ProductCustomizableOption\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCustomizableOptionContainer);\n"]},"metadata":{},"sourceType":"module"}