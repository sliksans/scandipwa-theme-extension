{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/route/ConfirmAccountPage/ConfirmAccountPage.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { Redirect } from 'react-router';\nimport ContentWrapper from \"/home/arturs/scandiweb/extension/src/component/ContentWrapper\";\nimport Field from \"/home/arturs/scandiweb/extension/src/component/Field\";\nimport Form from \"/home/arturs/scandiweb/extension/src/component/Form\";\nimport Loader from \"/home/arturs/scandiweb/extension/src/component/Loader\";\nimport { isSignedIn } from \"/home/arturs/scandiweb/extension/src/util/Auth\";\nimport \"./ConfirmAccountPage.style\";\n/** #namespace Route/ConfirmAccountPage/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ConfirmAccountPage = Mosaic.middleware((_temp = _class = class ConfirmAccountPage_ extends Mosaic.Extensible(PureComponent) {\n  renderForm() {\n    const {\n      onConfirmAttempt,\n      onConfirmSuccess,\n      onFormError\n    } = this.props; // TODO: use FieldForm instead!!!\n\n    return /*#__PURE__*/_checkBEM(React, Form, {\n      mix: {\n        block: 'ConfirmAccountPage',\n        elem: 'Form'\n      },\n      key: \"confirm-account\",\n      onSubmit: onConfirmAttempt,\n      onSubmitSuccess: onConfirmSuccess,\n      onSubmitError: onFormError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, Field, {\n      type: \"text\",\n      label: __('Email'),\n      id: \"email\",\n      name: \"email\",\n      mix: {\n        block: 'ConfirmAccountPage',\n        elem: 'EmailInput'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, Field, {\n      type: \"password\",\n      label: __('Password'),\n      id: \"password\",\n      name: \"password\",\n      validation: ['notEmpty', 'password'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"button\", {\n      type: \"submit\",\n      block: \"Button\",\n      mix: {\n        block: 'ConfirmAccountPage',\n        elem: 'Button'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, __('Confirm your account')));\n  }\n\n  render() {\n    const {\n      redirect,\n      isLoading\n    } = this.props;\n\n    if (redirect || isSignedIn()) {\n      return /*#__PURE__*/_checkBEM(React, Redirect, {\n        to: \"/my-account/dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"main\", {\n      block: \"ConfirmAccountPage\",\n      \"aria-label\": __('Confirm Account Page'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, ContentWrapper, {\n      wrapperMix: {\n        block: 'ConfirmAccountPage',\n        elem: 'Wrapper'\n      },\n      label: __('Confirm Account Action'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, Loader, {\n      isLoading: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"h1\", {\n      block: \"ConfirmAccountPage\",\n      elem: \"Heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, __('Confirm your account')), this.renderForm()));\n  }\n\n}, _class.propTypes = {\n  redirect: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onConfirmAttempt: PropTypes.func.isRequired,\n  onConfirmSuccess: PropTypes.func.isRequired,\n  onFormError: PropTypes.func.isRequired\n}, _temp), \"Route/ConfirmAccountPage/Component\");\nexport default ConfirmAccountPage;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/route/ConfirmAccountPage/ConfirmAccountPage.component.js"],"names":["PropTypes","PureComponent","Redirect","ContentWrapper","Field","Form","Loader","isSignedIn","renderForm","onConfirmAttempt","onConfirmSuccess","onFormError","props","block","elem","__","render","redirect","isLoading","propTypes","bool","isRequired","func","ConfirmAccountPage"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,cAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,SAASC,UAAT;AAEA;AAEA;;;;AACA,0HAAwCN,aAAxC,EAAsD;AASlDO,EAAAA,UAAU,GAAG;AACT,UAAM;AACFC,MAAAA,gBADE;AAEFC,MAAAA,gBAFE;AAGFC,MAAAA;AAHE,QAIF,KAAKC,KAJT,CADS,CAOT;;AAEA,yCACK,IADL;AAEM,MAAA,GAAG,EAAG;AAAEC,QAAAA,KAAK,EAAE,oBAAT;AAA+BC,QAAAA,IAAI,EAAE;AAArC,OAFZ;AAGM,MAAA,GAAG,EAAC,iBAHV;AAIM,MAAA,QAAQ,EAAGL,gBAJjB;AAKM,MAAA,eAAe,EAAGC,gBALxB;AAMM,MAAA,aAAa,EAAGC,WANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAYS,KAZT;AAaU,MAAA,IAAI,EAAC,MAbf;AAcU,MAAA,KAAK,EAAGI,EAAE,CAAC,OAAD,CAdpB;AAeU,MAAA,EAAE,EAAC,OAfb;AAgBU,MAAA,IAAI,EAAC,OAhBf;AAiBU,MAAA,GAAG,EAAG;AAAEF,QAAAA,KAAK,EAAE,oBAAT;AAA+BC,QAAAA,IAAI,EAAE;AAArC,OAjBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAmBS,KAnBT;AAoBU,MAAA,IAAI,EAAC,UApBf;AAqBU,MAAA,KAAK,EAAGC,EAAE,CAAC,UAAD,CArBpB;AAsBU,MAAA,EAAE,EAAC,UAtBb;AAuBU,MAAA,IAAI,EAAC,UAvBf;AAwBU,MAAA,UAAU,EAAG,CAAC,UAAD,EAAa,UAAb,CAxBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BU,MAAA,IAAI,EAAC,QA3Bf;AA4BU,MAAA,KAAK,EAAC,QA5BhB;AA6BU,MAAA,GAAG,EAAG;AAAEF,QAAAA,KAAK,EAAE,oBAAT;AAA+BC,QAAAA,IAAI,EAAE;AAArC,OA7BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA+BcC,EAAE,CAAC,sBAAD,CA/BhB;AAmCH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,QADE;AAEFC,MAAAA;AAFE,QAGF,KAAKN,KAHT;;AAKA,QAAIK,QAAQ,IAAIV,UAAU,EAA1B,EAA8B;AAC1B,2CAAQ,QAAR;AAAiB,QAAA,EAAE,EAAC,uBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AAED;AACU,MAAA,KAAK,EAAC,oBADhB;AACqC,oBAAaQ,EAAE,CAAC,sBAAD,CADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAES,cAFT;AAGU,MAAA,UAAU,EAAG;AAAEF,QAAAA,KAAK,EAAE,oBAAT;AAA+BC,QAAAA,IAAI,EAAE;AAArC,OAHvB;AAIU,MAAA,KAAK,EAAGC,EAAE,CAAC,wBAAD,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAMa,MANb;AAMoB,MAAA,SAAS,EAAGG,SANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOgB,MAAA,KAAK,EAAC,oBAPtB;AAO2C,MAAA,IAAI,EAAC,SAPhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQkBH,EAAE,CAAC,sBAAD,CARpB,GAUc,KAAKP,UAAL,EAVd;AAcH;;AA/EiD,CAAtD,SACWW,SADX,GACuB;AACfF,EAAAA,QAAQ,EAAEjB,SAAS,CAACoB,IAAV,CAAeC,UADV;AAEfH,EAAAA,SAAS,EAAElB,SAAS,CAACoB,IAAV,CAAeC,UAFX;AAGfZ,EAAAA,gBAAgB,EAAET,SAAS,CAACsB,IAAV,CAAeD,UAHlB;AAIfX,EAAAA,gBAAgB,EAAEV,SAAS,CAACsB,IAAV,CAAeD,UAJlB;AAKfV,EAAAA,WAAW,EAAEX,SAAS,CAACsB,IAAV,CAAeD;AALb,CADvB;AAkFA,eAAeE,kBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { Redirect } from 'react-router';\n\nimport ContentWrapper from 'Component/ContentWrapper';\nimport Field from 'Component/Field';\nimport Form from 'Component/Form';\nimport Loader from 'Component/Loader';\nimport { isSignedIn } from 'Util/Auth';\n\nimport './ConfirmAccountPage.style';\n\n/** @namespace Route/ConfirmAccountPage/Component */\nexport class ConfirmAccountPage extends PureComponent {\n    static propTypes = {\n        redirect: PropTypes.bool.isRequired,\n        isLoading: PropTypes.bool.isRequired,\n        onConfirmAttempt: PropTypes.func.isRequired,\n        onConfirmSuccess: PropTypes.func.isRequired,\n        onFormError: PropTypes.func.isRequired\n    };\n\n    renderForm() {\n        const {\n            onConfirmAttempt,\n            onConfirmSuccess,\n            onFormError\n        } = this.props;\n\n        // TODO: use FieldForm instead!!!\n\n        return (\n            <Form\n              mix={ { block: 'ConfirmAccountPage', elem: 'Form' } }\n              key=\"confirm-account\"\n              onSubmit={ onConfirmAttempt }\n              onSubmitSuccess={ onConfirmSuccess }\n              onSubmitError={ onFormError }\n            >\n                { /*\n                    Added email field with display:none to fix warning\n                    `Password forms should have (optionally hidden) username fields for accessibility`\n                */ }\n                <Field\n                  type=\"text\"\n                  label={ __('Email') }\n                  id=\"email\"\n                  name=\"email\"\n                  mix={ { block: 'ConfirmAccountPage', elem: 'EmailInput' } }\n                />\n                <Field\n                  type=\"password\"\n                  label={ __('Password') }\n                  id=\"password\"\n                  name=\"password\"\n                  validation={ ['notEmpty', 'password'] }\n                />\n                <button\n                  type=\"submit\"\n                  block=\"Button\"\n                  mix={ { block: 'ConfirmAccountPage', elem: 'Button' } }\n                >\n                    { __('Confirm your account') }\n                </button>\n            </Form>\n        );\n    }\n\n    render() {\n        const {\n            redirect,\n            isLoading\n        } = this.props;\n\n        if (redirect || isSignedIn()) {\n            return <Redirect to=\"/my-account/dashboard\" />;\n        }\n\n        return (\n            <main block=\"ConfirmAccountPage\" aria-label={ __('Confirm Account Page') }>\n                <ContentWrapper\n                  wrapperMix={ { block: 'ConfirmAccountPage', elem: 'Wrapper' } }\n                  label={ __('Confirm Account Action') }\n                >\n                    <Loader isLoading={ isLoading } />\n                    <h1 block=\"ConfirmAccountPage\" elem=\"Heading\">\n                        { __('Confirm your account') }\n                    </h1>\n                    { this.renderForm() }\n                </ContentWrapper>\n            </main>\n        );\n    }\n}\n\nexport default ConfirmAccountPage;\n"]},"metadata":{},"sourceType":"module"}