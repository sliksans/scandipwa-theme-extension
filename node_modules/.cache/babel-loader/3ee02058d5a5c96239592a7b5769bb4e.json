{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nexport const DEFAULT_ERROR_MESSAGE = __('Something went wrong!');\n/**\n * Get error message from an array of errors from graphql, or from a regular error object.\n * @param array | object error\n * @param string optional default error message if couldn't get any from the given error\n * @return string message\n * #namespace Util/Request/getErrorMessage\n */\n\nexport const getErrorMessage = Mosaic.middleware(function (error, defaultMessage = DEFAULT_ERROR_MESSAGE) {\n  const {\n    message = defaultMessage\n  } = (error === null || error === void 0 ? void 0 : error.length) ? error[0] : error || {};\n  return message;\n}, \"Util/Request/getErrorMessage\");","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/util/Request/Error.js"],"names":["DEFAULT_ERROR_MESSAGE","__","getErrorMessage","error","defaultMessage","message","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,qBAAqB,GAAGC,EAAE,CAAC,uBAAD,CAAhC;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,qBAAG,UAACC,KAAD,EAAQC,cAAc,GAAGJ,qBAAzB,EAAmD;AAC9E,QAAM;AACFK,IAAAA,OAAO,GAAGD;AADR,MAEF,CAAAD,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,MAAP,IAAgBH,KAAK,CAAC,CAAD,CAArB,GAA2BA,KAAK,IAAI,EAFxC;AAIA,SAAOE,OAAP;AACH,CAN2B,iCAArB","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport const DEFAULT_ERROR_MESSAGE = __('Something went wrong!');\n\n/**\n * Get error message from an array of errors from graphql, or from a regular error object.\n * @param array | object error\n * @param string optional default error message if couldn't get any from the given error\n * @return string message\n * @namespace Util/Request/getErrorMessage\n */\nexport const getErrorMessage = (error, defaultMessage = DEFAULT_ERROR_MESSAGE) => {\n    const {\n        message = defaultMessage\n    } = error?.length ? error[0] : error || {};\n\n    return message;\n};\n"]},"metadata":{},"sourceType":"module"}