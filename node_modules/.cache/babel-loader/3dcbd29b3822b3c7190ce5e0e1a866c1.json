{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductDownloadableLinks/ProductDownloadableLinks.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport ProductDownloadableLinks from \"./ProductDownloadableLinks.component\";\n/** #namespace Component/ProductDownloadableLinks/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    isOpenInNewTab: state.ConfigReducer.downloadable_links_target_new_window\n  };\n}, \"Component/ProductDownloadableLinks/Container/mapStateToProps\");\n/** #namespace Component/ProductDownloadableLinks/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {};\n}, \"Component/ProductDownloadableLinks/Container/mapDispatchToProps\");\n/** #namespace Component/ProductDownloadableLinks/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductDownloadableLinksContainer = Mosaic.middleware((_temp = _class = class ProductDownloadableLinksContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      selectedLinks: []\n    };\n    this.containerFunctions = {\n      setSelectedCheckboxValues: this.setSelectedCheckboxValues.bind(this)\n    };\n  }\n\n  componentDidMount() {\n    const {\n      links\n    } = this.props;\n\n    if (links) {\n      this.stopLoading();\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const {\n      links\n    } = this.props;\n    const {\n      selectedLinks,\n      isLoading\n    } = this.state;\n    const {\n      selectedLinks: prevSelectedLinks\n    } = prevState;\n\n    if (links && isLoading) {\n      this.stopLoading();\n    }\n\n    if (selectedLinks !== prevSelectedLinks) {\n      this.updateSelectedOptionsArray();\n    }\n  }\n\n  stopLoading() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  updateSelectedOptionsArray() {\n    const {\n      setLinkedDownloadables,\n      setLinkedDownloadablesPrice\n    } = this.props;\n    const {\n      selectedLinks\n    } = this.state;\n    setLinkedDownloadables(selectedLinks);\n    const price = this.getTotalPrice();\n    setLinkedDownloadablesPrice(price);\n  }\n\n  getTotalPrice() {\n    const {\n      selectedLinks\n    } = this.state;\n    const {\n      links\n    } = this.props;\n    return selectedLinks.reduce(function (base, {\n      link_id\n    }) {\n      const link = links.find(function ({\n        id\n      }) {\n        return id === link_id;\n      });\n      return base + link.price;\n    }, 0);\n  }\n\n  setSelectedCheckboxValues(option_id, option_value) {\n    const {\n      selectedLinks\n    } = this.state;\n    const optionIdInt = parseInt(option_id, 10);\n\n    if (option_value) {\n      if (selectedLinks.some(function ({\n        link_id: id\n      }) {\n        return optionIdInt === id;\n      })) {\n        return;\n      }\n\n      this.setState({\n        selectedLinks: [...selectedLinks, {\n          link_id: optionIdInt\n        }]\n      });\n      return;\n    }\n\n    if (selectedLinks.some(function ({\n      link_id: id\n    }) {\n      return optionIdInt === id;\n    })) {\n      this.setState({\n        selectedLinks: selectedLinks.filter(function (link) {\n          return link.link_id !== optionIdInt;\n        })\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, ProductDownloadableLinks, Object.assign({}, this.props, this.state, this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  title: PropTypes.string,\n  isRequired: PropTypes.bool,\n  links: PropTypes.array,\n  setLinkedDownloadables: PropTypes.func.isRequired,\n  setLinkedDownloadablesPrice: PropTypes.func.isRequired\n}, _class.defaultProps = {\n  title: '',\n  links: [],\n  isRequired: false\n}, _temp), \"Component/ProductDownloadableLinks/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDownloadableLinksContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductDownloadableLinks/ProductDownloadableLinks.container.js"],"names":["PropTypes","PureComponent","connect","ProductDownloadableLinks","mapStateToProps","state","isOpenInNewTab","ConfigReducer","downloadable_links_target_new_window","mapDispatchToProps","dispatch","isLoading","selectedLinks","containerFunctions","setSelectedCheckboxValues","bind","componentDidMount","links","props","stopLoading","componentDidUpdate","_","prevState","prevSelectedLinks","updateSelectedOptionsArray","setState","setLinkedDownloadables","setLinkedDownloadablesPrice","price","getTotalPrice","reduce","base","link_id","link","find","id","option_id","option_value","optionIdInt","parseInt","some","filter","render","propTypes","title","string","isRequired","bool","array","func","defaultProps","ProductDownloadableLinksContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport ProductDownloadableLinks from './ProductDownloadableLinks.component';\n\n/** @namespace Component/ProductDownloadableLinks/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    isOpenInNewTab: state.ConfigReducer.downloadable_links_target_new_window\n});\n\n/** @namespace Component/ProductDownloadableLinks/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({});\n\n/** @namespace Component/ProductDownloadableLinks/Container */\nexport class ProductDownloadableLinksContainer extends PureComponent {\n    static propTypes = {\n        title: PropTypes.string,\n        isRequired: PropTypes.bool,\n        links: PropTypes.array,\n        setLinkedDownloadables: PropTypes.func.isRequired,\n        setLinkedDownloadablesPrice: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        title: '',\n        links: [],\n        isRequired: false\n    };\n\n    state = {\n        isLoading: true,\n        selectedLinks: []\n    };\n\n    containerFunctions = {\n        setSelectedCheckboxValues: this.setSelectedCheckboxValues.bind(this)\n    };\n\n    componentDidMount() {\n        const { links } = this.props;\n\n        if (links) {\n            this.stopLoading();\n        }\n    }\n\n    componentDidUpdate(_, prevState) {\n        const { links } = this.props;\n        const {\n            selectedLinks,\n            isLoading\n        } = this.state;\n\n        const {\n            selectedLinks: prevSelectedLinks\n        } = prevState;\n\n        if (links && isLoading) {\n            this.stopLoading();\n        }\n\n        if (selectedLinks !== prevSelectedLinks) {\n            this.updateSelectedOptionsArray();\n        }\n    }\n\n    stopLoading() {\n        this.setState({ isLoading: false });\n    }\n\n    updateSelectedOptionsArray() {\n        const { setLinkedDownloadables, setLinkedDownloadablesPrice } = this.props;\n        const { selectedLinks } = this.state;\n\n        setLinkedDownloadables(selectedLinks);\n\n        const price = this.getTotalPrice();\n        setLinkedDownloadablesPrice(price);\n    }\n\n    getTotalPrice() {\n        const { selectedLinks } = this.state;\n        const { links } = this.props;\n\n        return selectedLinks.reduce(\n            (base, { link_id }) => {\n                const link = links.find(({ id }) => id === link_id);\n                return base + link.price;\n            },\n            0\n        );\n    }\n\n    setSelectedCheckboxValues(option_id, option_value) {\n        const { selectedLinks } = this.state;\n\n        const optionIdInt = parseInt(option_id, 10);\n\n        if (option_value) {\n            if (selectedLinks.some(({ link_id: id }) => optionIdInt === id)) {\n                return;\n            }\n            this.setState({\n                selectedLinks: [...selectedLinks, { link_id: optionIdInt }]\n            });\n\n            return;\n        }\n\n        if (selectedLinks.some(({ link_id: id }) => optionIdInt === id)) {\n            this.setState({\n                selectedLinks: selectedLinks.filter(\n                    (link) => link.link_id !== optionIdInt\n                )\n            });\n        }\n    }\n\n    render() {\n        return (\n            <ProductDownloadableLinks\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDownloadableLinksContainer);\n"]},"metadata":{},"sourceType":"module"}