{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/KeyValueTable/KeyValueTable.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport \"./KeyValueTable.style\";\n/** #namespace Component/KeyValueTable/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const KeyValueTable = Mosaic.middleware((_temp = _class = class KeyValueTable_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.renderTableRow = function (data) {\n      const {\n        key,\n        label\n      } = data;\n\n      const value = _this.getValueFromSource(data);\n\n      if (!value) {\n        return null;\n      }\n\n      return /*#__PURE__*/_checkBEM(React, \"tr\", {\n        key: key,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/_checkBEM(React, \"th\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, label), /*#__PURE__*/_checkBEM(React, \"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, value));\n    };\n  }\n\n  get dataPairArray() {\n    return [\n      /**\n       * {\n       *     key: 'id',\n       *     label': 'Identifier',\n       *     source: customer\n       * }\n       */\n    ];\n  }\n\n  getValueFromSource({\n    key,\n    source\n  }) {\n    const {\n      [key]: value\n    } = source;\n    return Array.isArray(value) ? value.join(', ') : value;\n  }\n\n  renderHeading() {\n    const {\n      title\n    } = this.props;\n\n    if (!title) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"th\", {\n      block: \"KeyValueTable\",\n      elem: \"Heading\",\n      colSpan: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, title));\n  }\n\n  renderTable() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"KeyValueTable\",\n      elem: \"Wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"table\", {\n      block: \"KeyValueTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, this.renderHeading()), /*#__PURE__*/_checkBEM(React, \"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, this.dataPairArray.map(this.renderTableRow))));\n  }\n\n  render() {\n    return this.renderTable();\n  }\n\n}, _class.propTypes = {\n  title: PropTypes.string\n}, _class.defaultProps = {\n  title: ''\n}, _temp), \"Component/KeyValueTable/Component\");\nexport default KeyValueTable;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/KeyValueTable/KeyValueTable.component.js"],"names":["PropTypes","PureComponent","renderTableRow","data","key","label","value","getValueFromSource","dataPairArray","source","Array","isArray","join","renderHeading","title","props","renderTable","map","render","propTypes","string","defaultProps","KeyValueTable"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA;AAEA;;;;AACA,gHAAmCA,aAAnC,EAAiD;AAAA;AAAA;;AAAA;AAAA;;AAAA,SA0B7CC,cA1B6C,GA0B5B,UAACC,IAAD,EAAU;AACvB,YAAM;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAiBF,IAAvB;;AACA,YAAMG,KAAK,GAAG,KAAI,CAACC,kBAAL,CAAwBJ,IAAxB,CAAd;;AAEA,UAAI,CAACG,KAAL,EAAY;AACR,eAAO,IAAP;AACH;;AAED;AACQ,QAAA,GAAG,EAAGF,GADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEcC,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGcC,KAHd;AAMH,KAxC4C;AAAA;;AAS5B,MAAbE,aAAa,GAAG;AAChB,WAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AAPe,KAAP;AASH;;AAEDD,EAAAA,kBAAkB,CAAC;AAAEH,IAAAA,GAAF;AAAOK,IAAAA;AAAP,GAAD,EAAkB;AAChC,UAAM;AAAE,OAACL,GAAD,GAAOE;AAAT,QAAmBG,MAAzB;AACA,WAAOC,KAAK,CAACC,OAAN,CAAcL,KAAd,IAAuBA,KAAK,CAACM,IAAN,CAAW,IAAX,CAAvB,GAA0CN,KAAjD;AACH;;AAkBDO,EAAAA,aAAa,GAAG;AACZ,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;;AACA,QAAI,CAACD,KAAL,EAAY;AACR,aAAO,IAAP;AACH;;AAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGU,MAAA,KAAK,EAAC,eAHhB;AAIU,MAAA,IAAI,EAAC,SAJf;AAKU,MAAA,OAAO,EAAG,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOcA,KAPd;AAWH;;AAEDE,EAAAA,WAAW,GAAG;AACV;AACS,MAAA,KAAK,EAAC,eADf;AAC+B,MAAA,IAAI,EAAC,SADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEe,MAAA,KAAK,EAAC,eAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIkB,KAAKH,aAAL,EAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOkB,KAAKL,aAAL,CAAmBS,GAAnB,CAAuB,KAAKf,cAA5B,CAPlB;AAYH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKF,WAAL,EAAP;AACH;;AA9E4C,CAAjD,SACWG,SADX,GACuB;AACfL,EAAAA,KAAK,EAAEd,SAAS,CAACoB;AADF,CADvB,SAKWC,YALX,GAK0B;AAClBP,EAAAA,KAAK,EAAE;AADW,CAL1B;AAiFA,eAAeQ,aAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport './KeyValueTable.style';\n\n/** @namespace Component/KeyValueTable/Component */\nexport class KeyValueTable extends PureComponent {\n    static propTypes = {\n        title: PropTypes.string\n    };\n\n    static defaultProps = {\n        title: ''\n    };\n\n    get dataPairArray() {\n        return [\n            /**\n             * {\n             *     key: 'id',\n             *     label': 'Identifier',\n             *     source: customer\n             * }\n             */\n        ];\n    }\n\n    getValueFromSource({ key, source }) {\n        const { [key]: value } = source;\n        return Array.isArray(value) ? value.join(', ') : value;\n    }\n\n    renderTableRow = (data) => {\n        const { key, label } = data;\n        const value = this.getValueFromSource(data);\n\n        if (!value) {\n            return null;\n        }\n\n        return (\n            <tr key={ key }>\n                <th>{ label }</th>\n                <td>{ value }</td>\n            </tr>\n        );\n    };\n\n    renderHeading() {\n        const { title } = this.props;\n        if (!title) {\n            return null;\n        }\n\n        return (\n            <tr>\n                <th\n                  block=\"KeyValueTable\"\n                  elem=\"Heading\"\n                  colSpan={ 2 }\n                >\n                    { title }\n                </th>\n            </tr>\n        );\n    }\n\n    renderTable() {\n        return (\n            <div block=\"KeyValueTable\" elem=\"Wrapper\">\n                <table block=\"KeyValueTable\">\n                    <thead>\n                        { this.renderHeading() }\n                    </thead>\n                    <tbody>\n                        { this.dataPairArray.map(this.renderTableRow) }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    render() {\n        return this.renderTable();\n    }\n}\n\nexport default KeyValueTable;\n"]},"metadata":{},"sourceType":"module"}