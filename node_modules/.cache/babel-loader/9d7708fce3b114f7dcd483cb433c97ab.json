{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductReviews/ProductReviews.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport ContentWrapper from \"/home/arturs/scandiweb/scandipwa/src/component/ContentWrapper\";\nimport ExpandableContent from \"/home/arturs/scandiweb/scandipwa/src/component/ExpandableContent\";\nimport Popup from \"/home/arturs/scandiweb/scandipwa/src/component/Popup\";\nimport ProductReviewForm from \"/home/arturs/scandiweb/scandipwa/src/component/ProductReviewForm\";\nimport ProductReviewList from \"/home/arturs/scandiweb/scandipwa/src/component/ProductReviewList\";\nimport ProductReviewRating from \"/home/arturs/scandiweb/scandipwa/src/component/ProductReviewRating\";\nimport { ProductType } from \"/home/arturs/scandiweb/scandipwa/src/type/ProductList\";\nimport { REVIEW_POPUP_ID } from \"./ProductReviews.config\";\nimport \"./ProductReviews.style\";\n/** #namespace Component/ProductReviews/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductReviews = Mosaic.middleware((_temp = _class = class ProductReviews_ extends Mosaic.Extensible(PureComponent) {\n  renderPopup() {\n    const {\n      product\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, Popup, {\n      id: REVIEW_POPUP_ID,\n      mix: {\n        block: 'ProductReviews',\n        elem: 'Popup'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, ProductReviewForm, {\n      product: product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderButton() {\n    const {\n      showPopup\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"button\", {\n      block: \"ProductReviews\",\n      elem: \"Button\",\n      mix: {\n        block: 'Button'\n      },\n      onClick: showPopup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, __('Write a new review'));\n  }\n\n  renderNoRating() {\n    return /*#__PURE__*/_checkBEM(React, \"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, __('There are no reviews yet! Click button on the right to submit one!'));\n  }\n\n  renderRatingSchema(percent, reviewCount) {\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, /*#__PURE__*/_checkBEM(React, \"meta\", {\n      itemProp: \"ratingValue\",\n      content: percent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"meta\", {\n      itemProp: \"worstRating\",\n      content: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"meta\", {\n      itemProp: \"bestRating\",\n      content: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"meta\", {\n      itemProp: \"reviewCount\",\n      content: reviewCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderRatingData() {\n    const {\n      product: {\n        review_summary: {\n          rating_summary,\n          review_count\n        } = {}\n      }\n    } = this.props;\n    const STARS_COUNT = 5;\n    const PERCENT = 100; // eslint-disable-next-line no-mixed-operators\n\n    const percent = parseFloat(STARS_COUNT * (rating_summary || 0) / PERCENT).toFixed(2);\n\n    if (!review_count) {\n      return this.renderNoRating();\n    }\n\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, this.renderRatingSchema(rating_summary, review_count), /*#__PURE__*/_checkBEM(React, ProductReviewRating, {\n      mix: {\n        block: 'ProductReviews',\n        elem: 'SummaryRating'\n      },\n      summary: rating_summary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"p\", {\n      block: \"ProductReviews\",\n      elem: \"SummaryDetails\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, percent, /*#__PURE__*/_checkBEM(React, \"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, __('%s reviews', review_count || 0))));\n  }\n\n  renderSummary() {\n    const {\n      product: {\n        review_summary: {\n          review_count\n        } = {}\n      }\n    } = this.props;\n    const reviewSchemaObject = review_count ? {\n      itemType: 'http://schema.org/AggregateRating',\n      itemProp: 'aggregateRating',\n      itemScope: true\n    } : {};\n    return /*#__PURE__*/_checkBEM(React, \"div\", Object.assign({\n      block: \"ProductReviews\",\n      elem: \"Summary\"\n    }, reviewSchemaObject, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }), this.renderRatingData(), this.renderButton());\n  }\n\n  renderList() {\n    const {\n      product\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, ProductReviewList, {\n      product: product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    const {\n      product,\n      areDetailsLoaded\n    } = this.props;\n    const {\n      review_summary: {\n        review_count\n      } = {}\n    } = product;\n    const heading = areDetailsLoaded ? __('Product reviews (%s)', review_count || '0') : '';\n    return /*#__PURE__*/_checkBEM(React, ContentWrapper, {\n      label: \"Product reviews\",\n      mix: {\n        block: 'ProductReviews'\n      },\n      wrapperMix: {\n        block: 'ProductReviews',\n        elem: 'Wrapper'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, ExpandableContent, {\n      mix: {\n        block: 'ProductReviews',\n        elem: 'Content'\n      },\n      heading: heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, this.renderSummary(), this.renderList(), this.renderPopup()));\n  }\n\n}, _class.propTypes = {\n  product: ProductType.isRequired,\n  showPopup: PropTypes.func.isRequired,\n  areDetailsLoaded: PropTypes.bool\n}, _class.defaultProps = {\n  areDetailsLoaded: false\n}, _temp), \"Component/ProductReviews/Component\");\nexport default ProductReviews;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductReviews/ProductReviews.component.js"],"names":["PropTypes","PureComponent","ContentWrapper","ExpandableContent","Popup","ProductReviewForm","ProductReviewList","ProductReviewRating","ProductType","REVIEW_POPUP_ID","renderPopup","product","props","block","elem","renderButton","showPopup","__","renderNoRating","renderRatingSchema","percent","reviewCount","renderRatingData","review_summary","rating_summary","review_count","STARS_COUNT","PERCENT","parseFloat","toFixed","renderSummary","reviewSchemaObject","itemType","itemProp","itemScope","renderList","render","areDetailsLoaded","heading","propTypes","isRequired","func","bool","defaultProps","ProductReviews"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,cAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,KAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,mBAAP;AACA,SAASC,WAAT;AAEA,SAASC,eAAT;AAEA;AAEA;;;;AACA,kHAAoCR,aAApC,EAAkD;AAW9CS,EAAAA,WAAW,GAAG;AACV,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AAEA,yCACK,KADL;AAEM,MAAA,EAAE,EAAGH,eAFX;AAGM,MAAA,GAAG,EAAG;AAAEI,QAAAA,KAAK,EAAE,gBAAT;AAA2BC,QAAAA,IAAI,EAAE;AAAjC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAKS,iBALT;AAK2B,MAAA,OAAO,EAAGH,OALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQH;;AAEDI,EAAAA,YAAY,GAAG;AACX,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKJ,KAA3B;AAEA;AAEM,MAAA,KAAK,EAAC,gBAFZ;AAGM,MAAA,IAAI,EAAC,QAHX;AAIM,MAAA,GAAG,EAAG;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAJZ;AAKM,MAAA,OAAO,EAAGG,SALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOUC,EAAE,CAAC,oBAAD,CAPZ;AAUH;;AAEDC,EAAAA,cAAc,GAAG;AACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEUD,EAAE,CAAC,oEAAD,CAFZ;AAKH;;AAEDE,EAAAA,kBAAkB,CAACC,OAAD,EAAUC,WAAV,EAAuB;AACrC;AAEc,MAAA,QAAQ,EAAC,aAFvB;AAEqC,MAAA,OAAO,EAAGD,OAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGc,MAAA,QAAQ,EAAC,aAHvB;AAGqC,MAAA,OAAO,EAAG,CAH/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIc,MAAA,QAAQ,EAAC,YAJvB;AAIoC,MAAA,OAAO,EAAG,GAJ9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKc,MAAA,QAAQ,EAAC,aALvB;AAKqC,MAAA,OAAO,EAAGC,WAL/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQH;;AAEDC,EAAAA,gBAAgB,GAAG;AACf,UAAM;AACFX,MAAAA,OAAO,EAAE;AACLY,QAAAA,cAAc,EAAE;AACZC,UAAAA,cADY;AAEZC,UAAAA;AAFY,YAGZ;AAJC;AADP,QAOF,KAAKb,KAPT;AASA,UAAMc,WAAW,GAAG,CAApB;AACA,UAAMC,OAAO,GAAG,GAAhB,CAXe,CAaf;;AACA,UAAMP,OAAO,GAAGQ,UAAU,CAACF,WAAW,IAAIF,cAAc,IAAI,CAAtB,CAAX,GAAsCG,OAAvC,CAAV,CAA0DE,OAA1D,CAAkE,CAAlE,CAAhB;;AAEA,QAAI,CAACJ,YAAL,EAAmB;AACf,aAAO,KAAKP,cAAL,EAAP;AACH;;AAED,+DAEU,KAAKC,kBAAL,CAAwBK,cAAxB,EAAwCC,YAAxC,CAFV,gCAGS,mBAHT;AAIU,MAAA,GAAG,EAAG;AAAEZ,QAAAA,KAAK,EAAE,gBAAT;AAA2BC,QAAAA,IAAI,EAAE;AAAjC,OAJhB;AAKU,MAAA,OAAO,EAAGU,cALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOW,MAAA,KAAK,EAAC,gBAPjB;AAOkC,MAAA,IAAI,EAAC,gBAPvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQcJ,OARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASoBH,EAAE,CAAC,YAAD,EAAeQ,YAAY,IAAI,CAA/B,CATtB;AAaH;;AAEDK,EAAAA,aAAa,GAAG;AACZ,UAAM;AACFnB,MAAAA,OAAO,EAAE;AACLY,QAAAA,cAAc,EAAE;AACZE,UAAAA;AADY,YAEZ;AAHC;AADP,QAMF,KAAKb,KANT;AAQA,UAAMmB,kBAAkB,GAAGN,YAAY,GACjC;AACEO,MAAAA,QAAQ,EAAE,mCADZ;AAEEC,MAAAA,QAAQ,EAAE,iBAFZ;AAGEC,MAAAA,SAAS,EAAE;AAHb,KADiC,GAK/B,EALR;AAOA;AAEM,MAAA,KAAK,EAAC,gBAFZ;AAGM,MAAA,IAAI,EAAC;AAHX,OAIWH,kBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMU,KAAKT,gBAAL,EANV,EAOU,KAAKP,YAAL,EAPV;AAUH;;AAEDoB,EAAAA,UAAU,GAAG;AACT,UAAM;AAAExB,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AAEA,yCACK,iBADL;AAEM,MAAA,OAAO,EAAGD,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH;;AAEDyB,EAAAA,MAAM,GAAG;AACL,UAAM;AACFzB,MAAAA,OADE;AAEF0B,MAAAA;AAFE,QAGF,KAAKzB,KAHT;AAKA,UAAM;AACFW,MAAAA,cAAc,EAAE;AAAEE,QAAAA;AAAF,UAAmB;AADjC,QAEFd,OAFJ;AAIA,UAAM2B,OAAO,GAAGD,gBAAgB,GAC1BpB,EAAE,CAAC,sBAAD,EAAyBQ,YAAY,IAAI,GAAzC,CADwB,GAE1B,EAFN;AAIA,yCACK,cADL;AAEM,MAAA,KAAK,EAAC,iBAFZ;AAGM,MAAA,GAAG,EAAG;AAAEZ,QAAAA,KAAK,EAAE;AAAT,OAHZ;AAIM,MAAA,UAAU,EAAG;AAAEA,QAAAA,KAAK,EAAE,gBAAT;AAA2BC,QAAAA,IAAI,EAAE;AAAjC,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAMS,iBANT;AAOU,MAAA,GAAG,EAAG;AAAED,QAAAA,KAAK,EAAE,gBAAT;AAA2BC,QAAAA,IAAI,EAAE;AAAjC,OAPhB;AAQU,MAAA,OAAO,EAAGwB,OARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUc,KAAKR,aAAL,EAVd,EAWc,KAAKK,UAAL,EAXd,EAYc,KAAKzB,WAAL,EAZd;AAgBH;;AAjK6C,CAAlD,SACW6B,SADX,GACuB;AACf5B,EAAAA,OAAO,EAAEH,WAAW,CAACgC,UADN;AAEfxB,EAAAA,SAAS,EAAEhB,SAAS,CAACyC,IAAV,CAAeD,UAFX;AAGfH,EAAAA,gBAAgB,EAAErC,SAAS,CAAC0C;AAHb,CADvB,SAOWC,YAPX,GAO0B;AAClBN,EAAAA,gBAAgB,EAAE;AADA,CAP1B;AAoKA,eAAeO,cAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport ContentWrapper from 'Component/ContentWrapper';\nimport ExpandableContent from 'Component/ExpandableContent';\nimport Popup from 'Component/Popup';\nimport ProductReviewForm from 'Component/ProductReviewForm';\nimport ProductReviewList from 'Component/ProductReviewList';\nimport ProductReviewRating from 'Component/ProductReviewRating';\nimport { ProductType } from 'Type/ProductList';\n\nimport { REVIEW_POPUP_ID } from './ProductReviews.config';\n\nimport './ProductReviews.style';\n\n/** @namespace Component/ProductReviews/Component */\nexport class ProductReviews extends PureComponent {\n    static propTypes = {\n        product: ProductType.isRequired,\n        showPopup: PropTypes.func.isRequired,\n        areDetailsLoaded: PropTypes.bool\n    };\n\n    static defaultProps = {\n        areDetailsLoaded: false\n    };\n\n    renderPopup() {\n        const { product } = this.props;\n\n        return (\n            <Popup\n              id={ REVIEW_POPUP_ID }\n              mix={ { block: 'ProductReviews', elem: 'Popup' } }\n            >\n                <ProductReviewForm product={ product } />\n            </Popup>\n        );\n    }\n\n    renderButton() {\n        const { showPopup } = this.props;\n\n        return (\n            <button\n              block=\"ProductReviews\"\n              elem=\"Button\"\n              mix={ { block: 'Button' } }\n              onClick={ showPopup }\n            >\n                { __('Write a new review') }\n            </button>\n        );\n    }\n\n    renderNoRating() {\n        return (\n            <p>\n                { __('There are no reviews yet! Click button on the right to submit one!') }\n            </p>\n        );\n    }\n\n    renderRatingSchema(percent, reviewCount) {\n        return (\n            <>\n                <meta itemProp=\"ratingValue\" content={ percent } />\n                <meta itemProp=\"worstRating\" content={ 0 } />\n                <meta itemProp=\"bestRating\" content={ 100 } />\n                <meta itemProp=\"reviewCount\" content={ reviewCount } />\n            </>\n        );\n    }\n\n    renderRatingData() {\n        const {\n            product: {\n                review_summary: {\n                    rating_summary,\n                    review_count\n                } = {}\n            }\n        } = this.props;\n\n        const STARS_COUNT = 5;\n        const PERCENT = 100;\n\n        // eslint-disable-next-line no-mixed-operators\n        const percent = parseFloat(STARS_COUNT * (rating_summary || 0) / PERCENT).toFixed(2);\n\n        if (!review_count) {\n            return this.renderNoRating();\n        }\n\n        return (\n            <>\n                { this.renderRatingSchema(rating_summary, review_count) }\n                <ProductReviewRating\n                  mix={ { block: 'ProductReviews', elem: 'SummaryRating' } }\n                  summary={ rating_summary }\n                />\n                <p block=\"ProductReviews\" elem=\"SummaryDetails\">\n                    { percent }\n                    <span>{ __('%s reviews', review_count || 0) }</span>\n                </p>\n            </>\n        );\n    }\n\n    renderSummary() {\n        const {\n            product: {\n                review_summary: {\n                    review_count\n                } = {}\n            }\n        } = this.props;\n\n        const reviewSchemaObject = review_count\n            ? {\n                itemType: 'http://schema.org/AggregateRating',\n                itemProp: 'aggregateRating',\n                itemScope: true\n            } : {};\n\n        return (\n            <div\n              block=\"ProductReviews\"\n              elem=\"Summary\"\n              { ...reviewSchemaObject }\n            >\n                { this.renderRatingData() }\n                { this.renderButton() }\n            </div>\n        );\n    }\n\n    renderList() {\n        const { product } = this.props;\n\n        return (\n            <ProductReviewList\n              product={ product }\n            />\n        );\n    }\n\n    render() {\n        const {\n            product,\n            areDetailsLoaded\n        } = this.props;\n\n        const {\n            review_summary: { review_count } = {}\n        } = product;\n\n        const heading = areDetailsLoaded\n            ? __('Product reviews (%s)', review_count || '0')\n            : '';\n\n        return (\n            <ContentWrapper\n              label=\"Product reviews\"\n              mix={ { block: 'ProductReviews' } }\n              wrapperMix={ { block: 'ProductReviews', elem: 'Wrapper' } }\n            >\n                <ExpandableContent\n                  mix={ { block: 'ProductReviews', elem: 'Content' } }\n                  heading={ heading }\n                >\n                    { this.renderSummary() }\n                    { this.renderList() }\n                    { this.renderPopup() }\n                </ExpandableContent>\n            </ContentWrapper>\n        );\n    }\n}\n\nexport default ProductReviews;\n"]},"metadata":{},"sourceType":"module"}