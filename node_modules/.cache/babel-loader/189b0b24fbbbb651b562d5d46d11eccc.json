{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Popup/Popup.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { POPUP } from \"/home/arturs/scandiweb/scandipwa/src/component/Header/Header.config\";\nimport { changeNavigationState, goToPreviousNavigationState } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.action\";\nimport { TOP_NAVIGATION_TYPE } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.reducer\";\nimport { hideActiveOverlay, hideActivePopup } from \"/home/arturs/scandiweb/scandipwa/src/store/Overlay/Overlay.action\";\nimport Popup from \"./Popup.component\";\n/** #namespace Component/Popup/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    activeOverlay: state.OverlayReducer.activeOverlay,\n    areOtherOverlaysOpen: state.OverlayReducer.areOtherOverlaysOpen,\n    shouldPopupClose: state.PopupReducer.shouldPopupClose,\n    payload: state.PopupReducer.popupPayload,\n    device: state.ConfigReducer.device\n  };\n}, \"Component/Popup/Container/mapStateToProps\");\n/** #namespace Component/Popup/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    hideActiveOverlay: function () {\n      return dispatch(hideActiveOverlay());\n    },\n    resetHideActivePopup: function () {\n      return dispatch(hideActivePopup(false));\n    },\n    changeHeaderState: function (state) {\n      return dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state));\n    },\n    goToPreviousNavigationState: function (state) {\n      return dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE, state));\n    }\n  };\n}, \"Component/Popup/Container/mapDispatchToProps\");\n/** #namespace Component/Popup/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const PopupContainer = Mosaic.middleware((_temp = _class = class PopupContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.containerFunctions = {\n      onVisible: this.onVisible.bind(this)\n    };\n\n    this.containerProps = function () {\n      return {\n        title: _this._getPopupTitle()\n      };\n    };\n  }\n\n  onVisible() {\n    const {\n      changeHeaderState,\n      onVisible\n    } = this.props;\n    changeHeaderState({\n      name: POPUP,\n      title: this._getPopupTitle(),\n      onCloseClick: function () {\n        history.back();\n      }\n    });\n    onVisible();\n  }\n\n  _getPopupTitle() {\n    const {\n      payload,\n      activeOverlay\n    } = this.props;\n    const {\n      title\n    } = payload[activeOverlay] || {};\n    return title;\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, Popup, Object.assign({}, this.props, this.containerProps(), this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  payload: PropTypes.objectOf(PropTypes.shape({\n    title: PropTypes.string\n  })).isRequired,\n  activeOverlay: PropTypes.string.isRequired,\n  goToPreviousNavigationState: PropTypes.func.isRequired,\n  changeHeaderState: PropTypes.func.isRequired,\n  onVisible: PropTypes.func,\n  onClose: PropTypes.func,\n  shouldPopupClose: PropTypes.bool.isRequired\n}, _class.defaultProps = {\n  onVisible: function () {},\n  onClose: function () {}\n}, _temp), \"Component/Popup/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(PopupContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Popup/Popup.container.js"],"names":["PropTypes","PureComponent","connect","POPUP","changeNavigationState","goToPreviousNavigationState","TOP_NAVIGATION_TYPE","hideActiveOverlay","hideActivePopup","Popup","mapStateToProps","state","activeOverlay","OverlayReducer","areOtherOverlaysOpen","shouldPopupClose","PopupReducer","payload","popupPayload","device","ConfigReducer","mapDispatchToProps","dispatch","resetHideActivePopup","changeHeaderState","containerFunctions","onVisible","bind","containerProps","title","_getPopupTitle","props","name","onCloseClick","history","back","render","propTypes","objectOf","shape","string","isRequired","func","onClose","bool","defaultProps","PopupContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { POPUP } from 'Component/Header/Header.config';\nimport { changeNavigationState, goToPreviousNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { hideActiveOverlay, hideActivePopup } from 'Store/Overlay/Overlay.action';\n\nimport Popup from './Popup.component';\n\n/** @namespace Component/Popup/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    activeOverlay: state.OverlayReducer.activeOverlay,\n    areOtherOverlaysOpen: state.OverlayReducer.areOtherOverlaysOpen,\n    shouldPopupClose: state.PopupReducer.shouldPopupClose,\n    payload: state.PopupReducer.popupPayload,\n    device: state.ConfigReducer.device\n});\n\n/** @namespace Component/Popup/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    hideActiveOverlay: () => dispatch(hideActiveOverlay()),\n    resetHideActivePopup: () => dispatch(hideActivePopup(false)),\n    changeHeaderState: (state) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state)),\n    goToPreviousNavigationState: (state) => dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE, state))\n});\n\n/** @namespace Component/Popup/Container */\nexport class PopupContainer extends PureComponent {\n    static propTypes = {\n        payload: PropTypes.objectOf(\n            PropTypes.shape({\n                title: PropTypes.string\n            })\n        ).isRequired,\n        activeOverlay: PropTypes.string.isRequired,\n        goToPreviousNavigationState: PropTypes.func.isRequired,\n        changeHeaderState: PropTypes.func.isRequired,\n        onVisible: PropTypes.func,\n        onClose: PropTypes.func,\n        shouldPopupClose: PropTypes.bool.isRequired\n    };\n\n    static defaultProps = {\n        onVisible: () => {},\n        onClose: () => {}\n    };\n\n    containerFunctions = {\n        onVisible: this.onVisible.bind(this)\n    };\n\n    onVisible() {\n        const { changeHeaderState, onVisible } = this.props;\n\n        changeHeaderState({\n            name: POPUP,\n            title: this._getPopupTitle(),\n            onCloseClick: () => {\n                history.back();\n            }\n        });\n\n        onVisible();\n    }\n\n    containerProps = () => ({\n        title: this._getPopupTitle()\n    });\n\n    _getPopupTitle() {\n        const { payload, activeOverlay } = this.props;\n        const { title } = payload[activeOverlay] || {};\n        return title;\n    }\n\n    render() {\n        return (\n            <Popup\n              { ...this.props }\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PopupContainer);\n"]},"metadata":{},"sourceType":"module"}