{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { getIndexedProduct } from \"/home/arturs/scandiweb/extension/src/util/Product\";\nimport { UPDATE_PRODUCT_DETAILS } from \"./Product.action\";\n/** #namespace Store/Product/Reducer/getInitialState */\n\nexport const getInitialState = Mosaic.middleware(function () {\n  return {\n    product: {},\n    formattedConfigurableOptions: {}\n  };\n}, \"Store/Product/Reducer/getInitialState\");\n/** #namespace Store/Product/Reducer/formatConfigurableOptions */\n\nexport const formatConfigurableOptions = Mosaic.middleware(function (configurable_options) {\n  return configurable_options.reduce(function (prev, option) {\n    const {\n      attribute_id,\n      label,\n      attribute_code\n    } = option;\n    return { ...prev,\n      [attribute_code]: {\n        attribute_id,\n        label\n      }\n    };\n  }, {});\n}, \"Store/Product/Reducer/formatConfigurableOptions\");\n/** #namespace Store/Product/Reducer */\n\nexport const ProductReducer = Mosaic.middleware(_c = function (state = getInitialState(), action) {\n  switch (action.type) {\n    case UPDATE_PRODUCT_DETAILS:\n      const {\n        product\n      } = action;\n      return { ...state,\n        product: getIndexedProduct(product)\n      };\n\n    default:\n      return state;\n  }\n}, \"Store/Product/Reducer\");\n_c2 = ProductReducer;\nexport default ProductReducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductReducer$\");\n$RefreshReg$(_c2, \"ProductReducer\");","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/store/Product/Product.reducer.js"],"names":["getIndexedProduct","UPDATE_PRODUCT_DETAILS","getInitialState","product","formattedConfigurableOptions","formatConfigurableOptions","configurable_options","reduce","prev","option","attribute_id","label","attribute_code","ProductReducer","state","action","type"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,iBAAT;AAEA,SAASC,sBAAT;AAEA;;AACA,OAAO,MAAMC,eAAe,qBAAG;AAAA,SAAO;AAClCC,IAAAA,OAAO,EAAE,EADyB;AAElCC,IAAAA,4BAA4B,EAAE;AAFI,GAAP;AAAA,CAAH,0CAArB;AAKP;;AACA,OAAO,MAAMC,yBAAyB,qBAAG,UAACC,oBAAD;AAAA,SAA0BA,oBAAoB,CAClFC,MAD8D,CACvD,UAACC,IAAD,EAAOC,MAAP,EAAkB;AACtB,UAAM;AACFC,MAAAA,YADE;AAEFC,MAAAA,KAFE;AAGFC,MAAAA;AAHE,QAIFH,MAJJ;AAMA,WAAO,EACH,GAAGD,IADA;AAEH,OAACI,cAAD,GAAkB;AACdF,QAAAA,YADc;AAEdC,QAAAA;AAFc;AAFf,KAAP;AAOH,GAf8D,EAe5D,EAf4D,CAA1B;AAAA,CAAH,oDAA/B;AAiBP;;AACA,OAAO,MAAME,cAAc,0BAAG,UAC1BC,KAAK,GAAGZ,eAAe,EADG,EAE1Ba,MAF0B,EAGzB;AACD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKf,sBAAL;AACI,YAAM;AAAEE,QAAAA;AAAF,UAAcY,MAApB;AAEA,aAAO,EACH,GAAGD,KADA;AAEHX,QAAAA,OAAO,EAAEH,iBAAiB,CAACG,OAAD;AAFvB,OAAP;;AAKJ;AACI,aAAOW,KAAP;AAVJ;AAYH,CAhB0B,0BAApB;MAAMD,c;AAkBb,eAAeA,cAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { getIndexedProduct } from 'Util/Product';\n\nimport { UPDATE_PRODUCT_DETAILS } from './Product.action';\n\n/** @namespace Store/Product/Reducer/getInitialState */\nexport const getInitialState = () => ({\n    product: {},\n    formattedConfigurableOptions: {}\n});\n\n/** @namespace Store/Product/Reducer/formatConfigurableOptions */\nexport const formatConfigurableOptions = (configurable_options) => configurable_options\n    .reduce((prev, option) => {\n        const {\n            attribute_id,\n            label,\n            attribute_code\n        } = option;\n\n        return {\n            ...prev,\n            [attribute_code]: {\n                attribute_id,\n                label\n            }\n        };\n    }, {});\n\n/** @namespace Store/Product/Reducer */\nexport const ProductReducer = (\n    state = getInitialState(),\n    action\n) => {\n    switch (action.type) {\n    case UPDATE_PRODUCT_DETAILS:\n        const { product } = action;\n\n        return {\n            ...state,\n            product: getIndexedProduct(product)\n        };\n\n    default:\n        return state;\n    }\n};\n\nexport default ProductReducer;\n"]},"metadata":{},"sourceType":"module"}