{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/VideoPopup/VideoPopup.component.js\";\n\n/* eslint-disable react/no-unused-state */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { PureComponent } from 'react';\nimport Popup from \"/home/arturs/scandiweb/extension/src/component/Popup\";\nimport { MediaItemType } from \"/home/arturs/scandiweb/extension/src/type/ProductList\";\nimport { makeCancelable } from \"/home/arturs/scandiweb/extension/src/util/Promise\";\nimport { VIDEO_POPUP_ID, VIMEO_FORMAT, YOUTUBE_FORMAT } from \"./VideoPopup.config\";\nimport \"./VideoPopup.style\";\n/**\n * A popup capable of displaying a video\n * @class VideoPopup\n * #namespace Component/VideoPopup/Component\n */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const VideoPopup = Mosaic.middleware((_temp = _class = class VideoPopup_ extends Mosaic.Extensible(PureComponent) {\n  componentDidMount() {\n    var _this = this;\n\n    this.loadVimeoLibrary();\n    this.loadYouTubeLibrary();\n    Promise.all([this.vimeoPromise, this.youTubePromise]).then(\n    /** #namespace Component/VideoPopup/Component/videoLibrariesThen */\n    Mosaic.middleware(function () {\n      return _this.forceUpdate();\n    }, \"Component/VideoPopup/Component/videoLibrariesThen\"));\n  }\n\n  componentWillUnmount() {\n    if (this.youTubePromise) {\n      this.youTubePromise.cancel();\n    }\n\n    if (this.vimeoPromise) {\n      this.vimeoPromise.cancel();\n    }\n  }\n  /**\n   * Renders a video provided by Vimeo\n   * @param videoId\n   * @returns {*}\n   * @private\n   */\n\n\n  _renderVimeoVideo(videoId) {\n    const Vimeo = this.vimeoComponent;\n\n    if (!Vimeo) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, Vimeo, {\n      videoId: videoId,\n      autoplay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    });\n  }\n  /**\n   * Renders a video provided by Youtube\n   * @param videoId\n   * @returns {*}\n   * @private\n   */\n\n\n  _renderYoutubeVideo(videoId) {\n    const YouTube = this.youTubeComponent;\n\n    if (!YouTube) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, YouTube, {\n      videoId: videoId,\n      containerClassName: \"VideoPopup-YouTubeContainer\" // eslint-disable-next-line react/forbid-component-props\n      ,\n      className: \"VideoPopup-YouTube\",\n      opts: {\n        playerVars: {\n          autoplay: 1\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    });\n  }\n\n  loadVimeoLibrary() {\n    var _this2 = this;\n\n    this.vimeoPromise = makeCancelable(import('react-vimeo'));\n    this.vimeoPromise.promise.then(\n    /** #namespace Component/VideoPopup/Component/vimeoPromisePromiseThen */\n    Mosaic.middleware(function ({\n      default: vimeo\n    }) {\n      _this2.vimeoComponent = vimeo;\n    }, \"Component/VideoPopup/Component/vimeoPromisePromiseThen\"));\n  }\n\n  loadYouTubeLibrary() {\n    var _this3 = this;\n\n    this.youTubePromise = makeCancelable(import('react-youtube'));\n    this.youTubePromise.promise.then(\n    /** #namespace Component/VideoPopup/Component/youTubePromisePromiseThen */\n    Mosaic.middleware(function ({\n      default: youTube\n    }) {\n      _this3.youTubeComponent = youTube;\n    }, \"Component/VideoPopup/Component/youTubePromisePromiseThen\"));\n  }\n  /**\n   * Parses the video URL and renders the video accordingly\n   * @returns {null|*}\n   * @private\n   */\n\n\n  _renderVideoContent() {\n    const {\n      payload: {\n        media: {\n          video_content: {\n            video_url\n          } = {}\n        } = {}\n      }\n    } = this.props;\n\n    if (!video_url) {\n      return null;\n    }\n\n    const [, vimeoId] = VIMEO_FORMAT.exec(video_url) || [];\n\n    if (vimeoId) {\n      return this._renderVimeoVideo(vimeoId);\n    }\n\n    const [, youtubeId] = YOUTUBE_FORMAT.exec(video_url);\n\n    if (youtubeId) {\n      return this._renderYoutubeVideo(youtubeId);\n    }\n\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, Popup, {\n      id: VIDEO_POPUP_ID,\n      mix: {\n        block: 'VideoPopup'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"VideoPopup\",\n      elem: \"VideoPlayer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"VideoPopup\",\n      elem: \"PlayerContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, this._renderVideoContent())));\n  }\n\n}, _class.propTypes = {\n  payload: MediaItemType.isRequired\n}, _temp), \"Component/VideoPopup/Component\");\nexport default VideoPopup;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/VideoPopup/VideoPopup.component.js"],"names":["PureComponent","Popup","MediaItemType","makeCancelable","VIDEO_POPUP_ID","VIMEO_FORMAT","YOUTUBE_FORMAT","componentDidMount","loadVimeoLibrary","loadYouTubeLibrary","Promise","all","vimeoPromise","youTubePromise","then","forceUpdate","componentWillUnmount","cancel","_renderVimeoVideo","videoId","Vimeo","vimeoComponent","_renderYoutubeVideo","YouTube","youTubeComponent","playerVars","autoplay","promise","default","vimeo","youTube","_renderVideoContent","payload","media","video_content","video_url","props","vimeoId","exec","youtubeId","render","block","propTypes","isRequired","VideoPopup"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-state */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { PureComponent } from 'react';\n\nimport Popup from 'Component/Popup';\nimport { MediaItemType } from 'Type/ProductList';\nimport { makeCancelable } from 'Util/Promise';\n\nimport { VIDEO_POPUP_ID, VIMEO_FORMAT, YOUTUBE_FORMAT } from './VideoPopup.config';\n\nimport './VideoPopup.style';\n\n/**\n * A popup capable of displaying a video\n * @class VideoPopup\n * @namespace Component/VideoPopup/Component\n */\nexport class VideoPopup extends PureComponent {\n    static propTypes = {\n        payload: MediaItemType.isRequired\n    };\n\n    componentDidMount() {\n        this.loadVimeoLibrary();\n        this.loadYouTubeLibrary();\n\n        Promise.all([\n            this.vimeoPromise,\n            this.youTubePromise\n        ]).then(\n            /** @namespace Component/VideoPopup/Component/videoLibrariesThen */\n            () => this.forceUpdate()\n        );\n    }\n\n    componentWillUnmount() {\n        if (this.youTubePromise) {\n            this.youTubePromise.cancel();\n        }\n\n        if (this.vimeoPromise) {\n            this.vimeoPromise.cancel();\n        }\n    }\n\n    /**\n     * Renders a video provided by Vimeo\n     * @param videoId\n     * @returns {*}\n     * @private\n     */\n    _renderVimeoVideo(videoId) {\n        const Vimeo = this.vimeoComponent;\n\n        if (!Vimeo) {\n            return null;\n        }\n\n        return (\n            <Vimeo\n              videoId={ videoId }\n              autoplay\n            />\n        );\n    }\n\n    /**\n     * Renders a video provided by Youtube\n     * @param videoId\n     * @returns {*}\n     * @private\n     */\n    _renderYoutubeVideo(videoId) {\n        const YouTube = this.youTubeComponent;\n\n        if (!YouTube) {\n            return null;\n        }\n\n        return (\n            <YouTube\n              videoId={ videoId }\n              containerClassName=\"VideoPopup-YouTubeContainer\"\n              // eslint-disable-next-line react/forbid-component-props\n              className=\"VideoPopup-YouTube\"\n              opts={ { playerVars: { autoplay: 1 } } }\n            />\n        );\n    }\n\n    loadVimeoLibrary() {\n        this.vimeoPromise = makeCancelable(import('react-vimeo'));\n\n        this.vimeoPromise.promise.then(\n            /** @namespace Component/VideoPopup/Component/vimeoPromisePromiseThen */\n            ({ default: vimeo }) => {\n                this.vimeoComponent = vimeo;\n            }\n        );\n    }\n\n    loadYouTubeLibrary() {\n        this.youTubePromise = makeCancelable(import('react-youtube'));\n\n        this.youTubePromise.promise.then(\n            /** @namespace Component/VideoPopup/Component/youTubePromisePromiseThen */\n            ({ default: youTube }) => {\n                this.youTubeComponent = youTube;\n            }\n        );\n    }\n\n    /**\n     * Parses the video URL and renders the video accordingly\n     * @returns {null|*}\n     * @private\n     */\n    _renderVideoContent() {\n        const {\n            payload: {\n                media: {\n                    video_content: { video_url } = {}\n                } = {}\n            }\n        } = this.props;\n\n        if (!video_url) {\n            return null;\n        }\n\n        const [, vimeoId] = VIMEO_FORMAT.exec(video_url) || [];\n        if (vimeoId) {\n            return this._renderVimeoVideo(vimeoId);\n        }\n\n        const [, youtubeId] = YOUTUBE_FORMAT.exec(video_url);\n        if (youtubeId) {\n            return this._renderYoutubeVideo(youtubeId);\n        }\n\n        return null;\n    }\n\n    render() {\n        return (\n            <Popup id={ VIDEO_POPUP_ID } mix={ { block: 'VideoPopup' } }>\n                <div block=\"VideoPopup\" elem=\"VideoPlayer\">\n                    <div block=\"VideoPopup\" elem=\"PlayerContent\">\n                        { this._renderVideoContent() }\n                    </div>\n                </div>\n            </Popup>\n        );\n    }\n}\n\nexport default VideoPopup;\n"]},"metadata":{},"sourceType":"module"}