{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/Overlay/Overlay.component.js\";\n\n/* eslint-disable react/no-unused-prop-types */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ChildrenType, MixType } from \"/home/arturs/scandiweb/extension/src/type/Common\";\nimport { DeviceType } from \"/home/arturs/scandiweb/extension/src/type/Device\";\nimport { toggleScroll } from \"/home/arturs/scandiweb/extension/src/util/Browser\";\nimport \"./Overlay.style\";\n/** #namespace Component/Overlay/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const Overlay = Mosaic.middleware((_temp = _class = class Overlay_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.overlayRef = /*#__PURE__*/createRef();\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevWasVisible = this.getIsVisible(prevProps);\n    const isVisible = this.getIsVisible();\n\n    if (isVisible && !prevWasVisible) {\n      this.onVisible();\n    }\n\n    if (!isVisible && prevWasVisible) {\n      this.onHide();\n    }\n  }\n\n  onVisible() {\n    const {\n      onVisible,\n      isStatic,\n      device\n    } = this.props;\n\n    if (isStatic) {\n      return;\n    }\n\n    if (device.isMobile) {\n      this.freezeScroll();\n    }\n\n    this.overlayRef.current.focus();\n    onVisible();\n  }\n\n  onHide() {\n    const {\n      onHide,\n      isStatic,\n      device\n    } = this.props;\n\n    if (isStatic) {\n      return;\n    }\n\n    if (device.isMobile) {\n      this.unfreezeScroll();\n    }\n\n    onHide();\n  }\n\n  getIsVisible(props = this.props) {\n    const {\n      id,\n      activeOverlay,\n      isStatic\n    } = props;\n    return isStatic || id === activeOverlay;\n  }\n\n  freezeScroll() {\n    this.YoffsetWhenScrollDisabled = window.pageYOffset || document.body.scrollTop;\n    toggleScroll(false);\n    document.body.style.marginTop = `${-this.YoffsetWhenScrollDisabled}px`;\n  }\n\n  unfreezeScroll() {\n    toggleScroll(true);\n    document.body.style.marginTop = 0;\n    window.scrollTo(0, this.YoffsetWhenScrollDisabled);\n  }\n\n  renderInMobilePortal(content) {\n    const {\n      isStatic,\n      isRenderInPortal,\n      device\n    } = this.props;\n\n    if (!isStatic && device.isMobile && isRenderInPortal) {\n      return /*#__PURE__*/createPortal(content, document.body);\n    }\n\n    return content;\n  }\n\n  render() {\n    const {\n      children,\n      mix,\n      areOtherOverlaysOpen,\n      isStatic\n    } = this.props;\n    const isVisible = this.getIsVisible();\n    return this.renderInMobilePortal( /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"Overlay\",\n      ref: this.overlayRef,\n      mods: {\n        isVisible,\n        isStatic,\n        isInstant: areOtherOverlaysOpen\n      },\n      mix: { ...mix,\n        mods: { ...mix.mods,\n          isVisible\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, children && children));\n  }\n\n}, _class.propTypes = {\n  mix: MixType,\n  id: PropTypes.string.isRequired,\n  onVisible: PropTypes.func,\n  onHide: PropTypes.func,\n  activeOverlay: PropTypes.string.isRequired,\n  areOtherOverlaysOpen: PropTypes.bool.isRequired,\n  isStatic: PropTypes.bool,\n  isRenderInPortal: PropTypes.bool,\n  children: ChildrenType,\n  device: DeviceType.isRequired\n}, _class.defaultProps = {\n  mix: {},\n  children: [],\n  onVisible: function () {},\n  isStatic: false,\n  onHide: function () {},\n  isRenderInPortal: true\n}, _temp), \"Component/Overlay/Component\");\nexport default Overlay;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/Overlay/Overlay.component.js"],"names":["PropTypes","createRef","PureComponent","createPortal","ChildrenType","MixType","DeviceType","toggleScroll","overlayRef","componentDidUpdate","prevProps","prevWasVisible","getIsVisible","isVisible","onVisible","onHide","isStatic","device","props","isMobile","freezeScroll","current","focus","unfreezeScroll","id","activeOverlay","YoffsetWhenScrollDisabled","window","pageYOffset","document","body","scrollTop","style","marginTop","scrollTo","renderInMobilePortal","content","isRenderInPortal","render","children","mix","areOtherOverlaysOpen","isInstant","mods","propTypes","string","isRequired","func","bool","defaultProps","Overlay"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { ChildrenType, MixType } from 'Type/Common';\nimport { DeviceType } from 'Type/Device';\nimport { toggleScroll } from 'Util/Browser';\n\nimport './Overlay.style';\n\n/** @namespace Component/Overlay/Component */\nexport class Overlay extends PureComponent {\n    static propTypes = {\n        mix: MixType,\n        id: PropTypes.string.isRequired,\n        onVisible: PropTypes.func,\n        onHide: PropTypes.func,\n        activeOverlay: PropTypes.string.isRequired,\n        areOtherOverlaysOpen: PropTypes.bool.isRequired,\n        isStatic: PropTypes.bool,\n        isRenderInPortal: PropTypes.bool,\n        children: ChildrenType,\n        device: DeviceType.isRequired\n    };\n\n    static defaultProps = {\n        mix: {},\n        children: [],\n        onVisible: () => {},\n        isStatic: false,\n        onHide: () => {},\n        isRenderInPortal: true\n    };\n\n    overlayRef = createRef();\n\n    componentDidUpdate(prevProps) {\n        const prevWasVisible = this.getIsVisible(prevProps);\n        const isVisible = this.getIsVisible();\n        if (isVisible && !prevWasVisible) {\n            this.onVisible();\n        }\n        if (!isVisible && prevWasVisible) {\n            this.onHide();\n        }\n    }\n\n    onVisible() {\n        const { onVisible, isStatic, device } = this.props;\n        if (isStatic) {\n            return;\n        }\n        if (device.isMobile) {\n            this.freezeScroll();\n        }\n        this.overlayRef.current.focus();\n        onVisible();\n    }\n\n    onHide() {\n        const { onHide, isStatic, device } = this.props;\n        if (isStatic) {\n            return;\n        }\n        if (device.isMobile) {\n            this.unfreezeScroll();\n        }\n        onHide();\n    }\n\n    getIsVisible(props = this.props) {\n        const { id, activeOverlay, isStatic } = props;\n        return isStatic || id === activeOverlay;\n    }\n\n    freezeScroll() {\n        this.YoffsetWhenScrollDisabled = window.pageYOffset || document.body.scrollTop;\n        toggleScroll(false);\n        document.body.style.marginTop = `${-this.YoffsetWhenScrollDisabled}px`;\n    }\n\n    unfreezeScroll() {\n        toggleScroll(true);\n        document.body.style.marginTop = 0;\n        window.scrollTo(0, this.YoffsetWhenScrollDisabled);\n    }\n\n    renderInMobilePortal(content) {\n        const { isStatic, isRenderInPortal, device } = this.props;\n\n        if (!isStatic && device.isMobile && isRenderInPortal) {\n            return createPortal(content, document.body);\n        }\n\n        return content;\n    }\n\n    render() {\n        const {\n            children,\n            mix,\n            areOtherOverlaysOpen,\n            isStatic\n        } = this.props;\n\n        const isVisible = this.getIsVisible();\n\n        return this.renderInMobilePortal(\n            <div\n              block=\"Overlay\"\n              ref={ this.overlayRef }\n              mods={ { isVisible, isStatic, isInstant: areOtherOverlaysOpen } }\n              mix={ { ...mix, mods: { ...mix.mods, isVisible } } }\n            >\n                { children && children }\n            </div>\n        );\n    }\n}\n\nexport default Overlay;\n"]},"metadata":{},"sourceType":"module"}