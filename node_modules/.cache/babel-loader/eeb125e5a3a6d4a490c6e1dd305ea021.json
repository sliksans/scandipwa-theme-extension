{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { Field } from \"/home/arturs/scandiweb/extension/src/util/Query\";\n/**\n * MyAccount Mutations\n * @class MyAccount\n * #namespace Query/MyAccount\n */\n\nexport const MyAccountQuery = Mosaic.middleware(class MyAccountQuery_ extends Mosaic.Extensible() {\n  /**\n   * Get ResetPassword mutation\n   * @param {{token: String, password: String, password_confirmation: String}} options A object containing different aspects of query, each item can be omitted\n   * @return {Field}\n   * @memberof MyAccount\n   */\n  getResetPasswordMutation(options) {\n    const {\n      token,\n      password,\n      password_confirmation\n    } = options;\n    return new Field('s_resetPassword').addArgument('token', 'String!', token).addArgument('password', 'String!', password).addArgument('password_confirmation', 'String!', password_confirmation).addField('status');\n  }\n  /**\n   * Get SignIn mutation\n   * @param {{email: String, password: String}} options A object containing different aspects of query, each item can be omitted\n   * @return {Field}\n   * @memberof MyAccount\n   */\n\n\n  getSignInMutation(options) {\n    const {\n      email,\n      password\n    } = options;\n    return new Field('generateCustomerToken').addArgument('email', 'String!', email).addArgument('password', 'String!', password).addField('token');\n  }\n\n  getUpdateInformationMutation(options) {\n    return new Field('updateCustomer').addArgument('input', 'CustomerInput!', options).addField(this._getCustomerField());\n  }\n\n  getChangeCustomerPasswordMutation(options) {\n    const {\n      currentPassword,\n      newPassword\n    } = options;\n    return new Field('changeCustomerPassword').addArgument('currentPassword', 'String!', currentPassword).addArgument('newPassword', 'String!', newPassword).addField('id').addField('email');\n  }\n\n  getCreateAddressMutation(options) {\n    return new Field('createCustomerAddress').addArgument('input', 'CustomerAddressInput!', options).addFieldList(this._getAddressFields());\n  }\n\n  getDeleteAddressMutation(id) {\n    return new Field('deleteCustomerAddress').addArgument('id', 'Int!', id);\n  }\n\n  getUpdateAddressMutation(id, options) {\n    return new Field('updateCustomerAddress').addArgument('id', 'Int!', id).addArgument('input', 'CustomerAddressInput!', options).addFieldList(this._getAddressFields());\n  }\n\n  getCreateAccountMutation(options) {\n    const {\n      customer,\n      password\n    } = options;\n    return new Field('createCustomer').addArgument('input', 'CustomerInput!', { ...customer,\n      password\n    }).addField(this._getCustomerField());\n  }\n\n  getConfirmAccountMutation(options) {\n    const {\n      key,\n      email,\n      password\n    } = options;\n    return new Field('confirmCustomerEmail').addArgument('key', 'String!', key).addArgument('email', 'String!', email).addArgument('password', 'String!', password).addFieldList(this._getConfirmAccountFields());\n  }\n\n  getCustomerQuery() {\n    return this._getCustomerField();\n  }\n\n  _getConfirmAccountFields() {\n    return ['status', 'token', this._getCustomerField()];\n  }\n\n  _getCustomerField() {\n    return new Field('customer').addFieldList(this._getCustomerFields());\n  }\n\n  _getCustomerFields() {\n    return ['created_at', 'confirmation_required', 'group_id', 'prefix', 'firstname', 'middlename', 'lastname', 'suffix', 'email', 'default_billing', 'default_shipping', 'dob', 'taxvat', 'id', 'is_subscribed', this._getAddressesField()];\n  }\n\n  _getAddressesField() {\n    return new Field('addresses').addFieldList(this._getAddressFields());\n  }\n\n  _getRegionField() {\n    return new Field('region').addFieldList(this._getRegionFields());\n  }\n\n  _getRegionFields() {\n    return ['region_code', 'region', 'region_id'];\n  }\n\n  _getAddressFields() {\n    return ['id', 'customer_id', 'country_id', 'street', 'telephone', 'postcode', 'city', 'firstname', 'lastname', 'middlename', 'prefix', 'suffix', 'default_shipping', 'default_billing', 'vat_id', this._getRegionField()];\n  }\n  /**\n   * Get ForgotPassword mutation\n   * @param {{email: String}} options\n   * @returns {Field}\n   * @memberof MyAccount\n   */\n\n\n  getForgotPasswordMutation(options) {\n    const {\n      email\n    } = options;\n    return new Field('forgotPassword').addArgument('email', 'String!', email).addField('status');\n  }\n\n}, \"Query/MyAccount\");\nexport default new MyAccountQuery();","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/query/MyAccount.query.js"],"names":["Field","getResetPasswordMutation","options","token","password","password_confirmation","addArgument","addField","getSignInMutation","email","getUpdateInformationMutation","_getCustomerField","getChangeCustomerPasswordMutation","currentPassword","newPassword","getCreateAddressMutation","addFieldList","_getAddressFields","getDeleteAddressMutation","id","getUpdateAddressMutation","getCreateAccountMutation","customer","getConfirmAccountMutation","key","_getConfirmAccountFields","getCustomerQuery","_getCustomerFields","_getAddressesField","_getRegionField","_getRegionFields","getForgotPasswordMutation","MyAccountQuery"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,KAAT;AAEA;AACA;AACA;AACA;AACA;;AACA,kGAA4B;AACxB;AACJ;AACA;AACA;AACA;AACA;AACIC,EAAAA,wBAAwB,CAACC,OAAD,EAAU;AAC9B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6CH,OAAnD;AAEA,WAAO,IAAIF,KAAJ,CAAU,iBAAV,EACFM,WADE,CACU,OADV,EACmB,SADnB,EAC8BH,KAD9B,EAEFG,WAFE,CAEU,UAFV,EAEsB,SAFtB,EAEiCF,QAFjC,EAGFE,WAHE,CAGU,uBAHV,EAGmC,SAHnC,EAG8CD,qBAH9C,EAIFE,QAJE,CAIO,QAJP,CAAP;AAKH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,iBAAiB,CAACN,OAAD,EAAU;AACvB,UAAM;AAAEO,MAAAA,KAAF;AAASL,MAAAA;AAAT,QAAsBF,OAA5B;AAEA,WAAO,IAAIF,KAAJ,CAAU,uBAAV,EACFM,WADE,CACU,OADV,EACmB,SADnB,EAC8BG,KAD9B,EAEFH,WAFE,CAEU,UAFV,EAEsB,SAFtB,EAEiCF,QAFjC,EAGFG,QAHE,CAGO,OAHP,CAAP;AAIH;;AAEDG,EAAAA,4BAA4B,CAACR,OAAD,EAAU;AAClC,WAAO,IAAIF,KAAJ,CAAU,gBAAV,EACFM,WADE,CACU,OADV,EACmB,gBADnB,EACqCJ,OADrC,EAEFK,QAFE,CAEO,KAAKI,iBAAL,EAFP,CAAP;AAGH;;AAEDC,EAAAA,iCAAiC,CAACV,OAAD,EAAU;AACvC,UAAM;AAAEW,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,QAAmCZ,OAAzC;AAEA,WAAO,IAAIF,KAAJ,CAAU,wBAAV,EACFM,WADE,CACU,iBADV,EAC6B,SAD7B,EACwCO,eADxC,EAEFP,WAFE,CAEU,aAFV,EAEyB,SAFzB,EAEoCQ,WAFpC,EAGFP,QAHE,CAGO,IAHP,EAIFA,QAJE,CAIO,OAJP,CAAP;AAKH;;AAEDQ,EAAAA,wBAAwB,CAACb,OAAD,EAAU;AAC9B,WAAO,IAAIF,KAAJ,CAAU,uBAAV,EACFM,WADE,CACU,OADV,EACmB,uBADnB,EAC4CJ,OAD5C,EAEFc,YAFE,CAEW,KAAKC,iBAAL,EAFX,CAAP;AAGH;;AAEDC,EAAAA,wBAAwB,CAACC,EAAD,EAAK;AACzB,WAAO,IAAInB,KAAJ,CAAU,uBAAV,EACFM,WADE,CACU,IADV,EACgB,MADhB,EACwBa,EADxB,CAAP;AAEH;;AAEDC,EAAAA,wBAAwB,CAACD,EAAD,EAAKjB,OAAL,EAAc;AAClC,WAAO,IAAIF,KAAJ,CAAU,uBAAV,EACFM,WADE,CACU,IADV,EACgB,MADhB,EACwBa,EADxB,EAEFb,WAFE,CAEU,OAFV,EAEmB,uBAFnB,EAE4CJ,OAF5C,EAGFc,YAHE,CAGW,KAAKC,iBAAL,EAHX,CAAP;AAIH;;AAEDI,EAAAA,wBAAwB,CAACnB,OAAD,EAAU;AAC9B,UAAM;AAAEoB,MAAAA,QAAF;AAAYlB,MAAAA;AAAZ,QAAyBF,OAA/B;AAEA,WAAO,IAAIF,KAAJ,CAAU,gBAAV,EACFM,WADE,CACU,OADV,EACmB,gBADnB,EACqC,EAAE,GAAGgB,QAAL;AAAelB,MAAAA;AAAf,KADrC,EAEFG,QAFE,CAEO,KAAKI,iBAAL,EAFP,CAAP;AAGH;;AAEDY,EAAAA,yBAAyB,CAACrB,OAAD,EAAU;AAC/B,UAAM;AAAEsB,MAAAA,GAAF;AAAOf,MAAAA,KAAP;AAAcL,MAAAA;AAAd,QAA2BF,OAAjC;AAEA,WAAO,IAAIF,KAAJ,CAAU,sBAAV,EACFM,WADE,CACU,KADV,EACiB,SADjB,EAC4BkB,GAD5B,EAEFlB,WAFE,CAEU,OAFV,EAEmB,SAFnB,EAE8BG,KAF9B,EAGFH,WAHE,CAGU,UAHV,EAGsB,SAHtB,EAGiCF,QAHjC,EAIFY,YAJE,CAIW,KAAKS,wBAAL,EAJX,CAAP;AAKH;;AAEDC,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKf,iBAAL,EAAP;AACH;;AAEDc,EAAAA,wBAAwB,GAAG;AACvB,WAAO,CACH,QADG,EAEH,OAFG,EAGH,KAAKd,iBAAL,EAHG,CAAP;AAKH;;AAEDA,EAAAA,iBAAiB,GAAG;AAChB,WAAO,IAAIX,KAAJ,CAAU,UAAV,EACFgB,YADE,CACW,KAAKW,kBAAL,EADX,CAAP;AAEH;;AAEDA,EAAAA,kBAAkB,GAAG;AACjB,WAAO,CACH,YADG,EAEH,uBAFG,EAGH,UAHG,EAIH,QAJG,EAKH,WALG,EAMH,YANG,EAOH,UAPG,EAQH,QARG,EASH,OATG,EAUH,iBAVG,EAWH,kBAXG,EAYH,KAZG,EAaH,QAbG,EAcH,IAdG,EAeH,eAfG,EAgBH,KAAKC,kBAAL,EAhBG,CAAP;AAkBH;;AAEDA,EAAAA,kBAAkB,GAAG;AACjB,WAAO,IAAI5B,KAAJ,CAAU,WAAV,EACFgB,YADE,CACW,KAAKC,iBAAL,EADX,CAAP;AAEH;;AAEDY,EAAAA,eAAe,GAAG;AACd,WAAO,IAAI7B,KAAJ,CAAU,QAAV,EACFgB,YADE,CACW,KAAKc,gBAAL,EADX,CAAP;AAEH;;AAEDA,EAAAA,gBAAgB,GAAG;AACf,WAAO,CACH,aADG,EAEH,QAFG,EAGH,WAHG,CAAP;AAKH;;AAEDb,EAAAA,iBAAiB,GAAG;AAChB,WAAO,CACH,IADG,EAEH,aAFG,EAGH,YAHG,EAIH,QAJG,EAKH,WALG,EAMH,UANG,EAOH,MAPG,EAQH,WARG,EASH,UATG,EAUH,YAVG,EAWH,QAXG,EAYH,QAZG,EAaH,kBAbG,EAcH,iBAdG,EAeH,QAfG,EAgBH,KAAKY,eAAL,EAhBG,CAAP;AAkBH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,yBAAyB,CAAC7B,OAAD,EAAU;AAC/B,UAAM;AAAEO,MAAAA;AAAF,QAAYP,OAAlB;AAEA,WAAO,IAAIF,KAAJ,CAAU,gBAAV,EACFM,WADE,CACU,OADV,EACmB,SADnB,EAC8BG,KAD9B,EAEFF,QAFE,CAEO,QAFP,CAAP;AAGH;;AA7KuB,CAA5B;AAgLA,eAAe,IAAIyB,cAAJ,EAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { Field } from 'Util/Query';\n\n/**\n * MyAccount Mutations\n * @class MyAccount\n * @namespace Query/MyAccount\n */\nexport class MyAccountQuery {\n    /**\n     * Get ResetPassword mutation\n     * @param {{token: String, password: String, password_confirmation: String}} options A object containing different aspects of query, each item can be omitted\n     * @return {Field}\n     * @memberof MyAccount\n     */\n    getResetPasswordMutation(options) {\n        const { token, password, password_confirmation } = options;\n\n        return new Field('s_resetPassword')\n            .addArgument('token', 'String!', token)\n            .addArgument('password', 'String!', password)\n            .addArgument('password_confirmation', 'String!', password_confirmation)\n            .addField('status');\n    }\n\n    /**\n     * Get SignIn mutation\n     * @param {{email: String, password: String}} options A object containing different aspects of query, each item can be omitted\n     * @return {Field}\n     * @memberof MyAccount\n     */\n    getSignInMutation(options) {\n        const { email, password } = options;\n\n        return new Field('generateCustomerToken')\n            .addArgument('email', 'String!', email)\n            .addArgument('password', 'String!', password)\n            .addField('token');\n    }\n\n    getUpdateInformationMutation(options) {\n        return new Field('updateCustomer')\n            .addArgument('input', 'CustomerInput!', options)\n            .addField(this._getCustomerField());\n    }\n\n    getChangeCustomerPasswordMutation(options) {\n        const { currentPassword, newPassword } = options;\n\n        return new Field('changeCustomerPassword')\n            .addArgument('currentPassword', 'String!', currentPassword)\n            .addArgument('newPassword', 'String!', newPassword)\n            .addField('id')\n            .addField('email');\n    }\n\n    getCreateAddressMutation(options) {\n        return new Field('createCustomerAddress')\n            .addArgument('input', 'CustomerAddressInput!', options)\n            .addFieldList(this._getAddressFields());\n    }\n\n    getDeleteAddressMutation(id) {\n        return new Field('deleteCustomerAddress')\n            .addArgument('id', 'Int!', id);\n    }\n\n    getUpdateAddressMutation(id, options) {\n        return new Field('updateCustomerAddress')\n            .addArgument('id', 'Int!', id)\n            .addArgument('input', 'CustomerAddressInput!', options)\n            .addFieldList(this._getAddressFields());\n    }\n\n    getCreateAccountMutation(options) {\n        const { customer, password } = options;\n\n        return new Field('createCustomer')\n            .addArgument('input', 'CustomerInput!', { ...customer, password })\n            .addField(this._getCustomerField());\n    }\n\n    getConfirmAccountMutation(options) {\n        const { key, email, password } = options;\n\n        return new Field('confirmCustomerEmail')\n            .addArgument('key', 'String!', key)\n            .addArgument('email', 'String!', email)\n            .addArgument('password', 'String!', password)\n            .addFieldList(this._getConfirmAccountFields());\n    }\n\n    getCustomerQuery() {\n        return this._getCustomerField();\n    }\n\n    _getConfirmAccountFields() {\n        return [\n            'status',\n            'token',\n            this._getCustomerField()\n        ];\n    }\n\n    _getCustomerField() {\n        return new Field('customer')\n            .addFieldList(this._getCustomerFields());\n    }\n\n    _getCustomerFields() {\n        return [\n            'created_at',\n            'confirmation_required',\n            'group_id',\n            'prefix',\n            'firstname',\n            'middlename',\n            'lastname',\n            'suffix',\n            'email',\n            'default_billing',\n            'default_shipping',\n            'dob',\n            'taxvat',\n            'id',\n            'is_subscribed',\n            this._getAddressesField()\n        ];\n    }\n\n    _getAddressesField() {\n        return new Field('addresses')\n            .addFieldList(this._getAddressFields());\n    }\n\n    _getRegionField() {\n        return new Field('region')\n            .addFieldList(this._getRegionFields());\n    }\n\n    _getRegionFields() {\n        return [\n            'region_code',\n            'region',\n            'region_id'\n        ];\n    }\n\n    _getAddressFields() {\n        return [\n            'id',\n            'customer_id',\n            'country_id',\n            'street',\n            'telephone',\n            'postcode',\n            'city',\n            'firstname',\n            'lastname',\n            'middlename',\n            'prefix',\n            'suffix',\n            'default_shipping',\n            'default_billing',\n            'vat_id',\n            this._getRegionField()\n        ];\n    }\n\n    /**\n     * Get ForgotPassword mutation\n     * @param {{email: String}} options\n     * @returns {Field}\n     * @memberof MyAccount\n     */\n    getForgotPasswordMutation(options) {\n        const { email } = options;\n\n        return new Field('forgotPassword')\n            .addArgument('email', 'String!', email)\n            .addField('status');\n    }\n}\n\nexport default new MyAccountQuery();\n"]},"metadata":{},"sourceType":"module"}