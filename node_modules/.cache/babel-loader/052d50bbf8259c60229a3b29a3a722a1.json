{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { isInitiallySignedIn } from \"/home/arturs/scandiweb/scandipwa/src/util/Auth\";\nimport { UPDATE_CUSTOMER_DETAILS, UPDATE_CUSTOMER_IS_LOADING, UPDATE_CUSTOMER_PASSWORD_FORGOT_STATUS, UPDATE_CUSTOMER_PASSWORD_RESET_STATUS, UPDATE_CUSTOMER_SIGN_IN_STATUS } from \"./MyAccount.action\";\n/** #namespace Store/MyAccount/Reducer/getInitialState */\n\nexport const getInitialState = Mosaic.middleware(function () {\n  return {\n    isSignedIn: isInitiallySignedIn(),\n    passwordResetStatus: false,\n    isPasswordForgotSend: false,\n    isLoading: false,\n    customer: {},\n    message: ''\n  };\n}, \"Store/MyAccount/Reducer/getInitialState\");\n/** #namespace Store/MyAccount/Reducer */\n\nexport const MyAccountReducer = Mosaic.middleware(_c = function (state = getInitialState(), action) {\n  const {\n    status,\n    customer,\n    message\n  } = action;\n\n  switch (action.type) {\n    case UPDATE_CUSTOMER_SIGN_IN_STATUS:\n      return { ...state,\n        isSignedIn: status\n      };\n\n    case UPDATE_CUSTOMER_PASSWORD_RESET_STATUS:\n      return { ...state,\n        passwordResetStatus: status,\n        passwordResetMessage: message\n      };\n\n    case UPDATE_CUSTOMER_PASSWORD_FORGOT_STATUS:\n      return { ...state,\n        isPasswordForgotSend: !state.isPasswordForgotSend\n      };\n\n    case UPDATE_CUSTOMER_DETAILS:\n      return { ...state,\n        customer\n      };\n\n    case UPDATE_CUSTOMER_IS_LOADING:\n      const {\n        isLoading\n      } = action;\n      return { ...state,\n        isLoading\n      };\n\n    default:\n      return state;\n  }\n}, \"Store/MyAccount/Reducer\");\n_c2 = MyAccountReducer;\nexport default MyAccountReducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyAccountReducer$\");\n$RefreshReg$(_c2, \"MyAccountReducer\");","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/store/MyAccount/MyAccount.reducer.js"],"names":["isInitiallySignedIn","UPDATE_CUSTOMER_DETAILS","UPDATE_CUSTOMER_IS_LOADING","UPDATE_CUSTOMER_PASSWORD_FORGOT_STATUS","UPDATE_CUSTOMER_PASSWORD_RESET_STATUS","UPDATE_CUSTOMER_SIGN_IN_STATUS","getInitialState","isSignedIn","passwordResetStatus","isPasswordForgotSend","isLoading","customer","message","MyAccountReducer","state","action","status","type","passwordResetMessage"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,mBAAT;AAEA,SACIC,uBADJ,EAEIC,0BAFJ,EAGIC,sCAHJ,EAIIC,qCAJJ,EAKIC,8BALJ;AAQA;;AACA,OAAO,MAAMC,eAAe,qBAAG;AAAA,SAAO;AAClCC,IAAAA,UAAU,EAAEP,mBAAmB,EADG;AAElCQ,IAAAA,mBAAmB,EAAE,KAFa;AAGlCC,IAAAA,oBAAoB,EAAE,KAHY;AAIlCC,IAAAA,SAAS,EAAE,KAJuB;AAKlCC,IAAAA,QAAQ,EAAE,EALwB;AAMlCC,IAAAA,OAAO,EAAE;AANyB,GAAP;AAAA,CAAH,4CAArB;AASP;;AACA,OAAO,MAAMC,gBAAgB,0BAAG,UAC5BC,KAAK,GAAGR,eAAe,EADK,EAE5BS,MAF4B,EAG3B;AACD,QAAM;AAAEC,IAAAA,MAAF;AAAUL,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAAgCG,MAAtC;;AAEA,UAAQA,MAAM,CAACE,IAAf;AACA,SAAKZ,8BAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHP,QAAAA,UAAU,EAAES;AAFT,OAAP;;AAKJ,SAAKZ,qCAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHN,QAAAA,mBAAmB,EAAEQ,MAFlB;AAGHE,QAAAA,oBAAoB,EAAEN;AAHnB,OAAP;;AAMJ,SAAKT,sCAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHL,QAAAA,oBAAoB,EAAE,CAACK,KAAK,CAACL;AAF1B,OAAP;;AAKJ,SAAKR,uBAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHH,QAAAA;AAFG,OAAP;;AAIJ,SAAKT,0BAAL;AACI,YAAM;AAAEQ,QAAAA;AAAF,UAAgBK,MAAtB;AAEA,aAAO,EACH,GAAGD,KADA;AAEHJ,QAAAA;AAFG,OAAP;;AAKJ;AACI,aAAOI,KAAP;AAlCJ;AAoCH,CA1C4B,4BAAtB;MAAMD,gB;AA4Cb,eAAeA,gBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { isInitiallySignedIn } from 'Util/Auth';\n\nimport {\n    UPDATE_CUSTOMER_DETAILS,\n    UPDATE_CUSTOMER_IS_LOADING,\n    UPDATE_CUSTOMER_PASSWORD_FORGOT_STATUS,\n    UPDATE_CUSTOMER_PASSWORD_RESET_STATUS,\n    UPDATE_CUSTOMER_SIGN_IN_STATUS\n} from './MyAccount.action';\n\n/** @namespace Store/MyAccount/Reducer/getInitialState */\nexport const getInitialState = () => ({\n    isSignedIn: isInitiallySignedIn(),\n    passwordResetStatus: false,\n    isPasswordForgotSend: false,\n    isLoading: false,\n    customer: {},\n    message: ''\n});\n\n/** @namespace Store/MyAccount/Reducer */\nexport const MyAccountReducer = (\n    state = getInitialState(),\n    action\n) => {\n    const { status, customer, message } = action;\n\n    switch (action.type) {\n    case UPDATE_CUSTOMER_SIGN_IN_STATUS:\n        return {\n            ...state,\n            isSignedIn: status\n        };\n\n    case UPDATE_CUSTOMER_PASSWORD_RESET_STATUS:\n        return {\n            ...state,\n            passwordResetStatus: status,\n            passwordResetMessage: message\n        };\n\n    case UPDATE_CUSTOMER_PASSWORD_FORGOT_STATUS:\n        return {\n            ...state,\n            isPasswordForgotSend: !state.isPasswordForgotSend\n        };\n\n    case UPDATE_CUSTOMER_DETAILS:\n        return {\n            ...state,\n            customer\n        };\n    case UPDATE_CUSTOMER_IS_LOADING:\n        const { isLoading } = action;\n\n        return {\n            ...state,\n            isLoading\n        };\n\n    default:\n        return state;\n    }\n};\n\nexport default MyAccountReducer;\n"]},"metadata":{},"sourceType":"module"}