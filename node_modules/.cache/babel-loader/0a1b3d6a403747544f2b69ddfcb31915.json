{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { Field, prepareMutation } from \"/home/arturs/scandiweb/scandipwa/src/util/Query\";\nimport { executePost } from \"/home/arturs/scandiweb/scandipwa/src/util/Request/Request\";\n/** #namespace Util/Request/fetchMutation */\n// eslint-disable-next-line import/prefer-default-export\n\nexport const fetchMutation = Mosaic.middleware(function (rawMutations) {\n  const queries = rawMutations instanceof Field ? [rawMutations] : rawMutations;\n  return executePost(prepareMutation(queries, true));\n}, \"Util/Request/fetchMutation\");","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/util/Request/Mutation.js"],"names":["Field","prepareMutation","executePost","fetchMutation","rawMutations","queries"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,KAAT,EAAgBC,eAAhB;AACA,SAASC,WAAT;AAEA;AACA;;AACA,OAAO,MAAMC,aAAa,qBAAG,UAACC,YAAD,EAAkB;AAC3C,QAAMC,OAAO,GAAGD,YAAY,YAAYJ,KAAxB,GAAgC,CAACI,YAAD,CAAhC,GAAiDA,YAAjE;AACA,SAAOF,WAAW,CAACD,eAAe,CAACI,OAAD,EAAU,IAAV,CAAhB,CAAlB;AACH,CAHyB,+BAAnB","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { Field, prepareMutation } from 'Util/Query';\nimport { executePost } from 'Util/Request/Request';\n\n/** @namespace Util/Request/fetchMutation */\n// eslint-disable-next-line import/prefer-default-export\nexport const fetchMutation = (rawMutations) => {\n    const queries = rawMutations instanceof Field ? [rawMutations] : rawMutations;\n    return executePost(prepareMutation(queries, true));\n};\n"]},"metadata":{},"sourceType":"module"}