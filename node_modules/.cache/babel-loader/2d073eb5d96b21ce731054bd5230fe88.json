{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountCustomerPopup/MyAccountCustomerPopup.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport Loader from \"/home/arturs/scandiweb/scandipwa/src/component/Loader\";\nimport MyAccountCustomerForm from \"/home/arturs/scandiweb/scandipwa/src/component/MyAccountCustomerForm\";\nimport MyAccountPasswordForm from \"/home/arturs/scandiweb/scandipwa/src/component/MyAccountPasswordForm\";\nimport Popup from \"/home/arturs/scandiweb/scandipwa/src/component/Popup\";\nimport { customerType } from \"/home/arturs/scandiweb/scandipwa/src/type/Account\";\nimport { CHANGE_PASSWORD, CUSTOMER_POPUP_ID, EDIT_CUSTOMER } from \"./MyAccountCustomerPopup.config\";\n/** #namespace Component/MyAccountCustomerPopup/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountCustomerPopup = Mosaic.middleware((_temp = _class = class MyAccountCustomerPopup_ extends Mosaic.Extensible(PureComponent) {\n  renderChangePasswordForm() {\n    const {\n      onPasswordChange\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountPasswordForm, {\n      onPasswordChange: onPasswordChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderCustomerForm() {\n    const {\n      payload: {\n        customer\n      },\n      onCustomerSave\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountCustomerForm, {\n      customer: customer,\n      onSave: onCustomerSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderContent() {\n    const {\n      payload: {\n        action\n      }\n    } = this.props;\n\n    switch (action) {\n      case CHANGE_PASSWORD:\n        return this.renderChangePasswordForm();\n\n      case EDIT_CUSTOMER:\n        return this.renderCustomerForm();\n\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, Popup, {\n      id: CUSTOMER_POPUP_ID,\n      clickOutside: false,\n      mix: {\n        block: 'MyAccountCustomerPopup'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, Loader, {\n      isLoading: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), this.renderContent());\n  }\n\n}, _class.propTypes = {\n  onCustomerSave: PropTypes.func.isRequired,\n  onPasswordChange: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  payload: PropTypes.shape({\n    action: PropTypes.oneOf([CHANGE_PASSWORD, EDIT_CUSTOMER]),\n    customer: customerType\n  }).isRequired\n}, _temp), \"Component/MyAccountCustomerPopup/Component\");\nexport default MyAccountCustomerPopup;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountCustomerPopup/MyAccountCustomerPopup.component.js"],"names":["PropTypes","PureComponent","Loader","MyAccountCustomerForm","MyAccountPasswordForm","Popup","customerType","CHANGE_PASSWORD","CUSTOMER_POPUP_ID","EDIT_CUSTOMER","renderChangePasswordForm","onPasswordChange","props","renderCustomerForm","payload","customer","onCustomerSave","renderContent","action","render","isLoading","block","propTypes","func","isRequired","bool","shape","oneOf","MyAccountCustomerPopup"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,MAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,KAAP;AACA,SAASC,YAAT;AAEA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,aAA7C;AAEA;;;;AACA,kIAA4CR,aAA5C,EAA0D;AActDS,EAAAA,wBAAwB,GAAG;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAuB,KAAKC,KAAlC;AAEA,yCACK,qBADL;AAEM,MAAA,gBAAgB,EAAGD,gBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH;;AAEDE,EAAAA,kBAAkB,GAAG;AACjB,UAAM;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF,OAAX;AAAyBC,MAAAA;AAAzB,QAA4C,KAAKJ,KAAvD;AAEA,yCACK,qBADL;AAEM,MAAA,QAAQ,EAAGG,QAFjB;AAGM,MAAA,MAAM,EAAGC,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,UAAM;AAAEH,MAAAA,OAAO,EAAE;AAAEI,QAAAA;AAAF;AAAX,QAA0B,KAAKN,KAArC;;AAEA,YAAQM,MAAR;AACA,WAAKX,eAAL;AACI,eAAO,KAAKG,wBAAL,EAAP;;AACJ,WAAKD,aAAL;AACI,eAAO,KAAKI,kBAAL,EAAP;;AACJ;AACI,eAAO,IAAP;AANJ;AAQH;;AAEDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKR,KAA3B;AAEA,yCACK,KADL;AAEM,MAAA,EAAE,EAAGJ,iBAFX;AAGM,MAAA,YAAY,EAAG,KAHrB;AAIM,MAAA,GAAG,EAAG;AAAEa,QAAAA,KAAK,EAAE;AAAT,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAMS,MANT;AAMgB,MAAA,SAAS,EAAGD,SAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOU,KAAKH,aAAL,EAPV;AAUH;;AA7DqD,CAA1D,SACWK,SADX,GACuB;AACfN,EAAAA,cAAc,EAAEhB,SAAS,CAACuB,IAAV,CAAeC,UADhB;AAEfb,EAAAA,gBAAgB,EAAEX,SAAS,CAACuB,IAAV,CAAeC,UAFlB;AAGfJ,EAAAA,SAAS,EAAEpB,SAAS,CAACyB,IAAV,CAAeD,UAHX;AAIfV,EAAAA,OAAO,EAAEd,SAAS,CAAC0B,KAAV,CAAgB;AACrBR,IAAAA,MAAM,EAAElB,SAAS,CAAC2B,KAAV,CAAgB,CACpBpB,eADoB,EAEpBE,aAFoB,CAAhB,CADa;AAKrBM,IAAAA,QAAQ,EAAET;AALW,GAAhB,EAMNkB;AAVY,CADvB;AAgEA,eAAeI,sBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Loader from 'Component/Loader';\nimport MyAccountCustomerForm from 'Component/MyAccountCustomerForm';\nimport MyAccountPasswordForm from 'Component/MyAccountPasswordForm';\nimport Popup from 'Component/Popup';\nimport { customerType } from 'Type/Account';\n\nimport { CHANGE_PASSWORD, CUSTOMER_POPUP_ID, EDIT_CUSTOMER } from './MyAccountCustomerPopup.config';\n\n/** @namespace Component/MyAccountCustomerPopup/Component */\nexport class MyAccountCustomerPopup extends PureComponent {\n    static propTypes = {\n        onCustomerSave: PropTypes.func.isRequired,\n        onPasswordChange: PropTypes.func.isRequired,\n        isLoading: PropTypes.bool.isRequired,\n        payload: PropTypes.shape({\n            action: PropTypes.oneOf([\n                CHANGE_PASSWORD,\n                EDIT_CUSTOMER\n            ]),\n            customer: customerType\n        }).isRequired\n    };\n\n    renderChangePasswordForm() {\n        const { onPasswordChange } = this.props;\n\n        return (\n            <MyAccountPasswordForm\n              onPasswordChange={ onPasswordChange }\n            />\n        );\n    }\n\n    renderCustomerForm() {\n        const { payload: { customer }, onCustomerSave } = this.props;\n\n        return (\n            <MyAccountCustomerForm\n              customer={ customer }\n              onSave={ onCustomerSave }\n            />\n        );\n    }\n\n    renderContent() {\n        const { payload: { action } } = this.props;\n\n        switch (action) {\n        case CHANGE_PASSWORD:\n            return this.renderChangePasswordForm();\n        case EDIT_CUSTOMER:\n            return this.renderCustomerForm();\n        default:\n            return null;\n        }\n    }\n\n    render() {\n        const { isLoading } = this.props;\n\n        return (\n            <Popup\n              id={ CUSTOMER_POPUP_ID }\n              clickOutside={ false }\n              mix={ { block: 'MyAccountCustomerPopup' } }\n            >\n                <Loader isLoading={ isLoading } />\n                { this.renderContent() }\n            </Popup>\n        );\n    }\n}\n\nexport default MyAccountCustomerPopup;\n"]},"metadata":{},"sourceType":"module"}