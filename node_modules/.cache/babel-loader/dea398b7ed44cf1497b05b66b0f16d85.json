{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/OfflineNotice/OfflineNotice.component.js\";\n\n/* eslint-disable max-len */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport \"./OfflineNotice.style\";\n/** #namespace Component/OfflineNotice/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const OfflineNotice = Mosaic.middleware((_temp = _class = class OfflineNotice_ extends Mosaic.Extensible(PureComponent) {\n  renderLogo() {\n    const {\n      isBig\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"OfflineNotice\",\n      elem: \"Logo\",\n      mods: {\n        isBig\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"OfflineNotice\",\n      elem: \"Logo-Cloud\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"OfflineNotice\",\n      elem: \"Logo-Stick\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderText() {\n    const {\n      isBig\n    } = this.props;\n\n    if (isBig) {\n      return /*#__PURE__*/_checkBEM(React, \"div\", {\n        block: \"OfflineNotice\",\n        elem: \"Text\",\n        mods: {\n          isBig\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/_checkBEM(React, \"p\", {\n        block: \"OfflineNotice\",\n        elem: \"Text-Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, __('You are currently offline.')), /*#__PURE__*/_checkBEM(React, \"p\", {\n        block: \"OfflineNotice\",\n        elem: \"Text-Description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, __('We could not load the content. Check your internet connection and try again.')));\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"OfflineNotice\",\n      elem: \"Text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, __('Offline mode'));\n  }\n\n  render() {\n    const {\n      isPage,\n      isBig\n    } = this.props;\n\n    if (!isBig && isPage) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"OfflineNotice\",\n      mods: {\n        isBig\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, this.renderLogo(), this.renderText());\n  }\n\n}, _class.propTypes = {\n  isPage: PropTypes.bool.isRequired,\n  isBig: PropTypes.bool.isRequired\n}, _temp), \"Component/OfflineNotice/Component\");\nexport default OfflineNotice;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/OfflineNotice/OfflineNotice.component.js"],"names":["PropTypes","PureComponent","renderLogo","isBig","props","renderText","__","render","isPage","propTypes","bool","isRequired","OfflineNotice"],"mappings":";;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA;AAEA;;;;AACA,gHAAmCA,aAAnC,EAAiD;AAM7CC,EAAAA,UAAU,GAAG;AACT,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AAEA;AACS,MAAA,KAAK,EAAC,eADf;AAC+B,MAAA,IAAI,EAAC,MADpC;AAC2C,MAAA,IAAI,EAAG;AAAED,QAAAA;AAAF,OADlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEa,MAAA,KAAK,EAAC,eAFnB;AAEmC,MAAA,IAAI,EAAC,YAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGa,MAAA,KAAK,EAAC,eAHnB;AAGmC,MAAA,IAAI,EAAC,YAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;;AAEDE,EAAAA,UAAU,GAAG;AACT,UAAM;AAAEF,MAAAA;AAAF,QAAY,KAAKC,KAAvB;;AAEA,QAAID,KAAJ,EAAW;AACP;AACS,QAAA,KAAK,EAAC,eADf;AAC+B,QAAA,IAAI,EAAC,MADpC;AAC2C,QAAA,IAAI,EAAG;AAAEA,UAAAA;AAAF,SADlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEW,QAAA,KAAK,EAAC,eAFjB;AAEiC,QAAA,IAAI,EAAC,YAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGcG,EAAE,CAAC,4BAAD,CAHhB;AAKW,QAAA,KAAK,EAAC,eALjB;AAKiC,QAAA,IAAI,EAAC,kBALtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMcA,EAAE,CAAC,8EAAD,CANhB;AAUH;;AAED;AACS,MAAA,KAAK,EAAC,eADf;AAC+B,MAAA,IAAI,EAAC,MADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEUA,EAAE,CAAC,cAAD,CAFZ;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,MAAF;AAAUL,MAAAA;AAAV,QAAoB,KAAKC,KAA/B;;AAEA,QAAI,CAACD,KAAD,IAAUK,MAAd,EAAsB;AAClB,aAAO,IAAP;AACH;;AAED;AACS,MAAA,KAAK,EAAC,eADf;AAC+B,MAAA,IAAI,EAAG;AAAEL,QAAAA;AAAF,OADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEU,KAAKD,UAAL,EAFV,EAGU,KAAKG,UAAL,EAHV;AAMH;;AArD4C,CAAjD,SACWI,SADX,GACuB;AACfD,EAAAA,MAAM,EAAER,SAAS,CAACU,IAAV,CAAeC,UADR;AAEfR,EAAAA,KAAK,EAAEH,SAAS,CAACU,IAAV,CAAeC;AAFP,CADvB;AAwDA,eAAeC,aAAf","sourcesContent":["/* eslint-disable max-len */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport './OfflineNotice.style';\n\n/** @namespace Component/OfflineNotice/Component */\nexport class OfflineNotice extends PureComponent {\n    static propTypes = {\n        isPage: PropTypes.bool.isRequired,\n        isBig: PropTypes.bool.isRequired\n    };\n\n    renderLogo() {\n        const { isBig } = this.props;\n\n        return (\n            <div block=\"OfflineNotice\" elem=\"Logo\" mods={ { isBig } }>\n                <div block=\"OfflineNotice\" elem=\"Logo-Cloud\" />\n                <div block=\"OfflineNotice\" elem=\"Logo-Stick\" />\n            </div>\n        );\n    }\n\n    renderText() {\n        const { isBig } = this.props;\n\n        if (isBig) {\n            return (\n                <div block=\"OfflineNotice\" elem=\"Text\" mods={ { isBig } }>\n                    <p block=\"OfflineNotice\" elem=\"Text-Title\">\n                        { __('You are currently offline.') }\n                    </p>\n                    <p block=\"OfflineNotice\" elem=\"Text-Description\">\n                        { __('We could not load the content. Check your internet connection and try again.') }\n                    </p>\n                </div>\n            );\n        }\n\n        return (\n            <div block=\"OfflineNotice\" elem=\"Text\">\n                { __('Offline mode') }\n            </div>\n        );\n    }\n\n    render() {\n        const { isPage, isBig } = this.props;\n\n        if (!isBig && isPage) {\n            return null;\n        }\n\n        return (\n            <div block=\"OfflineNotice\" mods={ { isBig } }>\n                { this.renderLogo() }\n                { this.renderText() }\n            </div>\n        );\n    }\n}\n\nexport default OfflineNotice;\n"]},"metadata":{},"sourceType":"module"}