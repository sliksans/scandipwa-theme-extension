{"ast":null,"code":"/* eslint-disable no-magic-numbers */\n\n/* eslint-disable import/prefer-default-export */\n\n/* eslint-disable no-fallthrough */\n\n/* eslint-disable no-bitwise */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n *\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n *\n * @param {string} key ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n * #namespace Util/Request/hash\n */\nexport const hash = Mosaic.middleware(function (key, seed) {\n  // eslint-disable-next-line one-var, fp/no-let\n  let h1, h1b, k1, i;\n  const remainder = key.length & 3;\n  const bytes = key.length - remainder;\n  const c1 = 0xcc9e2d51;\n  const c2 = 0x1b873593;\n  h1 = seed;\n  i = 0; // eslint-disable-next-line fp/no-loops\n\n  while (i < bytes) {\n    k1 = key.charCodeAt(i) & 0xff | (key.charCodeAt(++i) & 0xff) << 8 | (key.charCodeAt(++i) & 0xff) << 16 | (key.charCodeAt(++i) & 0xff) << 24;\n    ++i;\n    k1 = (k1 & 0xffff) * c1 + (((k1 >>> 16) * c1 & 0xffff) << 16) & 0xffffffff;\n    k1 = k1 << 15 | k1 >>> 17;\n    k1 = (k1 & 0xffff) * c2 + (((k1 >>> 16) * c2 & 0xffff) << 16) & 0xffffffff;\n    h1 ^= k1;\n    h1 = h1 << 13 | h1 >>> 19;\n    h1b = (h1 & 0xffff) * 5 + (((h1 >>> 16) * 5 & 0xffff) << 16) & 0xffffffff;\n    h1 = (h1b & 0xffff) + 0x6b64 + (((h1b >>> 16) + 0xe654 & 0xffff) << 16);\n  }\n\n  k1 = 0; // eslint-disable-next-line default-case\n\n  switch (remainder) {\n    case 3:\n      k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      k1 ^= key.charCodeAt(i) & 0xff;\n      k1 = (k1 & 0xffff) * c1 + (((k1 >>> 16) * c1 & 0xffff) << 16) & 0xffffffff;\n      k1 = k1 << 15 | k1 >>> 17;\n      k1 = (k1 & 0xffff) * c2 + (((k1 >>> 16) * c2 & 0xffff) << 16) & 0xffffffff;\n      h1 ^= k1;\n  }\n\n  h1 ^= key.length;\n  h1 ^= h1 >>> 16;\n  h1 = (h1 & 0xffff) * 0x85ebca6b + (((h1 >>> 16) * 0x85ebca6b & 0xffff) << 16) & 0xffffffff;\n  h1 ^= h1 >>> 13;\n  h1 = (h1 & 0xffff) * 0xc2b2ae35 + (((h1 >>> 16) * 0xc2b2ae35 & 0xffff) << 16) & 0xffffffff;\n  h1 ^= h1 >>> 16;\n  return h1 >>> 0;\n}, \"Util/Request/hash\");","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/util/Request/Hash.js"],"names":["hash","key","seed","h1","h1b","k1","i","remainder","length","bytes","c1","c2","charCodeAt"],"mappings":"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","sourcesContent":["/* eslint-disable no-magic-numbers */\n/* eslint-disable import/prefer-default-export */\n/* eslint-disable no-fallthrough */\n/* eslint-disable no-bitwise */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n *\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n *\n * @param {string} key ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n * @namespace Util/Request/hash\n */\nexport const hash = (key, seed) => {\n    // eslint-disable-next-line one-var, fp/no-let\n    let h1,\n        h1b,\n        k1,\n        i;\n\n    const remainder = key.length & 3;\n    const bytes = key.length - remainder;\n    const c1 = 0xcc9e2d51;\n    const c2 = 0x1b873593;\n    h1 = seed;\n    i = 0;\n\n    // eslint-disable-next-line fp/no-loops\n    while (i < bytes) {\n        k1 = ((key.charCodeAt(i) & 0xff))\n            | ((key.charCodeAt(++i) & 0xff) << 8)\n            | ((key.charCodeAt(++i) & 0xff) << 16)\n            | ((key.charCodeAt(++i) & 0xff) << 24);\n\n        ++i;\n\n        k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n        h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    // eslint-disable-next-line default-case\n    switch (remainder) {\n    case 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n    case 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n    case 1: k1 ^= (key.charCodeAt(i) & 0xff);\n        k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n        h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n};\n"]},"metadata":{},"sourceType":"module"}