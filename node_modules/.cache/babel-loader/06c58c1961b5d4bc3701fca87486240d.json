{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/MyAccountMyWishlist/MyAccountMyWishlist.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { SHARE_WISHLIST_POPUP_ID } from \"/home/arturs/scandiweb/extension/src/component/ShareWishlistPopup/ShareWishlistPopup.config\";\nimport { showNotification } from \"/home/arturs/scandiweb/extension/src/store/Notification/Notification.action\";\nimport { showPopup } from \"/home/arturs/scandiweb/extension/src/store/Popup/Popup.action\";\nimport { ProductType } from \"/home/arturs/scandiweb/extension/src/type/ProductList\";\nimport { isSignedIn } from \"/home/arturs/scandiweb/extension/src/util/Auth\";\nimport MyAccountMyWishlist from \"./MyAccountMyWishlist.component\";\nexport const WishlistDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/extension/src/store/Wishlist/Wishlist.dispatcher\");\n/** #namespace Component/MyAccountMyWishlist/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    wishlistItems: state.WishlistReducer.productsInWishlist,\n    isWishlistLoading: state.WishlistReducer.isLoading,\n    isMobile: state.ConfigReducer.device.isMobile\n  };\n}, \"Component/MyAccountMyWishlist/Container/mapStateToProps\");\n/** #namespace Component/MyAccountMyWishlist/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    clearWishlist: function () {\n      return WishlistDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.clearWishlist(dispatch);\n      });\n    },\n    moveWishlistToCart: function () {\n      return WishlistDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.moveWishlistToCart(dispatch);\n      });\n    },\n    showPopup: function (payload) {\n      return dispatch(showPopup(SHARE_WISHLIST_POPUP_ID, payload));\n    },\n    showNotification: function (message) {\n      return dispatch(showNotification('success', message));\n    },\n    showError: function (message) {\n      return dispatch(showNotification('error', message));\n    },\n    removeSelectedFromWishlist: function (options) {\n      return WishlistDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.removeItemsFromWishlist(dispatch, options);\n      });\n    }\n  };\n}, \"Component/MyAccountMyWishlist/Container/mapDispatchToProps\");\n/** #namespace Component/MyAccountMyWishlist/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountMyWishlistContainer = Mosaic.middleware((_temp = _class = class MyAccountMyWishlistContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      isLoading: false,\n      loadingItemsMap: {}\n    };\n\n    this.containerProps = function () {\n      const {\n        isLoading,\n        loadingItemsMap\n      } = _this.state;\n      const {\n        isWishlistLoading\n      } = _this.props;\n\n      const isWishlistEmpty = _this._getIsWishlistEmpty();\n\n      return {\n        isWishlistEmpty,\n        isLoading,\n        isActionsDisabled: isWishlistLoading || isWishlistEmpty,\n        loadingItemsMap\n      };\n    };\n\n    this.containerFunctions = function () {\n      return {\n        removeAll: _this.removeAll,\n        addAllToCart: _this.addAllToCart,\n        shareWishlist: _this.shareWishlist,\n        removeSelectedFromWishlist: _this.removeSelectedFromWishlist\n      };\n    };\n\n    this.addAllToCart = function () {\n      const {\n        moveWishlistToCart\n      } = _this.props;\n\n      if (!isSignedIn()) {\n        return null;\n      }\n\n      _this.setState({\n        isLoading: true\n      });\n\n      return moveWishlistToCart().then(\n      /** #namespace Component/MyAccountMyWishlist/Container/moveWishlistToCartThen */\n      Mosaic.middleware(function () {\n        return _this.showNotificationAndRemoveLoading('Available items moved to cart');\n      }, \"Component/MyAccountMyWishlist/Container/moveWishlistToCartThen\"),\n      /** #namespace Component/MyAccountMyWishlist/Container/moveWishlistToCartCatch */\n      Mosaic.middleware(function () {\n        return _this.showErrorAndRemoveLoading('Failed to add items to cart');\n      }, \"Component/MyAccountMyWishlist/Container/moveWishlistToCartCatch\"));\n    };\n\n    this.removeAll = function () {\n      const {\n        clearWishlist\n      } = _this.props;\n\n      if (!isSignedIn()) {\n        return null;\n      }\n\n      _this.setState({\n        isLoading: true\n      });\n\n      return clearWishlist().then(\n      /** #namespace Component/MyAccountMyWishlist/Container/clearWishlistThen */\n      Mosaic.middleware(function () {\n        return _this.showNotificationAndRemoveLoading('Wishlist cleared');\n      }, \"Component/MyAccountMyWishlist/Container/clearWishlistThen\"));\n    };\n\n    this.removeSelectedFromWishlist = function (selectedIdMap) {\n      const {\n        removeSelectedFromWishlist\n      } = _this.props;\n      const {\n        loadingItemsMap: prevLoadingItemsMap\n      } = _this.state;\n\n      if (!isSignedIn()) {\n        return null;\n      }\n\n      const loadingItemsMap = { ...prevLoadingItemsMap\n      };\n      selectedIdMap.forEach(function (id) {\n        loadingItemsMap[id] = true;\n      });\n\n      _this.setState({\n        loadingItemsMap\n      });\n\n      return removeSelectedFromWishlist(selectedIdMap);\n    };\n\n    this.shareWishlist = function () {\n      const {\n        showPopup\n      } = _this.props;\n      showPopup({\n        title: __('Share Wishlist')\n      });\n    };\n\n    this._getIsWishlistEmpty = function () {\n      const {\n        wishlistItems\n      } = _this.props;\n      return Object.entries(wishlistItems).length <= 0;\n    };\n  }\n\n  showNotificationAndRemoveLoading(message) {\n    const {\n      showNotification\n    } = this.props;\n    this.setState({\n      isLoading: false\n    });\n    showNotification(message);\n  }\n\n  showErrorAndRemoveLoading(message) {\n    const {\n      showError\n    } = this.props;\n    this.setState({\n      isLoading: false\n    });\n    showError(message);\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, MyAccountMyWishlist, Object.assign({}, this.props, this.containerProps(), this.containerFunctions(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  showPopup: PropTypes.func.isRequired,\n  showError: PropTypes.func.isRequired,\n  clearWishlist: PropTypes.func.isRequired,\n  showNotification: PropTypes.func.isRequired,\n  moveWishlistToCart: PropTypes.func.isRequired,\n  wishlistItems: PropTypes.objectOf(ProductType).isRequired,\n  isWishlistLoading: PropTypes.bool.isRequired,\n  removeSelectedFromWishlist: PropTypes.func.isRequired\n}, _temp), \"Component/MyAccountMyWishlist/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountMyWishlistContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/MyAccountMyWishlist/MyAccountMyWishlist.container.js"],"names":["PropTypes","PureComponent","connect","SHARE_WISHLIST_POPUP_ID","showNotification","showPopup","ProductType","isSignedIn","MyAccountMyWishlist","WishlistDispatcher","mapStateToProps","state","wishlistItems","WishlistReducer","productsInWishlist","isWishlistLoading","isLoading","isMobile","ConfigReducer","device","mapDispatchToProps","dispatch","clearWishlist","then","default","dispatcher","moveWishlistToCart","payload","message","showError","removeSelectedFromWishlist","options","removeItemsFromWishlist","loadingItemsMap","containerProps","props","isWishlistEmpty","_getIsWishlistEmpty","isActionsDisabled","containerFunctions","removeAll","addAllToCart","shareWishlist","setState","showNotificationAndRemoveLoading","showErrorAndRemoveLoading","selectedIdMap","prevLoadingItemsMap","forEach","id","title","__","Object","entries","length","render","propTypes","func","isRequired","objectOf","bool","MyAccountMyWishlistContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SHARE_WISHLIST_POPUP_ID } from 'Component/ShareWishlistPopup/ShareWishlistPopup.config';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { showPopup } from 'Store/Popup/Popup.action';\nimport { ProductType } from 'Type/ProductList';\nimport { isSignedIn } from 'Util/Auth';\n\nimport MyAccountMyWishlist from './MyAccountMyWishlist.component';\n\nexport const WishlistDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Wishlist/Wishlist.dispatcher'\n);\n\n/** @namespace Component/MyAccountMyWishlist/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    wishlistItems: state.WishlistReducer.productsInWishlist,\n    isWishlistLoading: state.WishlistReducer.isLoading,\n    isMobile: state.ConfigReducer.device.isMobile\n});\n\n/** @namespace Component/MyAccountMyWishlist/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    clearWishlist: () => WishlistDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.clearWishlist(dispatch)\n    ),\n    moveWishlistToCart: () => WishlistDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.moveWishlistToCart(dispatch)\n    ),\n    showPopup: (payload) => dispatch(showPopup(SHARE_WISHLIST_POPUP_ID, payload)),\n    showNotification: (message) => dispatch(showNotification('success', message)),\n    showError: (message) => dispatch(showNotification('error', message)),\n    removeSelectedFromWishlist: (options) => WishlistDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.removeItemsFromWishlist(dispatch, options)\n    )\n});\n\n/** @namespace Component/MyAccountMyWishlist/Container */\nexport class MyAccountMyWishlistContainer extends PureComponent {\n    static propTypes = {\n        showPopup: PropTypes.func.isRequired,\n        showError: PropTypes.func.isRequired,\n        clearWishlist: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired,\n        moveWishlistToCart: PropTypes.func.isRequired,\n        wishlistItems: PropTypes.objectOf(ProductType).isRequired,\n        isWishlistLoading: PropTypes.bool.isRequired,\n        removeSelectedFromWishlist: PropTypes.func.isRequired\n    };\n\n    state = {\n        isLoading: false,\n        loadingItemsMap: {}\n    };\n\n    containerProps = () => {\n        const { isLoading, loadingItemsMap } = this.state;\n        const { isWishlistLoading } = this.props;\n\n        const isWishlistEmpty = this._getIsWishlistEmpty();\n\n        return {\n            isWishlistEmpty,\n            isLoading,\n            isActionsDisabled: isWishlistLoading || isWishlistEmpty,\n            loadingItemsMap\n        };\n    };\n\n    containerFunctions = () => ({\n        removeAll: this.removeAll,\n        addAllToCart: this.addAllToCart,\n        shareWishlist: this.shareWishlist,\n        removeSelectedFromWishlist: this.removeSelectedFromWishlist\n    });\n\n    addAllToCart = () => {\n        const { moveWishlistToCart } = this.props;\n\n        if (!isSignedIn()) {\n            return null;\n        }\n\n        this.setState({ isLoading: true });\n\n        return moveWishlistToCart().then(\n            /** @namespace Component/MyAccountMyWishlist/Container/moveWishlistToCartThen */\n            () => this.showNotificationAndRemoveLoading('Available items moved to cart'),\n            /** @namespace Component/MyAccountMyWishlist/Container/moveWishlistToCartCatch */\n            () => this.showErrorAndRemoveLoading('Failed to add items to cart')\n        );\n    };\n\n    removeAll = () => {\n        const { clearWishlist } = this.props;\n\n        if (!isSignedIn()) {\n            return null;\n        }\n\n        this.setState({ isLoading: true });\n\n        return clearWishlist().then(\n            /** @namespace Component/MyAccountMyWishlist/Container/clearWishlistThen */\n            () => this.showNotificationAndRemoveLoading('Wishlist cleared')\n        );\n    };\n\n    removeSelectedFromWishlist = (selectedIdMap) => {\n        const { removeSelectedFromWishlist } = this.props;\n        const { loadingItemsMap: prevLoadingItemsMap } = this.state;\n\n        if (!isSignedIn()) {\n            return null;\n        }\n\n        const loadingItemsMap = { ...prevLoadingItemsMap };\n\n        selectedIdMap.forEach((id) => {\n            loadingItemsMap[id] = true;\n        });\n\n        this.setState({ loadingItemsMap });\n\n        return removeSelectedFromWishlist(selectedIdMap);\n    };\n\n    shareWishlist = () => {\n        const { showPopup } = this.props;\n        showPopup({ title: __('Share Wishlist') });\n    };\n\n    _getIsWishlistEmpty = () => {\n        const { wishlistItems } = this.props;\n\n        return Object.entries(wishlistItems).length <= 0;\n    };\n\n    showNotificationAndRemoveLoading(message) {\n        const { showNotification } = this.props;\n        this.setState({ isLoading: false });\n        showNotification(message);\n    }\n\n    showErrorAndRemoveLoading(message) {\n        const { showError } = this.props;\n        this.setState({ isLoading: false });\n        showError(message);\n    }\n\n    render() {\n        return (\n            <MyAccountMyWishlist\n              { ...this.props }\n              { ...this.containerProps() }\n              { ...this.containerFunctions() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountMyWishlistContainer);\n"]},"metadata":{},"sourceType":"module"}