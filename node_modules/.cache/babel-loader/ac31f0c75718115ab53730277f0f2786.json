{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CategoryFilterOverlay/CategoryFilterOverlay.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { FILTER } from \"/home/arturs/scandiweb/scandipwa/src/component/Header/Header.config\";\nimport { changeNavigationState, goToPreviousNavigationState } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.action\";\nimport { BOTTOM_NAVIGATION_TYPE, TOP_NAVIGATION_TYPE } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.reducer\";\nimport { hideActiveOverlay } from \"/home/arturs/scandiweb/scandipwa/src/store/Overlay/Overlay.action\";\nimport { HistoryType, LocationType } from \"/home/arturs/scandiweb/scandipwa/src/type/Common\";\nimport { getQueryParam, setQueryParams } from \"/home/arturs/scandiweb/scandipwa/src/util/Url\";\nimport CategoryFilterOverlay from \"./CategoryFilterOverlay.component\";\n/** #namespace Component/CategoryFilterOverlay/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    isInfoLoading: state.ProductListInfoReducer.isLoading,\n    isProductsLoading: state.ProductListReducer.isLoading,\n    totalPages: state.ProductListReducer.totalPages\n  };\n}, \"Component/CategoryFilterOverlay/Container/mapStateToProps\");\n/** #namespace Component/CategoryFilterOverlay/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    hideActiveOverlay: function () {\n      return dispatch(hideActiveOverlay());\n    },\n    goToPreviousHeaderState: function () {\n      return dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE));\n    },\n    goToPreviousNavigationState: function () {\n      return dispatch(goToPreviousNavigationState(BOTTOM_NAVIGATION_TYPE));\n    },\n    changeHeaderState: function (state) {\n      return dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state));\n    },\n    changeNavigationState: function (state) {\n      return dispatch(changeNavigationState(BOTTOM_NAVIGATION_TYPE, state));\n    }\n  };\n}, \"Component/CategoryFilterOverlay/Container/mapDispatchToProps\");\n/** #namespace Component/CategoryFilterOverlay/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CategoryFilterOverlayContainer = Mosaic.middleware((_temp = _class = class CategoryFilterOverlayContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.containerFunctions = {\n      onSeeResultsClick: this.onSeeResultsClick.bind(this),\n      toggleCustomFilter: this.toggleCustomFilter.bind(this),\n      getFilterUrl: this.getCustomFilterUrl.bind(this),\n      onVisible: this.onVisible.bind(this),\n      onHide: this.onHide.bind(this)\n    };\n\n    this.historyBackHook = function () {\n      const {\n        goToPreviousNavigationState,\n        customFiltersValues,\n        hideActiveOverlay,\n        goToPreviousHeaderState\n      } = _this.props;\n      goToPreviousNavigationState(); // close filter only if no applied filters left\n\n      if (Object.keys(customFiltersValues).length === 0) {\n        hideActiveOverlay();\n        goToPreviousHeaderState();\n      }\n    };\n\n    this.containerProps = function () {\n      return {\n        areFiltersEmpty: _this.getAreFiltersEmpty(),\n        isContentFiltered: _this.isContentFiltered()\n      };\n    };\n  }\n\n  updateFilter(filterName, filterArray) {\n    const {\n      location,\n      history\n    } = this.props;\n    setQueryParams({\n      customFilters: this.getFilterUrl(filterName, filterArray, false),\n      page: ''\n    }, location, history);\n  }\n\n  toggleCustomFilter(requestVar, value) {\n    this.updateFilter(requestVar, this._getNewFilterArray(requestVar, value));\n  }\n\n  getFilterUrl(filterName, filterArray, isFull = true) {\n    const {\n      location: {\n        pathname\n      }\n    } = this.props;\n\n    const selectedFilters = this._getNewSelectedFiltersString(filterName, filterArray);\n\n    const customFilters = isFull ? `${pathname}?customFilters=` : '';\n\n    const formattedFilters = this._formatSelectedFiltersString(selectedFilters);\n\n    return `${customFilters}${formattedFilters}`;\n  }\n\n  getCustomFilterUrl(filterKey, value) {\n    return this.getFilterUrl(filterKey, this._getNewFilterArray(filterKey, value));\n  }\n\n  _getSelectedFiltersFromUrl() {\n    const {\n      location\n    } = this.props;\n    const selectedFiltersString = (getQueryParam('customFilters', location) || '').split(';');\n    return selectedFiltersString.reduce(function (acc, filter) {\n      if (!filter) {\n        return acc;\n      }\n\n      const [key, value] = filter.split(':');\n      return { ...acc,\n        [key]: value.split(',')\n      };\n    }, {});\n  }\n\n  _getNewSelectedFiltersString(filterName, filterArray) {\n    const prevCustomFilters = this._getSelectedFiltersFromUrl();\n\n    const customFilers = { ...prevCustomFilters,\n      [filterName]: filterArray\n    };\n    return Object.entries(customFilers).reduce(function (accumulator, [filterKey, filterValue]) {\n      if (filterValue.length) {\n        const filterValues = filterValue.sort().join(',');\n        accumulator.push(`${filterKey}:${filterValues}`);\n      }\n\n      return accumulator;\n    }, []).sort().join(';');\n  }\n\n  _formatSelectedFiltersString(string) {\n    const hasTrailingSemicolon = string[string.length - 1] === ';';\n    const hasLeadingSemicolon = string[0] === ';';\n\n    if (hasLeadingSemicolon) {\n      return this._formatSelectedFiltersString(string.slice(0, -1));\n    }\n\n    if (hasTrailingSemicolon) {\n      return string.slice(1);\n    }\n\n    return string;\n  }\n\n  onSeeResultsClick() {\n    const {\n      hideActiveOverlay,\n      goToPreviousHeaderState,\n      goToPreviousNavigationState\n    } = this.props;\n    hideActiveOverlay();\n    goToPreviousHeaderState();\n    goToPreviousNavigationState();\n  }\n\n  onVisible() {\n    const {\n      hideActiveOverlay,\n      changeHeaderState,\n      changeNavigationState,\n      goToPreviousNavigationState,\n      location: {\n        pathname,\n        search\n      }\n    } = this.props;\n    changeHeaderState({\n      name: FILTER,\n      title: __('Filters'),\n      onCloseClick: function () {\n        hideActiveOverlay();\n        goToPreviousNavigationState();\n      }\n    });\n    changeNavigationState({\n      name: FILTER,\n      isHidden: true\n    });\n    window.addEventListener('popstate', this.historyBackHook);\n    history.pushState({\n      overlayOpen: true\n    }, '', pathname + search);\n  }\n\n  onHide() {\n    window.removeEventListener('popstate', this.historyBackHook);\n  }\n\n  getAreFiltersEmpty() {\n    const {\n      isInfoLoading,\n      availableFilters\n    } = this.props;\n    return !isInfoLoading && (!availableFilters || !Object.keys(availableFilters).length);\n  }\n\n  isContentFiltered() {\n    const {\n      customFilters,\n      priceMin,\n      priceMax\n    } = this.urlStringToObject();\n    return !!(customFilters || priceMin || priceMax);\n  }\n\n  urlStringToObject() {\n    const {\n      location: {\n        search\n      }\n    } = this.props;\n    return search.substr(1).split('&').reduce(function (acc, part) {\n      const [key, value] = part.split('=');\n      return { ...acc,\n        [key]: value\n      };\n    }, {});\n  }\n  /**\n   * Returns filter array with new parameters\n   *\n   * @param {String} filterKey key of option\n   * @param {String} value\n   * @returns {Object[]}\n   * @memberof CategoryShoppingOptions\n   */\n\n\n  _getNewFilterArray(filterKey, value) {\n    const {\n      customFiltersValues\n    } = this.props;\n    const newFilterArray = customFiltersValues[filterKey] !== undefined ? Array.from(customFiltersValues[filterKey]) : [];\n    const filterValueIndex = newFilterArray.indexOf(value);\n\n    if (filterKey === 'price') {\n      // for price filter, choose one\n      return [value];\n    }\n\n    if (filterValueIndex === -1) {\n      newFilterArray.push(value);\n    } else {\n      newFilterArray.splice(filterValueIndex, 1);\n    }\n\n    return newFilterArray;\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, CategoryFilterOverlay, Object.assign({}, this.props, this.containerFunctions, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  history: HistoryType.isRequired,\n  location: LocationType.isRequired,\n  customFiltersValues: PropTypes.objectOf(PropTypes.array).isRequired,\n  hideActiveOverlay: PropTypes.func.isRequired,\n  goToPreviousHeaderState: PropTypes.func.isRequired,\n  goToPreviousNavigationState: PropTypes.func.isRequired,\n  changeHeaderState: PropTypes.func.isRequired,\n  changeNavigationState: PropTypes.func.isRequired,\n  availableFilters: PropTypes.objectOf(PropTypes.shape).isRequired,\n  isInfoLoading: PropTypes.bool.isRequired\n}, _temp), \"Component/CategoryFilterOverlay/Container\");\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CategoryFilterOverlayContainer));","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CategoryFilterOverlay/CategoryFilterOverlay.container.js"],"names":["PropTypes","PureComponent","connect","withRouter","FILTER","changeNavigationState","goToPreviousNavigationState","BOTTOM_NAVIGATION_TYPE","TOP_NAVIGATION_TYPE","hideActiveOverlay","HistoryType","LocationType","getQueryParam","setQueryParams","CategoryFilterOverlay","mapStateToProps","state","isInfoLoading","ProductListInfoReducer","isLoading","isProductsLoading","ProductListReducer","totalPages","mapDispatchToProps","dispatch","goToPreviousHeaderState","changeHeaderState","containerFunctions","onSeeResultsClick","bind","toggleCustomFilter","getFilterUrl","getCustomFilterUrl","onVisible","onHide","historyBackHook","customFiltersValues","props","Object","keys","length","containerProps","areFiltersEmpty","getAreFiltersEmpty","isContentFiltered","updateFilter","filterName","filterArray","location","history","customFilters","page","requestVar","value","_getNewFilterArray","isFull","pathname","selectedFilters","_getNewSelectedFiltersString","formattedFilters","_formatSelectedFiltersString","filterKey","_getSelectedFiltersFromUrl","selectedFiltersString","split","reduce","acc","filter","key","prevCustomFilters","customFilers","entries","accumulator","filterValue","filterValues","sort","join","push","string","hasTrailingSemicolon","hasLeadingSemicolon","slice","search","name","title","__","onCloseClick","isHidden","window","addEventListener","pushState","overlayOpen","removeEventListener","availableFilters","priceMin","priceMax","urlStringToObject","substr","part","newFilterArray","undefined","Array","from","filterValueIndex","indexOf","splice","render","propTypes","isRequired","objectOf","array","func","shape","bool","CategoryFilterOverlayContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { FILTER } from 'Component/Header/Header.config';\nimport { changeNavigationState, goToPreviousNavigationState } from 'Store/Navigation/Navigation.action';\nimport { BOTTOM_NAVIGATION_TYPE, TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { hideActiveOverlay } from 'Store/Overlay/Overlay.action';\nimport { HistoryType, LocationType } from 'Type/Common';\nimport { getQueryParam, setQueryParams } from 'Util/Url';\n\nimport CategoryFilterOverlay from './CategoryFilterOverlay.component';\n\n/** @namespace Component/CategoryFilterOverlay/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    isInfoLoading: state.ProductListInfoReducer.isLoading,\n    isProductsLoading: state.ProductListReducer.isLoading,\n    totalPages: state.ProductListReducer.totalPages\n});\n\n/** @namespace Component/CategoryFilterOverlay/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    hideActiveOverlay: () => dispatch(hideActiveOverlay()),\n    goToPreviousHeaderState: () => dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE)),\n    goToPreviousNavigationState: () => dispatch(goToPreviousNavigationState(BOTTOM_NAVIGATION_TYPE)),\n    changeHeaderState: (state) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state)),\n    changeNavigationState: (state) => dispatch(changeNavigationState(BOTTOM_NAVIGATION_TYPE, state))\n});\n\n/** @namespace Component/CategoryFilterOverlay/Container */\nexport class CategoryFilterOverlayContainer extends PureComponent {\n    static propTypes = {\n        history: HistoryType.isRequired,\n        location: LocationType.isRequired,\n        customFiltersValues: PropTypes.objectOf(PropTypes.array).isRequired,\n        hideActiveOverlay: PropTypes.func.isRequired,\n        goToPreviousHeaderState: PropTypes.func.isRequired,\n        goToPreviousNavigationState: PropTypes.func.isRequired,\n        changeHeaderState: PropTypes.func.isRequired,\n        changeNavigationState: PropTypes.func.isRequired,\n        availableFilters: PropTypes.objectOf(PropTypes.shape).isRequired,\n        isInfoLoading: PropTypes.bool.isRequired\n    };\n\n    containerFunctions = {\n        onSeeResultsClick: this.onSeeResultsClick.bind(this),\n        toggleCustomFilter: this.toggleCustomFilter.bind(this),\n        getFilterUrl: this.getCustomFilterUrl.bind(this),\n        onVisible: this.onVisible.bind(this),\n        onHide: this.onHide.bind(this)\n    };\n\n    updateFilter(filterName, filterArray) {\n        const { location, history } = this.props;\n\n        setQueryParams({\n            customFilters: this.getFilterUrl(filterName, filterArray, false),\n            page: ''\n        }, location, history);\n    }\n\n    toggleCustomFilter(requestVar, value) {\n        this.updateFilter(requestVar, this._getNewFilterArray(requestVar, value));\n    }\n\n    getFilterUrl(filterName, filterArray, isFull = true) {\n        const { location: { pathname } } = this.props;\n        const selectedFilters = this._getNewSelectedFiltersString(filterName, filterArray);\n        const customFilters = isFull ? `${pathname}?customFilters=` : '';\n        const formattedFilters = this._formatSelectedFiltersString(selectedFilters);\n\n        return `${ customFilters }${ formattedFilters }`;\n    }\n\n    getCustomFilterUrl(filterKey, value) {\n        return this.getFilterUrl(filterKey, this._getNewFilterArray(filterKey, value));\n    }\n\n    _getSelectedFiltersFromUrl() {\n        const { location } = this.props;\n        const selectedFiltersString = (getQueryParam('customFilters', location) || '').split(';');\n\n        return selectedFiltersString.reduce((acc, filter) => {\n            if (!filter) {\n                return acc;\n            }\n            const [key, value] = filter.split(':');\n            return { ...acc, [key]: value.split(',') };\n        }, {});\n    }\n\n    _getNewSelectedFiltersString(filterName, filterArray) {\n        const prevCustomFilters = this._getSelectedFiltersFromUrl();\n        const customFilers = {\n            ...prevCustomFilters,\n            [filterName]: filterArray\n        };\n\n        return Object.entries(customFilers)\n            .reduce((accumulator, [filterKey, filterValue]) => {\n                if (filterValue.length) {\n                    const filterValues = filterValue.sort().join(',');\n\n                    accumulator.push(`${filterKey}:${filterValues}`);\n                }\n\n                return accumulator;\n            }, [])\n            .sort()\n            .join(';');\n    }\n\n    _formatSelectedFiltersString(string) {\n        const hasTrailingSemicolon = string[string.length - 1] === ';';\n        const hasLeadingSemicolon = string[0] === ';';\n\n        if (hasLeadingSemicolon) {\n            return this._formatSelectedFiltersString(string.slice(0, -1));\n        }\n\n        if (hasTrailingSemicolon) {\n            return string.slice(1);\n        }\n\n        return string;\n    }\n\n    onSeeResultsClick() {\n        const {\n            hideActiveOverlay,\n            goToPreviousHeaderState,\n            goToPreviousNavigationState\n        } = this.props;\n\n        hideActiveOverlay();\n        goToPreviousHeaderState();\n        goToPreviousNavigationState();\n    }\n\n    onVisible() {\n        const {\n            hideActiveOverlay,\n            changeHeaderState,\n            changeNavigationState,\n            goToPreviousNavigationState,\n            location: { pathname, search }\n        } = this.props;\n\n        changeHeaderState({\n            name: FILTER,\n            title: __('Filters'),\n            onCloseClick: () => {\n                hideActiveOverlay();\n                goToPreviousNavigationState();\n            }\n        });\n\n        changeNavigationState({\n            name: FILTER,\n            isHidden: true\n        });\n\n        window.addEventListener('popstate', this.historyBackHook);\n\n        history.pushState(\n            { overlayOpen: true },\n            '',\n            pathname + search\n        );\n    }\n\n    historyBackHook = () => {\n        const {\n            goToPreviousNavigationState,\n            customFiltersValues,\n            hideActiveOverlay,\n            goToPreviousHeaderState\n        } = this.props;\n\n        goToPreviousNavigationState();\n\n        // close filter only if no applied filters left\n        if (Object.keys(customFiltersValues).length === 0) {\n            hideActiveOverlay();\n            goToPreviousHeaderState();\n        }\n    };\n\n    onHide() {\n        window.removeEventListener('popstate', this.historyBackHook);\n    }\n\n    getAreFiltersEmpty() {\n        const { isInfoLoading, availableFilters } = this.props;\n\n        return !isInfoLoading && (\n            !availableFilters\n            || !Object.keys(availableFilters).length\n        );\n    }\n\n    containerProps = () => ({\n        areFiltersEmpty: this.getAreFiltersEmpty(),\n        isContentFiltered: this.isContentFiltered()\n    });\n\n    isContentFiltered() {\n        const { customFilters, priceMin, priceMax } = this.urlStringToObject();\n        return !!(customFilters || priceMin || priceMax);\n    }\n\n    urlStringToObject() {\n        const { location: { search } } = this.props;\n        return search.substr(1).split('&').reduce((acc, part) => {\n            const [key, value] = part.split('=');\n            return { ...acc, [key]: value };\n        }, {});\n    }\n\n    /**\n     * Returns filter array with new parameters\n     *\n     * @param {String} filterKey key of option\n     * @param {String} value\n     * @returns {Object[]}\n     * @memberof CategoryShoppingOptions\n     */\n    _getNewFilterArray(filterKey, value) {\n        const { customFiltersValues } = this.props;\n        const newFilterArray = customFiltersValues[filterKey] !== undefined\n            ? Array.from(customFiltersValues[filterKey])\n            : [];\n\n        const filterValueIndex = newFilterArray.indexOf(value);\n\n        if (filterKey === 'price') { // for price filter, choose one\n            return [value];\n        }\n\n        if (filterValueIndex === -1) {\n            newFilterArray.push(value);\n        } else {\n            newFilterArray.splice(filterValueIndex, 1);\n        }\n\n        return newFilterArray;\n    }\n\n    render() {\n        return (\n            <CategoryFilterOverlay\n              { ...this.props }\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(CategoryFilterOverlayContainer)\n);\n"]},"metadata":{},"sourceType":"module"}