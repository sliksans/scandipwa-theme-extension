{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { isSignedIn } from \"/home/arturs/scandiweb/scandipwa/src/util/Auth\";\nimport { Field } from \"/home/arturs/scandiweb/scandipwa/src/util/Query\";\n/** #namespace Query/Checkout */\n\nexport const CheckoutQuery = Mosaic.middleware(class CheckoutQuery_ extends Mosaic.Extensible() {\n  getPaymentMethodsQuery(guestCartId) {\n    const query = new Field('getPaymentMethods').addFieldList(this._getPaymentMethodFields());\n\n    this._addGuestCartId(guestCartId, query);\n\n    return query;\n  }\n\n  getSaveGuestEmailMutation(email, cart_id) {\n    const input = {\n      email,\n      cart_id\n    };\n    const mutation = new Field('setGuestEmailOnCart').addArgument('input', 'SetGuestEmailOnCartInput', input).addField(new Field('cart').addField('email'));\n    return mutation;\n  }\n\n  getEstimateShippingCosts(address, guestCartId) {\n    const mutation = new Field('estimateShippingCosts').addArgument('address', 'EstimateShippingCostsAddress!', address).addFieldList(this._getEstimatedShippingFields());\n\n    this._addGuestCartId(guestCartId, mutation);\n\n    return mutation;\n  }\n\n  getSaveAddressInformation(addressInformation, guestCartId) {\n    const mutation = new Field('saveAddressInformation').addArgument('addressInformation', 'SaveAddressInformation!', addressInformation).addFieldList(this._getSaveAddressInformationFields());\n\n    this._addGuestCartId(guestCartId, mutation);\n\n    return mutation;\n  }\n\n  getSetBillingAddressOnCart(input) {\n    return new Field('s_setBillingAddressOnCart').addArgument('input', 'S_SetBillingAddressOnCartInput!', input).addField(this._getCartField()).setAlias('billingAddress');\n  }\n\n  getSetPaymentMethodOnCartMutation(input) {\n    return new Field('s_setPaymentMethodOnCart').addArgument('input', 'S_SetPaymentMethodOnCartInput!', input).addField(this._getCartField()).setAlias('paymentMethod');\n  }\n\n  getPlaceOrderMutation(guestCartId) {\n    const mutation = new Field('s_placeOrder').setAlias('placeOrder').addField(this._getOrderField());\n\n    if (!isSignedIn()) {\n      mutation.addArgument('guestCartId', 'String', guestCartId);\n    }\n\n    return mutation;\n  }\n\n  _addGuestCartId(guestCartId, mutation) {\n    if (guestCartId && !isSignedIn()) {\n      mutation.addArgument('guestCartId', 'String!', guestCartId);\n    }\n  }\n\n  _getOrderField() {\n    return new Field('order').addFieldList(['order_id']);\n  }\n\n  _getSaveAddressInformationFields() {\n    return [this._getPaymentMethodsField(), this._getTotalsField()];\n  }\n\n  _getEstimatedShippingFields() {\n    return ['amount', 'available', 'base_amount', 'method_code', 'carrier_code', 'method_title', 'carrier_title', 'error_message', 'price_excl_tax', 'price_incl_tax'];\n  }\n\n  _getPaymentMethodsField() {\n    return new Field('payment_methods').addFieldList(this._getPaymentMethodFields());\n  }\n\n  _getPaymentMethodFields() {\n    return ['code', 'title'];\n  }\n\n  _getTotalItemFields() {\n    return ['qty', 'name', 'price', 'item_id', 'options', 'tax_amount', 'tax_percent', 'price_incl_tax', 'discount_amount', 'discount_percent'];\n  }\n\n  _getTotalItemField() {\n    return new Field('items').addFieldList(this._getTotalItemFields());\n  }\n\n  _getTotalsFields() {\n    return ['subtotal', 'tax_amount', 'base_grand_total', 'grand_total', 'discount_amount', 'shipping_amount', 'subtotal_incl_tax', 'shipping_incl_tax', 'quote_currency_code', 'shipping_tax_amount', 'subtotal_with_discount', 'shipping_discount_amount', this._getTotalItemField()];\n  }\n\n  _getTotalsField() {\n    return new Field('totals').addFieldList(this._getTotalsFields());\n  }\n\n  _getCartField() {\n    return new Field('cart').addFieldList(this._getCartFieldList());\n  }\n\n  _getCartFieldList() {\n    return ['id'];\n  }\n\n}, \"Query/Checkout\");\nexport default new CheckoutQuery();","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/query/Checkout.query.js"],"names":["isSignedIn","Field","getPaymentMethodsQuery","guestCartId","query","addFieldList","_getPaymentMethodFields","_addGuestCartId","getSaveGuestEmailMutation","email","cart_id","input","mutation","addArgument","addField","getEstimateShippingCosts","address","_getEstimatedShippingFields","getSaveAddressInformation","addressInformation","_getSaveAddressInformationFields","getSetBillingAddressOnCart","_getCartField","setAlias","getSetPaymentMethodOnCartMutation","getPlaceOrderMutation","_getOrderField","_getPaymentMethodsField","_getTotalsField","_getTotalItemFields","_getTotalItemField","_getTotalsFields","_getCartFieldList","CheckoutQuery"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { isSignedIn } from 'Util/Auth';\nimport { Field } from 'Util/Query';\n\n/** @namespace Query/Checkout */\nexport class CheckoutQuery {\n    getPaymentMethodsQuery(guestCartId) {\n        const query = new Field('getPaymentMethods')\n            .addFieldList(this._getPaymentMethodFields());\n\n        this._addGuestCartId(guestCartId, query);\n\n        return query;\n    }\n\n    getSaveGuestEmailMutation(email, cart_id) {\n        const input = { email, cart_id };\n        const mutation = new Field('setGuestEmailOnCart')\n            .addArgument('input', 'SetGuestEmailOnCartInput', input)\n            .addField(((new Field('cart')).addField('email')));\n\n        return mutation;\n    }\n\n    getEstimateShippingCosts(address, guestCartId) {\n        const mutation = new Field('estimateShippingCosts')\n            .addArgument('address', 'EstimateShippingCostsAddress!', address)\n            .addFieldList(this._getEstimatedShippingFields());\n\n        this._addGuestCartId(guestCartId, mutation);\n\n        return mutation;\n    }\n\n    getSaveAddressInformation(addressInformation, guestCartId) {\n        const mutation = new Field('saveAddressInformation')\n            .addArgument('addressInformation', 'SaveAddressInformation!', addressInformation)\n            .addFieldList(this._getSaveAddressInformationFields());\n\n        this._addGuestCartId(guestCartId, mutation);\n\n        return mutation;\n    }\n\n    getSetBillingAddressOnCart(input) {\n        return new Field('s_setBillingAddressOnCart')\n            .addArgument('input', 'S_SetBillingAddressOnCartInput!', input)\n            .addField(this._getCartField())\n            .setAlias('billingAddress');\n    }\n\n    getSetPaymentMethodOnCartMutation(input) {\n        return new Field('s_setPaymentMethodOnCart')\n            .addArgument('input', 'S_SetPaymentMethodOnCartInput!', input)\n            .addField(this._getCartField())\n            .setAlias('paymentMethod');\n    }\n\n    getPlaceOrderMutation(guestCartId) {\n        const mutation = new Field('s_placeOrder')\n            .setAlias('placeOrder')\n            .addField(this._getOrderField());\n\n        if (!isSignedIn()) {\n            mutation.addArgument('guestCartId', 'String', guestCartId);\n        }\n\n        return mutation;\n    }\n\n    _addGuestCartId(guestCartId, mutation) {\n        if (guestCartId && !isSignedIn()) {\n            mutation.addArgument('guestCartId', 'String!', guestCartId);\n        }\n    }\n\n    _getOrderField() {\n        return new Field('order')\n            .addFieldList(['order_id']);\n    }\n\n    _getSaveAddressInformationFields() {\n        return [\n            this._getPaymentMethodsField(),\n            this._getTotalsField()\n        ];\n    }\n\n    _getEstimatedShippingFields() {\n        return [\n            'amount',\n            'available',\n            'base_amount',\n            'method_code',\n            'carrier_code',\n            'method_title',\n            'carrier_title',\n            'error_message',\n            'price_excl_tax',\n            'price_incl_tax'\n        ];\n    }\n\n    _getPaymentMethodsField() {\n        return new Field('payment_methods')\n            .addFieldList(this._getPaymentMethodFields());\n    }\n\n    _getPaymentMethodFields() {\n        return ['code', 'title'];\n    }\n\n    _getTotalItemFields() {\n        return [\n            'qty',\n            'name',\n            'price',\n            'item_id',\n            'options',\n            'tax_amount',\n            'tax_percent',\n            'price_incl_tax',\n            'discount_amount',\n            'discount_percent'\n        ];\n    }\n\n    _getTotalItemField() {\n        return new Field('items')\n            .addFieldList(this._getTotalItemFields());\n    }\n\n    _getTotalsFields() {\n        return [\n            'subtotal',\n            'tax_amount',\n            'base_grand_total',\n            'grand_total',\n            'discount_amount',\n            'shipping_amount',\n            'subtotal_incl_tax',\n            'shipping_incl_tax',\n            'quote_currency_code',\n            'shipping_tax_amount',\n            'subtotal_with_discount',\n            'shipping_discount_amount',\n            this._getTotalItemField()\n        ];\n    }\n\n    _getTotalsField() {\n        return new Field('totals')\n            .addFieldList(this._getTotalsFields());\n    }\n\n    _getCartField() {\n        return new Field('cart')\n            .addFieldList(this._getCartFieldList());\n    }\n\n    _getCartFieldList() {\n        return [\n            'id'\n        ];\n    }\n}\n\nexport default new CheckoutQuery();\n"]},"metadata":{},"sourceType":"module"}