{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/GroupedProductList/GroupedProductList.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport GroupedProductsItem from \"/home/arturs/scandiweb/scandipwa/src/component/GroupedProductsItem\";\nimport { ProductType } from \"/home/arturs/scandiweb/scandipwa/src/type/ProductList\";\n/**\n * Product description\n * @class GroupedProductList\n * #namespace Component/GroupedProductList/Component\n */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const GroupedProductList = Mosaic.middleware((_temp = _class = class GroupedProductList_ extends Mosaic.Extensible(PureComponent) {\n  componentWillUnmount() {\n    const {\n      clearGroupedProductQuantity\n    } = this.props;\n    clearGroupedProductQuantity();\n  }\n\n  renderProductList(items) {\n    var _this = this;\n\n    const {\n      groupedProductQuantity,\n      setGroupedProductQuantity\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, items.map(function ({\n      product,\n      product: {\n        id\n      } = {},\n      qty\n    }) {\n      return /*#__PURE__*/_checkBEM(React, GroupedProductsItem, {\n        key: id,\n        product: product,\n        defaultQuantity: qty,\n        groupedProductQuantity: groupedProductQuantity,\n        setGroupedProductQuantity: setGroupedProductQuantity,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      });\n    }));\n  }\n\n  render() {\n    const {\n      product: {\n        items,\n        type_id\n      }\n    } = this.props;\n\n    if (type_id !== 'grouped') {\n      return null;\n    }\n\n    if (!items) {\n      return null;\n    }\n\n    return this.renderProductList(items);\n  }\n\n}, _class.propTypes = {\n  product: ProductType.isRequired,\n  groupedProductQuantity: PropTypes.objectOf(PropTypes.number).isRequired,\n  clearGroupedProductQuantity: PropTypes.func.isRequired,\n  setGroupedProductQuantity: PropTypes.func.isRequired\n}, _temp), \"Component/GroupedProductList/Component\");\nexport default GroupedProductList;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/GroupedProductList/GroupedProductList.component.js"],"names":["PropTypes","PureComponent","GroupedProductsItem","ProductType","componentWillUnmount","clearGroupedProductQuantity","props","renderProductList","items","groupedProductQuantity","setGroupedProductQuantity","map","product","id","qty","render","type_id","propTypes","isRequired","objectOf","number","func","GroupedProductList"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,mBAAP;AACA,SAASC,WAAT;AAEA;AACA;AACA;AACA;AACA;;;;AACA,0HAAwCF,aAAxC,EAAsD;AAQlDG,EAAAA,oBAAoB,GAAG;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAkC,KAAKC,KAA7C;AACAD,IAAAA,2BAA2B;AAC9B;;AAEDE,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AAAA;;AACrB,UAAM;AACFC,MAAAA,sBADE;AAEFC,MAAAA;AAFE,QAGF,KAAKJ,KAHT;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEUE,KAAK,CAACG,GAAN,CAAU,UAAC;AAAEC,MAAAA,OAAF;AAAWA,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF,UAAS,EAA7B;AAAiCC,MAAAA;AAAjC,KAAD;AAAA,2CACP,mBADO;AAEN,QAAA,GAAG,EAAGD,EAFA;AAGN,QAAA,OAAO,EAAGD,OAHJ;AAIN,QAAA,eAAe,EAAGE,GAJZ;AAKN,QAAA,sBAAsB,EAAGL,sBALnB;AAMN,QAAA,yBAAyB,EAAGC,yBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV,CAFV;AAaH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AACFH,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,KAAF;AAASQ,QAAAA;AAAT;AADP,QAEF,KAAKV,KAFT;;AAIA,QAAIU,OAAO,KAAK,SAAhB,EAA2B;AACvB,aAAO,IAAP;AACH;;AACD,QAAI,CAACR,KAAL,EAAY;AACR,aAAO,IAAP;AACH;;AAED,WAAO,KAAKD,iBAAL,CAAuBC,KAAvB,CAAP;AACH;;AA/CiD,CAAtD,SACWS,SADX,GACuB;AACfL,EAAAA,OAAO,EAAET,WAAW,CAACe,UADN;AAEfT,EAAAA,sBAAsB,EAAET,SAAS,CAACmB,QAAV,CAAmBnB,SAAS,CAACoB,MAA7B,EAAqCF,UAF9C;AAGfb,EAAAA,2BAA2B,EAAEL,SAAS,CAACqB,IAAV,CAAeH,UAH7B;AAIfR,EAAAA,yBAAyB,EAAEV,SAAS,CAACqB,IAAV,CAAeH;AAJ3B,CADvB;AAkDA,eAAeI,kBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport GroupedProductsItem from 'Component/GroupedProductsItem';\nimport { ProductType } from 'Type/ProductList';\n\n/**\n * Product description\n * @class GroupedProductList\n * @namespace Component/GroupedProductList/Component\n */\nexport class GroupedProductList extends PureComponent {\n    static propTypes = {\n        product: ProductType.isRequired,\n        groupedProductQuantity: PropTypes.objectOf(PropTypes.number).isRequired,\n        clearGroupedProductQuantity: PropTypes.func.isRequired,\n        setGroupedProductQuantity: PropTypes.func.isRequired\n    };\n\n    componentWillUnmount() {\n        const { clearGroupedProductQuantity } = this.props;\n        clearGroupedProductQuantity();\n    }\n\n    renderProductList(items) {\n        const {\n            groupedProductQuantity,\n            setGroupedProductQuantity\n        } = this.props;\n\n        return (\n            <ul>\n                { items.map(({ product, product: { id } = {}, qty }) => (\n                    <GroupedProductsItem\n                      key={ id }\n                      product={ product }\n                      defaultQuantity={ qty }\n                      groupedProductQuantity={ groupedProductQuantity }\n                      setGroupedProductQuantity={ setGroupedProductQuantity }\n                    />\n                )) }\n            </ul>\n        );\n    }\n\n    render() {\n        const {\n            product: { items, type_id }\n        } = this.props;\n\n        if (type_id !== 'grouped') {\n            return null;\n        }\n        if (!items) {\n            return null;\n        }\n\n        return this.renderProductList(items);\n    }\n}\n\nexport default GroupedProductList;\n"]},"metadata":{},"sourceType":"module"}