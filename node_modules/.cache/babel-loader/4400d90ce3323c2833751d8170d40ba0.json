{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductInformation/ProductInformation.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport ContentWrapper from \"/home/arturs/scandiweb/extension/src/component/ContentWrapper\";\nimport ExpandableContent from \"/home/arturs/scandiweb/extension/src/component/ExpandableContent\";\nimport Html from \"/home/arturs/scandiweb/extension/src/component/Html\";\nimport { ProductType } from \"/home/arturs/scandiweb/extension/src/type/ProductList\";\nimport \"./ProductInformation.style\";\n/** #namespace Component/ProductInformation/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductInformation = Mosaic.middleware((_temp = _class = class ProductInformation_ extends Mosaic.Extensible(PureComponent) {\n  renderDescription() {\n    const {\n      product: {\n        description: {\n          html\n        } = {}\n      }\n    } = this.props;\n\n    if (!html) {\n      return '';\n    }\n\n    const cleanDescription = html.replace(/<\\/?[^>]+(>|$)/g, '');\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"meta\", {\n      itemProp: \"description\",\n      content: cleanDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, Html, {\n      content: html,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderContent() {\n    const {\n      areDetailsLoaded\n    } = this.props;\n    const heading = areDetailsLoaded ? __('Product information') : '';\n    return /*#__PURE__*/_checkBEM(React, ExpandableContent // show placeholder if the details are not loaded\n    , {\n      heading: heading,\n      mix: {\n        block: 'ProductInformation',\n        elem: 'Content'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, this.renderDescription());\n  }\n\n  isHTMLWhiteSpaceOrUndefined(htmlString) {\n    if (!htmlString || htmlString.trim() === '') {\n      return true;\n    } // creates a DOM object from string\n\n\n    const parser = new DOMParser();\n    const document = parser.parseFromString(htmlString.trim(), 'text/html'); // handles the case of plain text\n\n    if (document.body.children.length === 0) {\n      return false;\n    } // check if at least one HTML element has content\n\n\n    const elementsWithContent = Array.from(document.body.children).filter(function (element) {\n      return element.innerText !== '';\n    });\n    return elementsWithContent.length === 0;\n  }\n\n  render() {\n    const {\n      areDetailsLoaded,\n      product: {\n        description: {\n          html\n        } = {}\n      }\n    } = this.props;\n\n    if (this.isHTMLWhiteSpaceOrUndefined(html) && areDetailsLoaded) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, ContentWrapper, {\n      label: \"Product information\",\n      mix: {\n        block: 'ProductInformation'\n      },\n      wrapperMix: {\n        block: 'ProductInformation',\n        elem: 'Wrapper'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, this.renderContent());\n  }\n\n}, _class.propTypes = {\n  product: ProductType.isRequired,\n  areDetailsLoaded: PropTypes.bool.isRequired\n}, _temp), \"Component/ProductInformation/Component\");\nexport default ProductInformation;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductInformation/ProductInformation.component.js"],"names":["PropTypes","PureComponent","ContentWrapper","ExpandableContent","Html","ProductType","renderDescription","product","description","html","props","cleanDescription","replace","renderContent","areDetailsLoaded","heading","__","block","elem","isHTMLWhiteSpaceOrUndefined","htmlString","trim","parser","DOMParser","document","parseFromString","body","children","length","elementsWithContent","Array","from","filter","element","innerText","render","propTypes","isRequired","bool","ProductInformation"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport ContentWrapper from 'Component/ContentWrapper';\nimport ExpandableContent from 'Component/ExpandableContent';\nimport Html from 'Component/Html';\nimport { ProductType } from 'Type/ProductList';\n\nimport './ProductInformation.style';\n\n/** @namespace Component/ProductInformation/Component */\nexport class ProductInformation extends PureComponent {\n    static propTypes = {\n        product: ProductType.isRequired,\n        areDetailsLoaded: PropTypes.bool.isRequired\n    };\n\n    renderDescription() {\n        const { product: { description: { html } = {} } } = this.props;\n\n        if (!html) {\n            return '';\n        }\n\n        const cleanDescription = html.replace(/<\\/?[^>]+(>|$)/g, '');\n\n        return (\n            <div>\n                <meta itemProp=\"description\" content={ cleanDescription } />\n                <Html content={ html } />\n            </div>\n        );\n    }\n\n    renderContent() {\n        const { areDetailsLoaded } = this.props;\n        const heading = areDetailsLoaded ? __('Product information') : '';\n\n        return (\n            <ExpandableContent\n              // show placeholder if the details are not loaded\n              heading={ heading }\n              mix={ { block: 'ProductInformation', elem: 'Content' } }\n            >\n                { this.renderDescription() }\n            </ExpandableContent>\n        );\n    }\n\n    isHTMLWhiteSpaceOrUndefined(htmlString) {\n        if (!htmlString || htmlString.trim() === '') {\n            return true;\n        }\n\n        // creates a DOM object from string\n        const parser = new DOMParser();\n        const document = parser.parseFromString(htmlString.trim(), 'text/html');\n\n        // handles the case of plain text\n        if (document.body.children.length === 0) {\n            return false;\n        }\n\n        // check if at least one HTML element has content\n        const elementsWithContent = Array.from(document.body.children).filter((element) => element.innerText !== '');\n        return elementsWithContent.length === 0;\n    }\n\n    render() {\n        const {\n            areDetailsLoaded,\n            product: {\n                description: { html } = {}\n            }\n        } = this.props;\n\n        if (this.isHTMLWhiteSpaceOrUndefined(html) && areDetailsLoaded) {\n            return null;\n        }\n\n        return (\n            <ContentWrapper\n              label=\"Product information\"\n              mix={ { block: 'ProductInformation' } }\n              wrapperMix={ { block: 'ProductInformation', elem: 'Wrapper' } }\n            >\n                { this.renderContent() }\n            </ContentWrapper>\n        );\n    }\n}\n\nexport default ProductInformation;\n"]},"metadata":{},"sourceType":"module"}