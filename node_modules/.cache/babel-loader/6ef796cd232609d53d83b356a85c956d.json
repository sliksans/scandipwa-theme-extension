{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/MyAccountNewsletterSubscription/MyAccountNewsletterSubscription.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport FieldForm from \"/home/arturs/scandiweb/extension/src/component/FieldForm\";\nimport { customerType } from \"/home/arturs/scandiweb/extension/src/type/Account\";\nimport \"./MyAccountNewsletterSubscription.style.scss\";\n/** #namespace Component/MyAccountNewsletterSubscription/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountNewsletterSubscription = Mosaic.middleware((_temp = _class = class MyAccountNewsletterSubscription_ extends Mosaic.Extensible(FieldForm) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.onFormSuccess = function (fields) {\n      const {\n        onCustomerSave\n      } = _this.props;\n      onCustomerSave(fields);\n    };\n  }\n\n  getDefaultValues(fieldEntry) {\n    const [key] = fieldEntry;\n    const {\n      customer: {\n        [key]: value\n      }\n    } = this.props;\n    return { ...super.getDefaultValues(fieldEntry),\n      value\n    };\n  }\n\n  get fieldMap() {\n    const {\n      customer: {\n        is_subscribed\n      }\n    } = this.props;\n    return {\n      is_subscribed: {\n        type: 'checkbox',\n        label: __('General subscription'),\n        value: 'is_subscribed',\n        checked: is_subscribed\n      }\n    };\n  }\n\n  renderFields() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"FieldForm\",\n      elem: \"Fields\",\n      mix: {\n        block: 'MyAccountNewsletterSubscription'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, Object.entries(this.fieldMap).map(this.renderField));\n  }\n\n  renderActions() {\n    return /*#__PURE__*/_checkBEM(React, \"button\", {\n      type: \"submit\",\n      block: \"Button\",\n      mix: {\n        block: 'MyAccountNewsletterSubscription',\n        elem: 'Button'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, __('Save changes'));\n  }\n\n}, _class.propTypes = {\n  customer: customerType.isRequired,\n  onCustomerSave: PropTypes.func.isRequired\n}, _temp), \"Component/MyAccountNewsletterSubscription/Component\");\nexport default MyAccountNewsletterSubscription;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/MyAccountNewsletterSubscription/MyAccountNewsletterSubscription.component.js"],"names":["PropTypes","FieldForm","customerType","onFormSuccess","fields","onCustomerSave","props","getDefaultValues","fieldEntry","key","customer","value","fieldMap","is_subscribed","type","label","__","checked","renderFields","block","Object","entries","map","renderField","renderActions","elem","propTypes","isRequired","func","MyAccountNewsletterSubscription"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP;AACA,SAASC,YAAT;AAEA;AAEA;;;;AACA,oJAAqDD,SAArD,EAA+D;AAAA;AAAA;;AAAA;AAAA;;AAAA,SAM3DE,aAN2D,GAM3C,UAACC,MAAD,EAAY;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAqB,KAAI,CAACC,KAAhC;AACAD,MAAAA,cAAc,CAACD,MAAD,CAAd;AACH,KAT0D;AAAA;;AAW3DG,EAAAA,gBAAgB,CAACC,UAAD,EAAa;AACzB,UAAM,CAACC,GAAD,IAAQD,UAAd;AACA,UAAM;AAAEE,MAAAA,QAAQ,EAAE;AAAE,SAACD,GAAD,GAAOE;AAAT;AAAZ,QAAiC,KAAKL,KAA5C;AAEA,WAAO,EACH,GAAG,MAAMC,gBAAN,CAAuBC,UAAvB,CADA;AAEHG,MAAAA;AAFG,KAAP;AAIH;;AAEW,MAARC,QAAQ,GAAG;AACX,UAAM;AAAEF,MAAAA,QAAQ,EAAE;AAAEG,QAAAA;AAAF;AAAZ,QAAkC,KAAKP,KAA7C;AAEA,WAAO;AACHO,MAAAA,aAAa,EAAE;AACXC,QAAAA,IAAI,EAAE,UADK;AAEXC,QAAAA,KAAK,EAAEC,EAAE,CAAC,sBAAD,CAFE;AAGXL,QAAAA,KAAK,EAAE,eAHI;AAIXM,QAAAA,OAAO,EAAEJ;AAJE;AADZ,KAAP;AAQH;;AAEDK,EAAAA,YAAY,GAAG;AACX;AAEM,MAAA,KAAK,EAAC,WAFZ;AAGM,MAAA,IAAI,EAAC,QAHX;AAIM,MAAA,GAAG,EAAG;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMUC,MAAM,CAACC,OAAP,CAAe,KAAKT,QAApB,EAA8BU,GAA9B,CAAkC,KAAKC,WAAvC,CANV;AASH;;AAEDC,EAAAA,aAAa,GAAG;AACZ;AAEM,MAAA,IAAI,EAAC,QAFX;AAGM,MAAA,KAAK,EAAC,QAHZ;AAIM,MAAA,GAAG,EAAG;AAAEL,QAAAA,KAAK,EAAE,iCAAT;AAA4CM,QAAAA,IAAI,EAAE;AAAlD,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMUT,EAAE,CAAC,cAAD,CANZ;AASH;;AAxD0D,CAA/D,SACWU,SADX,GACuB;AACfhB,EAAAA,QAAQ,EAAER,YAAY,CAACyB,UADR;AAEftB,EAAAA,cAAc,EAAEL,SAAS,CAAC4B,IAAV,CAAeD;AAFhB,CADvB;AA2DA,eAAeE,+BAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport FieldForm from 'Component/FieldForm';\nimport { customerType } from 'Type/Account';\n\nimport './MyAccountNewsletterSubscription.style.scss';\n\n/** @namespace Component/MyAccountNewsletterSubscription/Component */\nexport class MyAccountNewsletterSubscription extends FieldForm {\n    static propTypes = {\n        customer: customerType.isRequired,\n        onCustomerSave: PropTypes.func.isRequired\n    };\n\n    onFormSuccess = (fields) => {\n        const { onCustomerSave } = this.props;\n        onCustomerSave(fields);\n    };\n\n    getDefaultValues(fieldEntry) {\n        const [key] = fieldEntry;\n        const { customer: { [key]: value } } = this.props;\n\n        return {\n            ...super.getDefaultValues(fieldEntry),\n            value\n        };\n    }\n\n    get fieldMap() {\n        const { customer: { is_subscribed } } = this.props;\n\n        return {\n            is_subscribed: {\n                type: 'checkbox',\n                label: __('General subscription'),\n                value: 'is_subscribed',\n                checked: is_subscribed\n            }\n        };\n    }\n\n    renderFields() {\n        return (\n            <div\n              block=\"FieldForm\"\n              elem=\"Fields\"\n              mix={ { block: 'MyAccountNewsletterSubscription' } }\n            >\n                { Object.entries(this.fieldMap).map(this.renderField) }\n            </div>\n        );\n    }\n\n    renderActions() {\n        return (\n            <button\n              type=\"submit\"\n              block=\"Button\"\n              mix={ { block: 'MyAccountNewsletterSubscription', elem: 'Button' } }\n            >\n                { __('Save changes') }\n            </button>\n        );\n    }\n}\n\nexport default MyAccountNewsletterSubscription;\n"]},"metadata":{},"sourceType":"module"}