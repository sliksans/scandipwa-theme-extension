{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/FieldSelect/FieldSelect.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport ClickOutside from \"/home/arturs/scandiweb/extension/src/component/ClickOutside\";\nimport \"./FieldSelect.style\";\n/** #namespace Component/FieldSelect/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const FieldSelect = Mosaic.middleware((_temp = _class = class FieldSelect_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.renderNativeOption = function (option) {\n      const {\n        id,\n        value,\n        disabled,\n        label\n      } = option;\n      return /*#__PURE__*/_checkBEM(React, \"option\", {\n        key: id,\n        id: id,\n        value: value,\n        disabled: disabled,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, label);\n    };\n\n    this.renderOption = function (option) {\n      const {\n        id,\n        label\n      } = option;\n      const {\n        isSelectExpanded: isExpanded,\n        handleSelectListOptionClick\n      } = _this.props;\n      return /*#__PURE__*/_checkBEM(React, \"li\", {\n        block: \"FieldSelect\",\n        elem: \"Option\",\n        mods: {\n          isExpanded\n        },\n        key: id\n        /**\n         * Added 'o' as querySelector does not work with\n         * ids, that consist of numbers only\n         */\n        ,\n        id: `o${id}`,\n        role: \"menuitem\" // eslint-disable-next-line react/jsx-no-bind\n        ,\n        onClick: function () {\n          return handleSelectListOptionClick(option);\n        } // eslint-disable-next-line react/jsx-no-bind\n        ,\n        onKeyPress: function () {\n          return handleSelectListOptionClick(option);\n        },\n        tabIndex: isExpanded ? '0' : '-1',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, label);\n    };\n  }\n\n  renderNativeSelect() {\n    const {\n      name,\n      id,\n      onChange,\n      selectOptions,\n      formRef,\n      value,\n      isDisabled,\n      isSelectExpanded: isExpanded,\n      autocomplete,\n      skipValue\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"select\", {\n      block: \"FieldSelect\",\n      elem: \"Select\",\n      autoComplete: autocomplete,\n      mods: {\n        isExpanded\n      },\n      ref: formRef,\n      name: name,\n      id: id,\n      disabled: isDisabled,\n      tabIndex: \"0\",\n      value: value || '',\n      onChange: onChange,\n      \"data-skip-value\": skipValue,\n      \"aria-label\": __('Select drop-down'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, this.renderPlaceholder(), selectOptions.map(this.renderNativeOption));\n  }\n\n  renderPlaceholder() {\n    const {\n      placeholder\n    } = this.props;\n\n    if (!placeholder) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"option\", {\n      value: \"\",\n      label: placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, placeholder);\n  }\n\n  renderOptions() {\n    const {\n      selectOptions,\n      isSelectExpanded: isExpanded\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"ul\", {\n      block: \"FieldSelect\",\n      elem: \"Options\",\n      role: \"menu\",\n      mods: {\n        isExpanded\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, selectOptions.map(this.renderOption));\n  }\n\n  render() {\n    const {\n      isSelectExpanded: isExpanded,\n      handleSelectExpand,\n      handleSelectListKeyPress,\n      handleSelectExpandedExpand\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, ClickOutside, {\n      onClick: handleSelectExpandedExpand,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"FieldSelect\",\n      onClick: handleSelectExpand,\n      onKeyPress: handleSelectListKeyPress,\n      role: \"button\",\n      tabIndex: \"0\",\n      \"aria-label\": \"Select drop-down\",\n      \"aria-expanded\": isExpanded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, this.renderNativeSelect(), this.renderOptions()));\n  }\n\n}, _class.propTypes = {\n  handleSelectListOptionClick: PropTypes.func.isRequired,\n  handleSelectExpand: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  handleSelectListKeyPress: PropTypes.func.isRequired,\n  handleSelectExpandedExpand: PropTypes.func.isRequired,\n  isSelectExpanded: PropTypes.bool.isRequired,\n  selectOptions: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    disabled: PropTypes.bool,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n  })).isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  formRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  })]),\n  placeholder: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  autocomplete: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  isDisabled: PropTypes.bool,\n  skipValue: PropTypes.bool\n}, _class.defaultProps = {\n  formRef: function () {},\n  placeholder: '',\n  value: null,\n  isDisabled: false,\n  autocomplete: 'off',\n  skipValue: false\n}, _temp), \"Component/FieldSelect/Component\");\nexport default FieldSelect;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/FieldSelect/FieldSelect.component.js"],"names":["PropTypes","PureComponent","ClickOutside","renderNativeOption","option","id","value","disabled","label","renderOption","isSelectExpanded","isExpanded","handleSelectListOptionClick","props","renderNativeSelect","name","onChange","selectOptions","formRef","isDisabled","autocomplete","skipValue","__","renderPlaceholder","map","placeholder","renderOptions","render","handleSelectExpand","handleSelectListKeyPress","handleSelectExpandedExpand","propTypes","func","isRequired","bool","arrayOf","shape","oneOfType","string","number","object","current","instanceOf","Element","defaultProps","FieldSelect"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport ClickOutside from 'Component/ClickOutside';\n\nimport './FieldSelect.style';\n\n/** @namespace Component/FieldSelect/Component */\nexport class FieldSelect extends PureComponent {\n    static propTypes = {\n        handleSelectListOptionClick: PropTypes.func.isRequired,\n        handleSelectExpand: PropTypes.func.isRequired,\n        onChange: PropTypes.func.isRequired,\n        handleSelectListKeyPress: PropTypes.func.isRequired,\n        handleSelectExpandedExpand: PropTypes.func.isRequired,\n        isSelectExpanded: PropTypes.bool.isRequired,\n        selectOptions: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.number\n            ]),\n            value: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.number\n            ]),\n            disabled: PropTypes.bool,\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n        })).isRequired,\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        formRef: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.shape({ current: PropTypes.instanceOf(Element) })\n        ]),\n        placeholder: PropTypes.string,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.bool\n        ]),\n        autocomplete: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.bool\n        ]),\n        isDisabled: PropTypes.bool,\n        skipValue: PropTypes.bool\n    };\n\n    static defaultProps = {\n        formRef: () => {},\n        placeholder: '',\n        value: null,\n        isDisabled: false,\n        autocomplete: 'off',\n        skipValue: false\n    };\n\n    renderNativeSelect() {\n        const {\n            name,\n            id,\n            onChange,\n            selectOptions,\n            formRef,\n            value,\n            isDisabled,\n            isSelectExpanded: isExpanded,\n            autocomplete,\n            skipValue\n        } = this.props;\n\n        return (\n            <select\n              block=\"FieldSelect\"\n              elem=\"Select\"\n              autoComplete={ autocomplete }\n              mods={ { isExpanded } }\n              ref={ formRef }\n              name={ name }\n              id={ id }\n              disabled={ isDisabled }\n              tabIndex=\"0\"\n              value={ value || '' }\n              onChange={ onChange }\n              data-skip-value={ skipValue }\n              aria-label={ __('Select drop-down') }\n            >\n                { this.renderPlaceholder() }\n                { selectOptions.map(this.renderNativeOption) }\n            </select>\n        );\n    }\n\n    renderNativeOption = (option) => {\n        const {\n            id,\n            value,\n            disabled,\n            label\n        } = option;\n\n        return (\n            <option\n              key={ id }\n              id={ id }\n              value={ value }\n              disabled={ disabled }\n            >\n                { label }\n            </option>\n        );\n    };\n\n    renderPlaceholder() {\n        const { placeholder } = this.props;\n\n        if (!placeholder) {\n            return null;\n        }\n\n        return (\n            <option value=\"\" label={ placeholder }>{ placeholder }</option>\n        );\n    }\n\n    renderOption = (option) => {\n        const {\n            id,\n            label\n        } = option;\n\n        const {\n            isSelectExpanded: isExpanded,\n            handleSelectListOptionClick\n        } = this.props;\n\n        return (\n            <li\n              block=\"FieldSelect\"\n              elem=\"Option\"\n              mods={ { isExpanded } }\n              key={ id }\n              /**\n               * Added 'o' as querySelector does not work with\n               * ids, that consist of numbers only\n               */\n              id={ `o${id}` }\n              role=\"menuitem\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={ () => handleSelectListOptionClick(option) }\n              // eslint-disable-next-line react/jsx-no-bind\n              onKeyPress={ () => handleSelectListOptionClick(option) }\n              tabIndex={ isExpanded ? '0' : '-1' }\n            >\n                { label }\n            </li>\n        );\n    };\n\n    renderOptions() {\n        const {\n            selectOptions,\n            isSelectExpanded: isExpanded\n        } = this.props;\n\n        return (\n            <ul\n              block=\"FieldSelect\"\n              elem=\"Options\"\n              role=\"menu\"\n              mods={ { isExpanded } }\n            >\n                { selectOptions.map(this.renderOption) }\n            </ul>\n        );\n    }\n\n    render() {\n        const {\n            isSelectExpanded: isExpanded,\n            handleSelectExpand,\n            handleSelectListKeyPress,\n            handleSelectExpandedExpand\n        } = this.props;\n\n        return (\n            <ClickOutside onClick={ handleSelectExpandedExpand }>\n                <div\n                  block=\"FieldSelect\"\n                  onClick={ handleSelectExpand }\n                  onKeyPress={ handleSelectListKeyPress }\n                  role=\"button\"\n                  tabIndex=\"0\"\n                  aria-label=\"Select drop-down\"\n                  aria-expanded={ isExpanded }\n                >\n                    { this.renderNativeSelect() }\n                    { this.renderOptions() }\n                </div>\n            </ClickOutside>\n        );\n    }\n}\n\nexport default FieldSelect;\n"]},"metadata":{},"sourceType":"module"}