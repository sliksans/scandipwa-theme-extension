{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductReviewForm/ProductReviewForm.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport Field from \"/home/arturs/scandiweb/extension/src/component/Field\";\nimport Form from \"/home/arturs/scandiweb/extension/src/component/Form\";\nimport Loader from \"/home/arturs/scandiweb/extension/src/component/Loader\";\nimport ReviewStar from \"/home/arturs/scandiweb/extension/src/component/ReviewStar\";\nimport { RatingItemsType } from \"/home/arturs/scandiweb/extension/src/type/Rating\";\nimport \"./ProductReviewForm.style\";\n/**\n * ProductReviewForm\n * @class ProductReviewForm\n * #namespace Component/ProductReviewForm/Component\n */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductReviewForm = Mosaic.middleware((_temp = _class = class ProductReviewForm_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.ratingTitleMap = {\n      1: __('Awful'),\n      2: __('Bad'),\n      3: __('Average'),\n      4: __('Good'),\n      5: __('Awesome')\n    };\n  }\n\n  renderReviewStar(options, rating_id) {\n    const {\n      ratingData,\n      onStarRatingClick\n    } = this.props;\n    const {\n      option_id,\n      value\n    } = options;\n    const isChecked = !!ratingData[rating_id] && ratingData[rating_id] === option_id;\n    return /*#__PURE__*/_checkBEM(React, ReviewStar, {\n      key: option_id,\n      name: rating_id,\n      value: value,\n      title: this.ratingTitleMap[value],\n      isChecked: isChecked,\n      option_id: option_id,\n      rating_id: rating_id,\n      onStarRatingClick: onStarRatingClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderReviewRating() {\n    var _this = this;\n\n    const {\n      reviewRatings\n    } = this.props;\n    return reviewRatings.map(function (rating) {\n      const {\n        rating_id,\n        rating_code,\n        rating_options\n      } = rating;\n      return /*#__PURE__*/_checkBEM(React, \"fieldset\", {\n        block: \"ProductReviewForm\",\n        elem: \"Rating\",\n        key: rating_id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/_checkBEM(React, \"legend\", {\n        block: \"ProductReviewForm\",\n        elem: \"Legend\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, rating_code), rating_options.sort(function ({\n        value\n      }, {\n        value: nextValue\n      }) {\n        return nextValue - value;\n      }).map(function (option) {\n        return _this.renderReviewStar(option, rating_id);\n      }));\n    });\n  }\n\n  renderButton() {\n    return /*#__PURE__*/_checkBEM(React, \"button\", {\n      block: \"ProductReviewForm\",\n      elem: \"Button\",\n      type: \"submit\",\n      mix: {\n        block: 'Button'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, __('Submit Review'));\n  }\n\n  renderReviewFormContent() {\n    const {\n      handleNicknameChange,\n      handleSummaryChange,\n      handleDetailChange,\n      reviewData,\n      isSubmitted\n    } = this.props;\n    const {\n      nickname = '',\n      summary = '',\n      detail = ''\n    } = reviewData;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductReviewForm\",\n      elem: \"Wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, this.renderReviewRating()), /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductReviewForm\",\n      elem: \"Content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, Field, {\n      type: \"text\",\n      label: __('Nickname'),\n      id: \"nickname\",\n      name: \"nickname\",\n      validation: ['notEmpty'],\n      value: nickname,\n      onChange: handleNicknameChange,\n      validateSeparately: true,\n      isSubmitted: isSubmitted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/_checkBEM(React, Field, {\n      type: \"text\",\n      label: __('Summary'),\n      id: \"title\",\n      name: \"title\",\n      validation: ['notEmpty'],\n      value: summary,\n      onChange: handleSummaryChange,\n      isSubmitted: isSubmitted,\n      validateSeparately: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/_checkBEM(React, Field, {\n      type: \"textarea\",\n      label: __('Review'),\n      id: \"detail\",\n      name: \"detail\",\n      validation: ['notEmpty'],\n      value: detail,\n      onChange: handleDetailChange,\n      isSubmitted: isSubmitted,\n      validateSeparately: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  render() {\n    const {\n      isLoading,\n      onReviewSubmitAttempt,\n      onReviewSubmitSuccess,\n      onReviewError\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, Form, {\n      key: \"product-review\",\n      mix: {\n        block: 'ProductReviewForm'\n      },\n      onSubmit: onReviewSubmitAttempt,\n      onSubmitSuccess: onReviewSubmitSuccess,\n      onSubmitError: onReviewError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, Loader, {\n      isLoading: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }), this.renderReviewFormContent(), this.renderButton());\n  }\n\n}, _class.propTypes = {\n  reviewRatings: RatingItemsType.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onReviewSubmitAttempt: PropTypes.func.isRequired,\n  onReviewSubmitSuccess: PropTypes.func.isRequired,\n  onReviewError: PropTypes.func.isRequired,\n  onStarRatingClick: PropTypes.func.isRequired,\n  handleNicknameChange: PropTypes.func.isRequired,\n  handleSummaryChange: PropTypes.func.isRequired,\n  handleDetailChange: PropTypes.func.isRequired,\n  ratingData: PropTypes.objectOf(PropTypes.string).isRequired,\n  reviewData: PropTypes.shape({\n    nickname: PropTypes.string,\n    summary: PropTypes.string,\n    detail: PropTypes.string\n  }).isRequired,\n  isSubmitted: PropTypes.bool\n}, _class.defaultProps = {\n  isSubmitted: false\n}, _temp), \"Component/ProductReviewForm/Component\");\nexport default ProductReviewForm;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductReviewForm/ProductReviewForm.component.js"],"names":["PropTypes","PureComponent","Field","Form","Loader","ReviewStar","RatingItemsType","ratingTitleMap","__","renderReviewStar","options","rating_id","ratingData","onStarRatingClick","props","option_id","value","isChecked","renderReviewRating","reviewRatings","map","rating","rating_code","rating_options","sort","nextValue","option","renderButton","block","renderReviewFormContent","handleNicknameChange","handleSummaryChange","handleDetailChange","reviewData","isSubmitted","nickname","summary","detail","render","isLoading","onReviewSubmitAttempt","onReviewSubmitSuccess","onReviewError","propTypes","isRequired","bool","func","objectOf","string","shape","defaultProps","ProductReviewForm"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Field from 'Component/Field';\nimport Form from 'Component/Form';\nimport Loader from 'Component/Loader';\nimport ReviewStar from 'Component/ReviewStar';\nimport { RatingItemsType } from 'Type/Rating';\n\nimport './ProductReviewForm.style';\n\n/**\n * ProductReviewForm\n * @class ProductReviewForm\n * @namespace Component/ProductReviewForm/Component\n */\nexport class ProductReviewForm extends PureComponent {\n    static propTypes = {\n        reviewRatings: RatingItemsType.isRequired,\n        isLoading: PropTypes.bool.isRequired,\n        onReviewSubmitAttempt: PropTypes.func.isRequired,\n        onReviewSubmitSuccess: PropTypes.func.isRequired,\n        onReviewError: PropTypes.func.isRequired,\n        onStarRatingClick: PropTypes.func.isRequired,\n        handleNicknameChange: PropTypes.func.isRequired,\n        handleSummaryChange: PropTypes.func.isRequired,\n        handleDetailChange: PropTypes.func.isRequired,\n        ratingData: PropTypes.objectOf(PropTypes.string).isRequired,\n        reviewData: PropTypes.shape({\n            nickname: PropTypes.string,\n            summary: PropTypes.string,\n            detail: PropTypes.string\n        }).isRequired,\n        isSubmitted: PropTypes.bool\n    };\n\n    static defaultProps = {\n        isSubmitted: false\n    };\n\n    ratingTitleMap = {\n        1: __('Awful'),\n        2: __('Bad'),\n        3: __('Average'),\n        4: __('Good'),\n        5: __('Awesome')\n    };\n\n    renderReviewStar(options, rating_id) {\n        const { ratingData, onStarRatingClick } = this.props;\n        const { option_id, value } = options;\n        const isChecked = !!ratingData[rating_id] && ratingData[rating_id] === option_id;\n\n        return (\n            <ReviewStar\n              key={ option_id }\n              name={ rating_id }\n              value={ value }\n              title={ this.ratingTitleMap[value] }\n              isChecked={ isChecked }\n              option_id={ option_id }\n              rating_id={ rating_id }\n              onStarRatingClick={ onStarRatingClick }\n            />\n        );\n    }\n\n    renderReviewRating() {\n        const { reviewRatings } = this.props;\n\n        return reviewRatings.map((rating) => {\n            const { rating_id, rating_code, rating_options } = rating;\n\n            return (\n                <fieldset block=\"ProductReviewForm\" elem=\"Rating\" key={ rating_id }>\n                    <legend block=\"ProductReviewForm\" elem=\"Legend\">\n                        { rating_code }\n                    </legend>\n                    { rating_options\n                        .sort(({ value }, { value: nextValue }) => nextValue - value)\n                        .map((option) => this.renderReviewStar(option, rating_id)) }\n                </fieldset>\n            );\n        });\n    }\n\n    renderButton() {\n        return (\n            <button\n              block=\"ProductReviewForm\"\n              elem=\"Button\"\n              type=\"submit\"\n              mix={ { block: 'Button' } }\n            >\n                { __('Submit Review') }\n            </button>\n        );\n    }\n\n    renderReviewFormContent() {\n        const {\n            handleNicknameChange,\n            handleSummaryChange,\n            handleDetailChange,\n            reviewData,\n            isSubmitted\n        } = this.props;\n\n        const {\n            nickname = '',\n            summary = '',\n            detail = ''\n        } = reviewData;\n\n        return (\n            <div\n              block=\"ProductReviewForm\"\n              elem=\"Wrapper\"\n            >\n                <div>\n                    { this.renderReviewRating() }\n                </div>\n                <div\n                  block=\"ProductReviewForm\"\n                  elem=\"Content\"\n                >\n                    <Field\n                      type=\"text\"\n                      label={ __('Nickname') }\n                      id=\"nickname\"\n                      name=\"nickname\"\n                      validation={ ['notEmpty'] }\n                      value={ nickname }\n                      onChange={ handleNicknameChange }\n                      validateSeparately\n                      isSubmitted={ isSubmitted }\n                    />\n                    <Field\n                      type=\"text\"\n                      label={ __('Summary') }\n                      id=\"title\"\n                      name=\"title\"\n                      validation={ ['notEmpty'] }\n                      value={ summary }\n                      onChange={ handleSummaryChange }\n                      isSubmitted={ isSubmitted }\n                      validateSeparately\n                    />\n                    <Field\n                      type=\"textarea\"\n                      label={ __('Review') }\n                      id=\"detail\"\n                      name=\"detail\"\n                      validation={ ['notEmpty'] }\n                      value={ detail }\n                      onChange={ handleDetailChange }\n                      isSubmitted={ isSubmitted }\n                      validateSeparately\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            isLoading,\n            onReviewSubmitAttempt,\n            onReviewSubmitSuccess,\n            onReviewError\n        } = this.props;\n\n        return (\n            <Form\n              key=\"product-review\"\n              mix={ { block: 'ProductReviewForm' } }\n              onSubmit={ onReviewSubmitAttempt }\n              onSubmitSuccess={ onReviewSubmitSuccess }\n              onSubmitError={ onReviewError }\n            >\n                <Loader isLoading={ isLoading } />\n                { this.renderReviewFormContent() }\n                { this.renderButton() }\n            </Form>\n        );\n    }\n}\n\nexport default ProductReviewForm;\n"]},"metadata":{},"sourceType":"module"}