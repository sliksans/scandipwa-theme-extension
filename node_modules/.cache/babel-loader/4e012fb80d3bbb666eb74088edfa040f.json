{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductListWidget/ProductListWidget.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ProductList from \"/home/arturs/scandiweb/extension/src/component/ProductList\";\nimport ProductListQuery from \"/home/arturs/scandiweb/extension/src/query/ProductList.query\";\nimport { updateNoMatch } from \"/home/arturs/scandiweb/extension/src/store/NoMatch/NoMatch.action\";\nimport { showNotification } from \"/home/arturs/scandiweb/extension/src/store/Notification/Notification.action\";\nimport { getIndexedProducts } from \"/home/arturs/scandiweb/extension/src/util/Product\";\nimport DataContainer from \"/home/arturs/scandiweb/extension/src/util/Request/DataContainer\";\nimport \"./ProductListWidget.style\";\n/** #namespace Component/ProductListWidget/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    updateNoMatch,\n    showNotification\n  };\n}, \"Component/ProductListWidget/Container/mapDispatchToProps\");\n/** #namespace Component/ProductListWidget/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductListWidgetContainer = Mosaic.middleware((_temp = _class = class ProductListWidgetContainer_ extends Mosaic.Extensible(DataContainer) {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pages: {},\n      totalItems: 0,\n      totalPages: 0,\n      isLoading: true\n    };\n    this.containerFunctions = {\n      requestProductList: this.requestProductList.bind(this),\n      updateLoadStatus: this.updateLoadStatus.bind(this),\n      getIsNewCategory: this.getIsNewCategory.bind(this)\n    };\n    this.onError = this.onError.bind(this);\n    this.appendPage = this.appendPage.bind(this);\n    this.updateProductListItems = this.updateProductListItems.bind(this);\n    this.dataModelName = 'ProductListWidget';\n  }\n\n  onError(error) {\n    const {\n      showNotification,\n      updateNoMatch\n    } = this.props;\n    showNotification('error', __('Error fetching Product List!'), error);\n    updateNoMatch(true);\n  }\n\n  getIsNewCategory() {\n    return true;\n  }\n\n  appendPage(data) {\n    const {\n      showPager\n    } = this.props;\n    const {\n      pages\n    } = this.state;\n    const {\n      products: {\n        items,\n        page_info: {\n          current_page\n        } = {}\n      } = {}\n    } = data;\n\n    if (showPager === 0) {\n      return;\n    }\n\n    this.setState({\n      pages: { ...pages,\n        [current_page]: getIndexedProducts(items)\n      }\n    });\n  }\n\n  updateProductListItems(data) {\n    const {\n      productsCount,\n      productsPerPage\n    } = this.props;\n    const {\n      products: {\n        items,\n        total_count: totalItems,\n        page_info: {\n          current_page\n        } = {}\n      } = {}\n    } = data;\n    const totalPages = Math.ceil(productsCount / productsPerPage);\n    this.setState({\n      isLoading: false,\n      totalItems,\n      totalPages,\n      pages: {\n        [current_page]: getIndexedProducts(items)\n      }\n    });\n  }\n\n  updateLoadStatus(isLoading) {\n    this.setState({\n      isLoading\n    });\n  }\n\n  requestProductList(options) {\n    const {\n      isNext\n    } = options;\n\n    if (!isNext) {\n      this.updateLoadStatus(true);\n    }\n\n    this.fetchData([ProductListQuery.getQuery(options)], isNext ? this.appendPage : this.updateProductListItems, this.onError);\n  }\n\n  adaptProps() {\n    const {\n      showPager,\n      productsCount,\n      productsPerPage,\n      conditionsEncoded: conditions\n    } = this.props;\n    return {\n      filter: {\n        conditions\n      },\n      pageSize: showPager ? productsPerPage : productsCount,\n      isPaginationEnabled: !!showPager\n    };\n  }\n\n  render() {\n    const adaptedProps = this.adaptProps();\n    return /*#__PURE__*/_checkBEM(React, ProductList, Object.assign({}, this.props, this.state, adaptedProps, this.containerFunctions, {\n      isInfiniteLoaderEnabled: false,\n      numberOfPlaceholders: 6,\n      mix: {\n        block: 'ProductListWidget'\n      },\n      isWidget: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  showPager: PropTypes.number,\n  productsCount: PropTypes.number,\n  productsPerPage: PropTypes.number,\n  conditionsEncoded: PropTypes.string,\n  updateNoMatch: PropTypes.func.isRequired,\n  showNotification: PropTypes.func.isRequired\n}, _class.defaultProps = {\n  showPager: 0,\n  productsCount: 10,\n  productsPerPage: 5,\n  conditionsEncoded: null\n}, _temp), \"Component/ProductListWidget/Container\");\n/** #namespace Component/ProductListWidget/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {};\n}, \"Component/ProductListWidget/Container/mapStateToProps\");\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListWidgetContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductListWidget/ProductListWidget.container.js"],"names":["PropTypes","connect","ProductList","ProductListQuery","updateNoMatch","showNotification","getIndexedProducts","DataContainer","mapDispatchToProps","dispatch","state","pages","totalItems","totalPages","isLoading","containerFunctions","requestProductList","bind","updateLoadStatus","getIsNewCategory","onError","appendPage","updateProductListItems","dataModelName","error","props","__","data","showPager","products","items","page_info","current_page","setState","productsCount","productsPerPage","total_count","Math","ceil","options","isNext","fetchData","getQuery","adaptProps","conditionsEncoded","conditions","filter","pageSize","isPaginationEnabled","render","adaptedProps","block","propTypes","number","string","func","isRequired","defaultProps","mapStateToProps","ProductListWidgetContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ProductList from 'Component/ProductList';\nimport ProductListQuery from 'Query/ProductList.query';\nimport { updateNoMatch } from 'Store/NoMatch/NoMatch.action';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { getIndexedProducts } from 'Util/Product';\nimport DataContainer from 'Util/Request/DataContainer';\n\nimport './ProductListWidget.style';\n\n/** @namespace Component/ProductListWidget/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({\n    updateNoMatch,\n    showNotification\n});\n\n/** @namespace Component/ProductListWidget/Container */\nexport class ProductListWidgetContainer extends DataContainer {\n    static propTypes = {\n        showPager: PropTypes.number,\n        productsCount: PropTypes.number,\n        productsPerPage: PropTypes.number,\n        conditionsEncoded: PropTypes.string,\n        updateNoMatch: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        showPager: 0,\n        productsCount: 10,\n        productsPerPage: 5,\n        conditionsEncoded: null\n    };\n\n    state = {\n        pages: {},\n        totalItems: 0,\n        totalPages: 0,\n        isLoading: true\n    };\n\n    containerFunctions = {\n        requestProductList: this.requestProductList.bind(this),\n        updateLoadStatus: this.updateLoadStatus.bind(this),\n        getIsNewCategory: this.getIsNewCategory.bind(this)\n    };\n\n    onError = this.onError.bind(this);\n\n    appendPage = this.appendPage.bind(this);\n\n    updateProductListItems = this.updateProductListItems.bind(this);\n\n    dataModelName = 'ProductListWidget';\n\n    onError(error) {\n        const { showNotification, updateNoMatch } = this.props;\n        showNotification('error', __('Error fetching Product List!'), error);\n        updateNoMatch(true);\n    }\n\n    getIsNewCategory() {\n        return true;\n    }\n\n    appendPage(data) {\n        const { showPager } = this.props;\n        const { pages } = this.state;\n        const {\n            products: {\n                items,\n                page_info: { current_page } = {}\n            } = {}\n        } = data;\n\n        if (showPager === 0) {\n            return;\n        }\n\n        this.setState({\n            pages: {\n                ...pages,\n                [current_page]: getIndexedProducts(items)\n            }\n        });\n    }\n\n    updateProductListItems(data) {\n        const { productsCount, productsPerPage } = this.props;\n        const {\n            products: {\n                items,\n                total_count: totalItems,\n                page_info: { current_page } = {}\n            } = {}\n        } = data;\n\n        const totalPages = Math.ceil(productsCount / productsPerPage);\n\n        this.setState({\n            isLoading: false,\n            totalItems,\n            totalPages,\n            pages: { [current_page]: getIndexedProducts(items) }\n        });\n    }\n\n    updateLoadStatus(isLoading) {\n        this.setState({ isLoading });\n    }\n\n    requestProductList(options) {\n        const { isNext } = options;\n\n        if (!isNext) {\n            this.updateLoadStatus(true);\n        }\n\n        this.fetchData(\n            [ProductListQuery.getQuery(options)],\n            isNext ? this.appendPage : this.updateProductListItems,\n            this.onError\n        );\n    }\n\n    adaptProps() {\n        const {\n            showPager,\n            productsCount,\n            productsPerPage,\n            conditionsEncoded: conditions\n        } = this.props;\n\n        return {\n            filter: { conditions },\n            pageSize: showPager ? productsPerPage : productsCount,\n            isPaginationEnabled: !!showPager\n        };\n    }\n\n    render() {\n        const adaptedProps = this.adaptProps();\n\n        return (\n            <ProductList\n              { ...this.props }\n              { ...this.state }\n              { ...adaptedProps }\n              { ...this.containerFunctions }\n              isInfiniteLoaderEnabled={ false }\n              numberOfPlaceholders={ 6 }\n              mix={ { block: 'ProductListWidget' } }\n              isWidget\n            />\n        );\n    }\n}\n\n/** @namespace Component/ProductListWidget/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListWidgetContainer);\n"]},"metadata":{},"sourceType":"module"}