{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/FieldForm/FieldForm.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport Field from \"/home/arturs/scandiweb/extension/src/component/Field\";\nimport Form from \"/home/arturs/scandiweb/extension/src/component/Form\";\nimport \"./FieldForm.style\";\n/** #namespace Component/FieldForm/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const FieldForm = Mosaic.middleware((_temp = _class = class FieldForm_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.renderField = function (fieldEntry) {\n      return /*#__PURE__*/_checkBEM(React, Field, Object.assign({}, _this.getDefaultValues(fieldEntry), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }));\n    };\n  }\n\n  onFormSuccess() {// TODO: implement\n  }\n\n  get fieldMap() {\n    return {// email: {\n      //     label: __('Email'),\n      //     validation: ['notEmpty']\n      // }\n    };\n  }\n\n  getDefaultValues([key, props]) {\n    const {\n      type = 'text',\n      onChange = function () {},\n      ...otherProps\n    } = props;\n    return { ...otherProps,\n      key,\n      name: key,\n      id: key,\n      type,\n      onChange\n    };\n  }\n\n  renderFields() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"FieldForm\",\n      elem: \"Fields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, Object.entries(this.fieldMap).map(this.renderField));\n  }\n\n  renderActions() {\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, Form, {\n      onSubmitSuccess: this.onFormSuccess,\n      mix: {\n        block: 'FieldForm'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, this.renderFields(), this.renderActions());\n  }\n\n}, _class.propTypes = {\n  isSubmitted: PropTypes.bool\n}, _class.defaultProps = {\n  isSubmitted: false\n}, _temp), \"Component/FieldForm/Component\");\nexport default FieldForm;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/FieldForm/FieldForm.component.js"],"names":["PropTypes","PureComponent","Field","Form","renderField","fieldEntry","getDefaultValues","onFormSuccess","fieldMap","key","props","type","onChange","otherProps","name","id","renderFields","Object","entries","map","renderActions","render","block","propTypes","isSubmitted","bool","defaultProps","FieldForm"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,KAAP;AACA,OAAOC,IAAP;AAEA;AAEA;;;;AACA,wGAA+BF,aAA/B,EAA6C;AAAA;AAAA;;AAAA;AAAA;;AAAA,SAuCzCG,WAvCyC,GAuC3B,UAACC,UAAD;AAAA,2CACT,KADS,oBACE,KAAI,CAACC,gBAAL,CAAsBD,UAAtB,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvC2B;AAAA;;AASzCE,EAAAA,aAAa,GAAG,CACZ;AACH;;AAEW,MAARC,QAAQ,GAAG;AACX,WAAO,CACH;AACA;AACA;AACA;AAJG,KAAP;AAMH;;AAEDF,EAAAA,gBAAgB,CAAC,CAACG,GAAD,EAAMC,KAAN,CAAD,EAAe;AAC3B,UAAM;AACFC,MAAAA,IAAI,GAAG,MADL;AAEFC,MAAAA,QAAQ,GAAG,YAAM,CAAE,CAFjB;AAGF,SAAGC;AAHD,QAIFH,KAJJ;AAMA,WAAO,EACH,GAAGG,UADA;AAEHJ,MAAAA,GAFG;AAGHK,MAAAA,IAAI,EAAEL,GAHH;AAIHM,MAAAA,EAAE,EAAEN,GAJD;AAKHE,MAAAA,IALG;AAMHC,MAAAA;AANG,KAAP;AAQH;;AAMDI,EAAAA,YAAY,GAAG;AACX;AAEM,MAAA,KAAK,EAAC,WAFZ;AAGM,MAAA,IAAI,EAAC,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKUC,MAAM,CAACC,OAAP,CAAe,KAAKV,QAApB,EAA8BW,GAA9B,CAAkC,KAAKf,WAAvC,CALV;AAQH;;AAEDgB,EAAAA,aAAa,GAAG;AACZ,WAAO,IAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,yCACK,IADL;AAEM,MAAA,eAAe,EAAG,KAAKd,aAF7B;AAGM,MAAA,GAAG,EAAG;AAAEe,QAAAA,KAAK,EAAE;AAAT,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKU,KAAKN,YAAL,EALV,EAMU,KAAKI,aAAL,EANV;AASH;;AApEwC,CAA7C,SACWG,SADX,GACuB;AACfC,EAAAA,WAAW,EAAExB,SAAS,CAACyB;AADR,CADvB,SAKWC,YALX,GAK0B;AAClBF,EAAAA,WAAW,EAAE;AADK,CAL1B;AAuEA,eAAeG,SAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Field from 'Component/Field';\nimport Form from 'Component/Form';\n\nimport './FieldForm.style';\n\n/** @namespace Component/FieldForm/Component */\nexport class FieldForm extends PureComponent {\n    static propTypes = {\n        isSubmitted: PropTypes.bool\n    };\n\n    static defaultProps = {\n        isSubmitted: false\n    };\n\n    onFormSuccess() {\n        // TODO: implement\n    }\n\n    get fieldMap() {\n        return {\n            // email: {\n            //     label: __('Email'),\n            //     validation: ['notEmpty']\n            // }\n        };\n    }\n\n    getDefaultValues([key, props]) {\n        const {\n            type = 'text',\n            onChange = () => {},\n            ...otherProps\n        } = props;\n\n        return {\n            ...otherProps,\n            key,\n            name: key,\n            id: key,\n            type,\n            onChange\n        };\n    }\n\n    renderField = (fieldEntry) => (\n        <Field { ...this.getDefaultValues(fieldEntry) } />\n    );\n\n    renderFields() {\n        return (\n            <div\n              block=\"FieldForm\"\n              elem=\"Fields\"\n            >\n                { Object.entries(this.fieldMap).map(this.renderField) }\n            </div>\n        );\n    }\n\n    renderActions() {\n        return null;\n    }\n\n    render() {\n        return (\n            <Form\n              onSubmitSuccess={ this.onFormSuccess }\n              mix={ { block: 'FieldForm' } }\n            >\n                { this.renderFields() }\n                { this.renderActions() }\n            </Form>\n        );\n    }\n}\n\nexport default FieldForm;\n"]},"metadata":{},"sourceType":"module"}