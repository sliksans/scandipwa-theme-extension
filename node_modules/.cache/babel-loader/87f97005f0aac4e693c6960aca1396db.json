{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Link/Link.container.js\";\n\n/* eslint-disable react/prop-types */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { appendWithStoreCode } from \"/home/arturs/scandiweb/scandipwa/src/util/Url\";\nimport Link from \"./Link.component\";\n/** #namespace Component/Link/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    baseLinkUrl: state.ConfigReducer.base_link_url || ''\n  };\n}, \"Component/Link/Container/mapStateToProps\");\n/** #namespace Component/Link/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const LinkContainer = Mosaic.middleware((_temp = _class = class LinkContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.containerProps = function () {\n      const {\n        block,\n        elem,\n        mods,\n        mix,\n        baseLinkUrl,\n        // remove this prop\n        dispatch,\n        // remove this prop\n        ...restProps\n      } = _this.props;\n      return { ...restProps,\n        to: _this.getTo(),\n        bemProps: {\n          block,\n          elem,\n          mods,\n          mix\n        }\n      };\n    };\n  }\n\n  getTo() {\n    const {\n      to: toProp\n    } = this.props; // fix null, undefined and empty links\n\n    const to = toProp || '/';\n\n    if (typeof to === 'string') {\n      // in case this URL is absolute, do not append store\n      if (/^https?:\\/\\//.test(to)) {\n        return to;\n      }\n\n      return appendWithStoreCode(to);\n    }\n\n    const pathname = to.pathname || '/';\n    return { ...to,\n      pathname: appendWithStoreCode(pathname)\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, Link, Object.assign({}, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  baseLinkUrl: PropTypes.string.isRequired,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n}, _temp), \"Component/Link/Container\");\n/** #namespace Component/Link/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {};\n}, \"Component/Link/Container/mapDispatchToProps\");\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Link/Link.container.js"],"names":["PropTypes","PureComponent","connect","appendWithStoreCode","Link","mapStateToProps","state","baseLinkUrl","ConfigReducer","base_link_url","containerProps","block","elem","mods","mix","dispatch","restProps","props","to","getTo","bemProps","toProp","test","pathname","render","propTypes","string","isRequired","oneOfType","object","mapDispatchToProps","LinkContainer"],"mappings":";;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,mBAAT;AAEA,OAAOC,IAAP;AAEA;;AACA,OAAO,MAAMC,eAAe,qBAAG,UAACC,KAAD;AAAA,SAAY;AACvCC,IAAAA,WAAW,EAAED,KAAK,CAACE,aAAN,CAAoBC,aAApB,IAAqC;AADX,GAAZ;AAAA,CAAH,6CAArB;AAIP;;;;AACA,gHAAmCR,aAAnC,EAAiD;AAAA;AAAA;;AAAA;AAAA;;AAAA,SAS7CS,cAT6C,GAS5B,YAAM;AACnB,YAAM;AACFC,QAAAA,KADE;AAEFC,QAAAA,IAFE;AAGFC,QAAAA,IAHE;AAIFC,QAAAA,GAJE;AAKFP,QAAAA,WALE;AAKW;AACbQ,QAAAA,QANE;AAMQ;AACV,WAAGC;AAPD,UAQF,KAAI,CAACC,KART;AAUA,aAAO,EACH,GAAGD,SADA;AAEHE,QAAAA,EAAE,EAAE,KAAI,CAACC,KAAL,EAFD;AAGHC,QAAAA,QAAQ,EAAE;AACNT,UAAAA,KADM;AAENC,UAAAA,IAFM;AAGNC,UAAAA,IAHM;AAINC,UAAAA;AAJM;AAHP,OAAP;AAUH,KA9B4C;AAAA;;AAgC7CK,EAAAA,KAAK,GAAG;AACJ,UAAM;AAAED,MAAAA,EAAE,EAAEG;AAAN,QAAiB,KAAKJ,KAA5B,CADI,CAEJ;;AACA,UAAMC,EAAE,GAAGG,MAAM,IAAI,GAArB;;AAEA,QAAI,OAAOH,EAAP,KAAc,QAAlB,EAA4B;AACxB;AACA,UAAI,eAAeI,IAAf,CAAoBJ,EAApB,CAAJ,EAA6B;AACzB,eAAOA,EAAP;AACH;;AAED,aAAOf,mBAAmB,CAACe,EAAD,CAA1B;AACH;;AAED,UAAMK,QAAQ,GAAGL,EAAE,CAACK,QAAH,IAAe,GAAhC;AAEA,WAAO,EACH,GAAGL,EADA;AAEHK,MAAAA,QAAQ,EAAEpB,mBAAmB,CAACoB,QAAD;AAF1B,KAAP;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,yCACK,IADL,oBAEW,KAAKd,cAAL,EAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH;;AA5D4C,CAAjD,SACWe,SADX,GACuB;AACflB,EAAAA,WAAW,EAAEP,SAAS,CAAC0B,MAAV,CAAiBC,UADf;AAEfT,EAAAA,EAAE,EAAElB,SAAS,CAAC4B,SAAV,CAAoB,CACpB5B,SAAS,CAAC0B,MADU,EAEpB1B,SAAS,CAAC6B,MAFU,CAApB,EAGDF;AALY,CADvB;AA+DA;AACA;;AACA,OAAO,MAAMG,kBAAkB,qBAAG,UAACf,QAAD;AAAA,SAAe,EAAf;AAAA,CAAH,gDAAxB;AAEP,eAAeb,OAAO,CAACG,eAAD,EAAkByB,kBAAlB,CAAP,CAA6CC,aAA7C,CAAf","sourcesContent":["/* eslint-disable react/prop-types */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport Link from './Link.component';\n\n/** @namespace Component/Link/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    baseLinkUrl: state.ConfigReducer.base_link_url || ''\n});\n\n/** @namespace Component/Link/Container */\nexport class LinkContainer extends PureComponent {\n    static propTypes = {\n        baseLinkUrl: PropTypes.string.isRequired,\n        to: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.object\n        ]).isRequired\n    };\n\n    containerProps = () => {\n        const {\n            block,\n            elem,\n            mods,\n            mix,\n            baseLinkUrl, // remove this prop\n            dispatch, // remove this prop\n            ...restProps\n        } = this.props;\n\n        return {\n            ...restProps,\n            to: this.getTo(),\n            bemProps: {\n                block,\n                elem,\n                mods,\n                mix\n            }\n        };\n    };\n\n    getTo() {\n        const { to: toProp } = this.props;\n        // fix null, undefined and empty links\n        const to = toProp || '/';\n\n        if (typeof to === 'string') {\n            // in case this URL is absolute, do not append store\n            if (/^https?:\\/\\//.test(to)) {\n                return to;\n            }\n\n            return appendWithStoreCode(to);\n        }\n\n        const pathname = to.pathname || '/';\n\n        return {\n            ...to,\n            pathname: appendWithStoreCode(pathname)\n        };\n    }\n\n    render() {\n        return (\n            <Link\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\n/** @namespace Component/Link/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkContainer);\n"]},"metadata":{},"sourceType":"module"}