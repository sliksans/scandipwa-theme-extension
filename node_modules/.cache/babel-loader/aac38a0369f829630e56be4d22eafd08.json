{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/CategoryProductList/CategoryProductList.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport ProductList from \"/home/arturs/scandiweb/extension/src/component/ProductList\";\nimport { updateLoadStatus } from \"/home/arturs/scandiweb/extension/src/store/ProductList/ProductList.action\";\nimport { FilterInputType } from \"/home/arturs/scandiweb/extension/src/type/ProductList\";\nimport \"./CategoryProductList.style\";\nexport const ProductListDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/extension/src/store/ProductList/ProductList.dispatcher\");\n/** #namespace Component/CategoryProductList/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    pages: state.ProductListReducer.pages,\n    isOffline: state.OfflineReducer.isOffline,\n    isLoading: state.ProductListReducer.isLoading,\n    isPageLoading: state.ProductListReducer.isPageLoading,\n    totalItems: state.ProductListReducer.totalItems,\n    totalPages: state.ProductListReducer.totalPages\n  };\n}, \"Component/CategoryProductList/Container/mapStateToProps\");\n/** #namespace Component/CategoryProductList/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    requestProductList: function (options) {\n      return ProductListDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.handleData(dispatch, options);\n      });\n    },\n    updateLoadStatus: function (isLoading) {\n      return dispatch(updateLoadStatus(isLoading));\n    }\n  };\n}, \"Component/CategoryProductList/Container/mapDispatchToProps\");\n/** #namespace Component/CategoryProductList/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CategoryProductListContainer = Mosaic.middleware((_temp = _class = class CategoryProductListContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.containerFunctions = {\n      requestProductList: this.requestProductList.bind(this)\n    };\n\n    this.containerProps = function () {\n      return {\n        isLoading: _this.getIsLoading(),\n        isPreventRequest: _this.getIsPreventRequest(),\n        mix: {\n          block: 'CategoryProductList',\n          mods: {\n            layout: _this.getLayout()\n          }\n        }\n      };\n    };\n  }\n\n  getIsLoading() {\n    const {\n      filter,\n      isLoading,\n      isMatchingListFilter,\n      isCurrentCategoryLoaded\n    } = this.props;\n    /**\n     * In case the wrong category was passed down to the product list,\n     * show the loading animation, it will soon change to proper category.\n     */\n\n    if (filter.categoryIds === -1) {\n      return true;\n    }\n    /**\n     * Do not request page, if category is not yet loaded\n     * without this command the products are requested twice:\n     * 1. Once with global default sorting\n     * 2. Once with category default sortingZ\n     */\n\n\n    if (!isCurrentCategoryLoaded) {\n      return true;\n    }\n\n    if (!navigator.onLine) {\n      return false;\n    } // if the filter expected matches the last requested filter\n\n\n    if (isMatchingListFilter) {\n      return false;\n    }\n\n    return isLoading;\n  }\n\n  getIsPreventRequest() {\n    const {\n      isMatchingListFilter,\n      isMatchingInfoFilter\n    } = this.props;\n    return isMatchingListFilter && isMatchingInfoFilter; // if filter match - prevent request\n  }\n\n  getLayout() {\n    const {\n      layout\n    } = this.props;\n    return layout;\n  }\n\n  requestProductList(options) {\n    const {\n      requestProductList\n    } = this.props;\n    requestProductList(options);\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, ProductList, Object.assign({}, this.props, this.containerFunctions, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  isMatchingListFilter: PropTypes.bool,\n  isMatchingInfoFilter: PropTypes.bool,\n  layout: PropTypes.string,\n  filter: FilterInputType,\n  requestProductList: PropTypes.func.isRequired,\n  isCurrentCategoryLoaded: PropTypes.bool\n}, _class.defaultProps = {\n  isMatchingListFilter: false,\n  isMatchingInfoFilter: false,\n  isCurrentCategoryLoaded: false,\n  filter: {},\n  layout: 'grid'\n}, _temp), \"Component/CategoryProductList/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryProductListContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/CategoryProductList/CategoryProductList.container.js"],"names":["PropTypes","PureComponent","connect","ProductList","updateLoadStatus","FilterInputType","ProductListDispatcher","mapStateToProps","state","pages","ProductListReducer","isOffline","OfflineReducer","isLoading","isPageLoading","totalItems","totalPages","mapDispatchToProps","dispatch","requestProductList","options","then","default","dispatcher","handleData","containerFunctions","bind","containerProps","getIsLoading","isPreventRequest","getIsPreventRequest","mix","block","mods","layout","getLayout","filter","isMatchingListFilter","isCurrentCategoryLoaded","props","categoryIds","navigator","onLine","isMatchingInfoFilter","render","propTypes","bool","isRequired","string","func","defaultProps","CategoryProductListContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport ProductList from 'Component/ProductList';\nimport { updateLoadStatus } from 'Store/ProductList/ProductList.action';\nimport { FilterInputType } from 'Type/ProductList';\n\nimport './CategoryProductList.style';\n\nexport const ProductListDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/ProductList/ProductList.dispatcher'\n);\n\n/** @namespace Component/CategoryProductList/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    pages: state.ProductListReducer.pages,\n    isOffline: state.OfflineReducer.isOffline,\n    isLoading: state.ProductListReducer.isLoading,\n    isPageLoading: state.ProductListReducer.isPageLoading,\n    totalItems: state.ProductListReducer.totalItems,\n    totalPages: state.ProductListReducer.totalPages\n});\n\n/** @namespace Component/CategoryProductList/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    requestProductList: (options) => ProductListDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.handleData(dispatch, options)\n    ),\n    updateLoadStatus: (isLoading) => dispatch(updateLoadStatus(isLoading))\n});\n\n/** @namespace Component/CategoryProductList/Container */\nexport class CategoryProductListContainer extends PureComponent {\n    static propTypes = {\n        isLoading: PropTypes.bool.isRequired,\n        isMatchingListFilter: PropTypes.bool,\n        isMatchingInfoFilter: PropTypes.bool,\n        layout: PropTypes.string,\n        filter: FilterInputType,\n        requestProductList: PropTypes.func.isRequired,\n        isCurrentCategoryLoaded: PropTypes.bool\n    };\n\n    static defaultProps = {\n        isMatchingListFilter: false,\n        isMatchingInfoFilter: false,\n        isCurrentCategoryLoaded: false,\n        filter: {},\n        layout: 'grid'\n    };\n\n    containerFunctions = {\n        requestProductList: this.requestProductList.bind(this)\n    };\n\n    getIsLoading() {\n        const {\n            filter,\n            isLoading,\n            isMatchingListFilter,\n            isCurrentCategoryLoaded\n        } = this.props;\n\n        /**\n         * In case the wrong category was passed down to the product list,\n         * show the loading animation, it will soon change to proper category.\n         */\n        if (filter.categoryIds === -1) {\n            return true;\n        }\n\n        /**\n         * Do not request page, if category is not yet loaded\n         * without this command the products are requested twice:\n         * 1. Once with global default sorting\n         * 2. Once with category default sortingZ\n         */\n        if (!isCurrentCategoryLoaded) {\n            return true;\n        }\n\n        if (!navigator.onLine) {\n            return false;\n        }\n\n        // if the filter expected matches the last requested filter\n        if (isMatchingListFilter) {\n            return false;\n        }\n\n        return isLoading;\n    }\n\n    getIsPreventRequest() {\n        const { isMatchingListFilter, isMatchingInfoFilter } = this.props;\n\n        return isMatchingListFilter && isMatchingInfoFilter; // if filter match - prevent request\n    }\n\n    getLayout() {\n        const { layout } = this.props;\n\n        return layout;\n    }\n\n    requestProductList(options) {\n        const { requestProductList } = this.props;\n        requestProductList(options);\n    }\n\n    containerProps = () => ({\n        isLoading: this.getIsLoading(),\n        isPreventRequest: this.getIsPreventRequest(),\n        mix: { block: 'CategoryProductList', mods: { layout: this.getLayout() } }\n    });\n\n    render() {\n        return (\n            <ProductList\n              { ...this.props }\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryProductListContainer);\n"]},"metadata":{},"sourceType":"module"}