{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/webpack-i18n-runtime/src/component/I18n/I18n.component.js\";\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport i18n from \"../../util/i18n\";\n/** #namespace RuntimeI18n/Component/I18n/Component/I18nComponent */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const I18nComponent = Mosaic.middleware((_temp = _class = class I18nComponent_ extends Mosaic.Extensible(PureComponent) {\n  // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n  constructor(props) {\n    super(props);\n    i18n.init(this.forceUpdate.bind(this));\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const currentLocale = i18n.getCurrentLocale(); // Do not render anything while the translation is loading\n\n    if (i18n.isLoading) {\n      return null;\n    } // Remount the application on locale change\n\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"LocalizationWrapper\",\n      elem: currentLocale,\n      key: currentLocale,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, children);\n  }\n\n}, _class.propTypes = {\n  children: PropTypes.node.isRequired\n}, _temp), \"RuntimeI18n/Component/I18n/Component/I18nComponent\");\nexport default I18nComponent;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/webpack-i18n-runtime/src/component/I18n/I18n.component.js"],"names":["PropTypes","PureComponent","i18n","constructor","props","init","forceUpdate","bind","render","children","currentLocale","getCurrentLocale","isLoading","propTypes","node","isRequired","I18nComponent"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,IAAP;AAEA;;;;AACA,gHAAmCD,aAAnC,EAAiD;AAK7C;AACAE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEAF,IAAAA,IAAI,CAACG,IAAL,CAAU,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAV;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKL,KAA1B;AACA,UAAMM,aAAa,GAAGR,IAAI,CAACS,gBAAL,EAAtB,CAFK,CAIL;;AACA,QAAIT,IAAI,CAACU,SAAT,EAAoB;AAChB,aAAO,IAAP;AACH,KAPI,CASL;;;AACA;AAEM,MAAA,KAAK,EAAC,qBAFZ;AAGM,MAAA,IAAI,EAAGF,aAHb;AAIM,MAAA,GAAG,EAAGA,aAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMUD,QANV;AASH;;AA/B4C,CAAjD,SACWI,SADX,GACuB;AACfJ,EAAAA,QAAQ,EAAET,SAAS,CAACc,IAAV,CAAeC;AADV,CADvB;AAkCA,eAAeC,aAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport i18n from '../../util/i18n';\n\n/** @namespace RuntimeI18n/Component/I18n/Component/I18nComponent */\nexport class I18nComponent extends PureComponent {\n    static propTypes = {\n        children: PropTypes.node.isRequired\n    };\n\n    // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n    constructor(props) {\n        super(props);\n\n        i18n.init(this.forceUpdate.bind(this));\n    }\n\n    render() {\n        const { children } = this.props;\n        const currentLocale = i18n.getCurrentLocale();\n\n        // Do not render anything while the translation is loading\n        if (i18n.isLoading) {\n            return null;\n        }\n\n        // Remount the application on locale change\n        return (\n            <div\n              block=\"LocalizationWrapper\"\n              elem={ currentLocale }\n              key={ currentLocale }\n            >\n                { children }\n            </div>\n        );\n    }\n}\n\nexport default I18nComponent;\n"]},"metadata":{},"sourceType":"module"}