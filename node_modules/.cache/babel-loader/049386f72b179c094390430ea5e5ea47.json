{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CheckoutPayments/CheckoutPayments.component.js\";\n\n/* eslint-disable no-console */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport CheckoutPayment from \"/home/arturs/scandiweb/scandipwa/src/component/CheckoutPayment\";\nimport Klarna from \"/home/arturs/scandiweb/scandipwa/src/component/Klarna\";\nimport NotSupportedPayment from \"/home/arturs/scandiweb/scandipwa/src/component/NotSupportedPayment\";\nimport { PurchaseOrder } from \"/home/arturs/scandiweb/scandipwa/src/component/PurchaseOrder/PurchaseOrder.component\";\nimport { BILLING_STEP } from \"/home/arturs/scandiweb/scandipwa/src/route/Checkout/Checkout.config\";\nimport { paymentMethodsType } from \"/home/arturs/scandiweb/scandipwa/src/type/Checkout\";\nimport { KLARNA, PURCHASE_ORDER } from \"./CheckoutPayments.config\";\nimport \"./CheckoutPayments.style\";\n/** #namespace Component/CheckoutPayments/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CheckoutPayments = Mosaic.middleware((_temp = _class = class CheckoutPayments_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.paymentRenderMap = {\n      [KLARNA]: this.renderKlarnaPayment.bind(this),\n      [PURCHASE_ORDER]: this.renderPurchaseOrderPayment.bind(this)\n    };\n    this.state = {\n      hasError: false\n    };\n\n    this.renderPayment = function (method) {\n      const {\n        selectPaymentMethod,\n        selectedPaymentCode\n      } = _this.props;\n      const {\n        code\n      } = method;\n      const isSelected = selectedPaymentCode === code;\n      return /*#__PURE__*/_checkBEM(React, CheckoutPayment, {\n        key: code,\n        isSelected: isSelected,\n        method: method,\n        onClick: selectPaymentMethod,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      });\n    };\n  }\n\n  componentDidCatch(error, info) {\n    const {\n      showError,\n      setOrderButtonEnableStatus\n    } = this.props;\n    console.groupCollapsed('Suppressed error log:');\n    console.error(error.toString(), info.toString());\n    console.groupEnd();\n    this.setState({\n      hasError: true\n    }, function () {\n      setOrderButtonEnableStatus(false);\n      showError(`${error} Please try again later`);\n    });\n  }\n\n  renderKlarnaPayment() {\n    const {\n      setOrderButtonEnableStatus\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, Klarna, {\n      setOrderButtonEnableStatus: setOrderButtonEnableStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }\n    });\n  }\n\n  renderPurchaseOrderPayment() {\n    return /*#__PURE__*/_checkBEM(React, PurchaseOrder, {\n      id: BILLING_STEP,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }\n    });\n  }\n\n  renderNotSupported() {\n    const {\n      setOrderButtonEnableStatus\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, NotSupportedPayment, {\n      disableButton: setOrderButtonEnableStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }\n    });\n  }\n\n  renderPayments() {\n    const {\n      paymentMethods\n    } = this.props;\n    return paymentMethods.map(this.renderPayment);\n  }\n\n  renderSelectedPayment() {\n    const {\n      selectedPaymentCode\n    } = this.props;\n    const render = this.paymentRenderMap[selectedPaymentCode];\n\n    if (!render) {\n      return null;\n    }\n\n    return render();\n  }\n\n  renderHeading() {\n    return /*#__PURE__*/_checkBEM(React, \"h2\", {\n      block: \"Checkout\",\n      elem: \"Heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, __('Select payment method'));\n  }\n\n  renderContent() {\n    const {\n      hasError\n    } = this.state;\n\n    if (hasError) {\n      return /*#__PURE__*/_checkBEM(React, \"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, __('The error occurred during initializing payment methods. Please try again later!'));\n    }\n\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, this.renderHeading(), /*#__PURE__*/_checkBEM(React, \"ul\", {\n      block: \"CheckoutPayments\",\n      elem: \"Methods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, this.renderPayments()), this.renderSelectedPayment());\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"CheckoutPayments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, this.renderContent());\n  }\n\n}, _class.propTypes = {\n  showError: PropTypes.func.isRequired,\n  selectPaymentMethod: PropTypes.func.isRequired,\n  paymentMethods: paymentMethodsType.isRequired,\n  setOrderButtonEnableStatus: PropTypes.func.isRequired,\n  selectedPaymentCode: PropTypes.string.isRequired,\n  billingAddress: PropTypes.shape({\n    city: PropTypes.string,\n    company: PropTypes.string,\n    country_id: PropTypes.string,\n    email: PropTypes.string,\n    firstname: PropTypes.string,\n    lastname: PropTypes.string,\n    postcode: PropTypes.string,\n    region_id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    region: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    street: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n    telephone: PropTypes.string\n  }).isRequired\n}, _temp), \"Component/CheckoutPayments/Component\");\nexport default CheckoutPayments;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CheckoutPayments/CheckoutPayments.component.js"],"names":["PropTypes","PureComponent","CheckoutPayment","Klarna","NotSupportedPayment","PurchaseOrder","BILLING_STEP","paymentMethodsType","KLARNA","PURCHASE_ORDER","paymentRenderMap","renderKlarnaPayment","bind","renderPurchaseOrderPayment","state","hasError","renderPayment","method","selectPaymentMethod","selectedPaymentCode","props","code","isSelected","componentDidCatch","error","info","showError","setOrderButtonEnableStatus","console","groupCollapsed","toString","groupEnd","setState","renderNotSupported","renderPayments","paymentMethods","map","renderSelectedPayment","render","renderHeading","__","renderContent","propTypes","func","isRequired","string","billingAddress","shape","city","company","country_id","email","firstname","lastname","postcode","region_id","oneOfType","number","region","object","street","array","telephone","CheckoutPayments"],"mappings":";;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,eAAP;AACA,OAAOC,MAAP;AACA,OAAOC,mBAAP;AACA,SAASC,aAAT;AACA,SAASC,YAAT;AACA,SAASC,kBAAT;AAEA,SAASC,MAAT,EAAiBC,cAAjB;AAEA;AAEA;;;;AACA,sHAAsCR,aAAtC,EAAoD;AAAA;AAAA;;AAAA;AAAA;AAAA,SA+BhDS,gBA/BgD,GA+B7B;AACf,OAACF,MAAD,GAAU,KAAKG,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CADK;AAEf,OAACH,cAAD,GAAkB,KAAKI,0BAAL,CAAgCD,IAAhC,CAAqC,IAArC;AAFH,KA/B6B;AAAA,SAoChDE,KApCgD,GAoCxC;AACJC,MAAAA,QAAQ,EAAE;AADN,KApCwC;;AAAA,SAsEhDC,aAtEgD,GAsEhC,UAACC,MAAD,EAAY;AACxB,YAAM;AACFC,QAAAA,mBADE;AAEFC,QAAAA;AAFE,UAGF,KAAI,CAACC,KAHT;AAKA,YAAM;AAAEC,QAAAA;AAAF,UAAWJ,MAAjB;AACA,YAAMK,UAAU,GAAGH,mBAAmB,KAAKE,IAA3C;AAEA,2CACK,eADL;AAEM,QAAA,GAAG,EAAGA,IAFZ;AAGM,QAAA,UAAU,EAAGC,UAHnB;AAIM,QAAA,MAAM,EAAGL,MAJf;AAKM,QAAA,OAAO,EAAGC,mBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQH,KAvF+C;AAAA;;AAwChDK,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,IAAR,EAAc;AAC3B,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA4C,KAAKP,KAAvD;AAEAQ,IAAAA,OAAO,CAACC,cAAR,CAAuB,uBAAvB;AACAD,IAAAA,OAAO,CAACJ,KAAR,CAAcA,KAAK,CAACM,QAAN,EAAd,EAAgCL,IAAI,CAACK,QAAL,EAAhC;AACAF,IAAAA,OAAO,CAACG,QAAR;AAEA,SAAKC,QAAL,CACI;AAAEjB,MAAAA,QAAQ,EAAE;AAAZ,KADJ,EAEI,YAAM;AACFY,MAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACAD,MAAAA,SAAS,CAAE,GAAEF,KAAM,yBAAV,CAAT;AACH,KALL;AAOH;;AAEDb,EAAAA,mBAAmB,GAAG;AAClB,UAAM;AAAEgB,MAAAA;AAAF,QAAiC,KAAKP,KAA5C;AACA,yCAAQ,MAAR;AAAe,MAAA,0BAA0B,EAAGO,0BAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AAEDd,EAAAA,0BAA0B,GAAG;AACzB,yCAAQ,aAAR;AAAsB,MAAA,EAAE,EAAGP,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AAED2B,EAAAA,kBAAkB,GAAG;AACjB,UAAM;AAAEN,MAAAA;AAAF,QAAiC,KAAKP,KAA5C;AACA,yCAAQ,mBAAR;AAA4B,MAAA,aAAa,EAAGO,0BAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AAqBDO,EAAAA,cAAc,GAAG;AACb,UAAM;AAAEC,MAAAA;AAAF,QAAqB,KAAKf,KAAhC;AACA,WAAOe,cAAc,CAACC,GAAf,CAAmB,KAAKpB,aAAxB,CAAP;AACH;;AAEDqB,EAAAA,qBAAqB,GAAG;AACpB,UAAM;AAAElB,MAAAA;AAAF,QAA0B,KAAKC,KAArC;AACA,UAAMkB,MAAM,GAAG,KAAK5B,gBAAL,CAAsBS,mBAAtB,CAAf;;AACA,QAAI,CAACmB,MAAL,EAAa;AACT,aAAO,IAAP;AACH;;AAED,WAAOA,MAAM,EAAb;AACH;;AAEDC,EAAAA,aAAa,GAAG;AACZ;AACQ,MAAA,KAAK,EAAC,UADd;AACyB,MAAA,IAAI,EAAC,SAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEUC,EAAE,CAAC,uBAAD,CAFZ;AAKH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,UAAM;AAAE1B,MAAAA;AAAF,QAAe,KAAKD,KAA1B;;AAEA,QAAIC,QAAJ,EAAc;AACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACSyB,EAAE,CAAC,iFAAD,CADX;AAGH;;AAED,+DAEU,KAAKD,aAAL,EAFV;AAGY,MAAA,KAAK,EAAC,kBAHlB;AAGqC,MAAA,IAAI,EAAC,SAH1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIc,KAAKL,cAAL,EAJd,GAMU,KAAKG,qBAAL,EANV;AASH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACS,MAAA,KAAK,EAAC,kBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEU,KAAKG,aAAL,EAFV;AAKH;;AA1I+C,CAApD,SACWC,SADX,GACuB;AACfhB,EAAAA,SAAS,EAAE1B,SAAS,CAAC2C,IAAV,CAAeC,UADX;AAEf1B,EAAAA,mBAAmB,EAAElB,SAAS,CAAC2C,IAAV,CAAeC,UAFrB;AAGfT,EAAAA,cAAc,EAAE5B,kBAAkB,CAACqC,UAHpB;AAIfjB,EAAAA,0BAA0B,EAAE3B,SAAS,CAAC2C,IAAV,CAAeC,UAJ5B;AAKfzB,EAAAA,mBAAmB,EAAEnB,SAAS,CAAC6C,MAAV,CAAiBD,UALvB;AAMfE,EAAAA,cAAc,EAAE9C,SAAS,CAAC+C,KAAV,CAAgB;AAC5BC,IAAAA,IAAI,EAAEhD,SAAS,CAAC6C,MADY;AAE5BI,IAAAA,OAAO,EAAEjD,SAAS,CAAC6C,MAFS;AAG5BK,IAAAA,UAAU,EAAElD,SAAS,CAAC6C,MAHM;AAI5BM,IAAAA,KAAK,EAAEnD,SAAS,CAAC6C,MAJW;AAK5BO,IAAAA,SAAS,EAAEpD,SAAS,CAAC6C,MALO;AAM5BQ,IAAAA,QAAQ,EAAErD,SAAS,CAAC6C,MANQ;AAO5BS,IAAAA,QAAQ,EAAEtD,SAAS,CAAC6C,MAPQ;AAQ5BU,IAAAA,SAAS,EAAEvD,SAAS,CAACwD,SAAV,CAAoB,CAC3BxD,SAAS,CAACyD,MADiB,EAE3BzD,SAAS,CAAC6C,MAFiB,CAApB,CARiB;AAY5Ba,IAAAA,MAAM,EAAE1D,SAAS,CAACwD,SAAV,CAAoB,CACxBxD,SAAS,CAAC2D,MADc,EAExB3D,SAAS,CAAC6C,MAFc,CAApB,CAZoB;AAgB5Be,IAAAA,MAAM,EAAE5D,SAAS,CAACwD,SAAV,CAAoB,CACxBxD,SAAS,CAAC6C,MADc,EAExB7C,SAAS,CAAC6D,KAFc,CAApB,CAhBoB;AAoB5BC,IAAAA,SAAS,EAAE9D,SAAS,CAAC6C;AApBO,GAAhB,EAqBbD;AA3BY,CADvB;AA6IA,eAAemB,gBAAf","sourcesContent":["/* eslint-disable no-console */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CheckoutPayment from 'Component/CheckoutPayment';\nimport Klarna from 'Component/Klarna';\nimport NotSupportedPayment from 'Component/NotSupportedPayment';\nimport { PurchaseOrder } from 'Component/PurchaseOrder/PurchaseOrder.component';\nimport { BILLING_STEP } from 'Route/Checkout/Checkout.config';\nimport { paymentMethodsType } from 'Type/Checkout';\n\nimport { KLARNA, PURCHASE_ORDER } from './CheckoutPayments.config';\n\nimport './CheckoutPayments.style';\n\n/** @namespace Component/CheckoutPayments/Component */\nexport class CheckoutPayments extends PureComponent {\n    static propTypes = {\n        showError: PropTypes.func.isRequired,\n        selectPaymentMethod: PropTypes.func.isRequired,\n        paymentMethods: paymentMethodsType.isRequired,\n        setOrderButtonEnableStatus: PropTypes.func.isRequired,\n        selectedPaymentCode: PropTypes.string.isRequired,\n        billingAddress: PropTypes.shape({\n            city: PropTypes.string,\n            company: PropTypes.string,\n            country_id: PropTypes.string,\n            email: PropTypes.string,\n            firstname: PropTypes.string,\n            lastname: PropTypes.string,\n            postcode: PropTypes.string,\n            region_id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string\n            ]),\n            region: PropTypes.oneOfType([\n                PropTypes.object,\n                PropTypes.string\n            ]),\n            street: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.array\n            ]),\n            telephone: PropTypes.string\n        }).isRequired\n    };\n\n    paymentRenderMap = {\n        [KLARNA]: this.renderKlarnaPayment.bind(this),\n        [PURCHASE_ORDER]: this.renderPurchaseOrderPayment.bind(this)\n    };\n\n    state = {\n        hasError: false\n    };\n\n    componentDidCatch(error, info) {\n        const { showError, setOrderButtonEnableStatus } = this.props;\n\n        console.groupCollapsed('Suppressed error log:');\n        console.error(error.toString(), info.toString());\n        console.groupEnd();\n\n        this.setState(\n            { hasError: true },\n            () => {\n                setOrderButtonEnableStatus(false);\n                showError(`${error} Please try again later`);\n            }\n        );\n    }\n\n    renderKlarnaPayment() {\n        const { setOrderButtonEnableStatus } = this.props;\n        return <Klarna setOrderButtonEnableStatus={ setOrderButtonEnableStatus } />;\n    }\n\n    renderPurchaseOrderPayment() {\n        return <PurchaseOrder id={ BILLING_STEP } />;\n    }\n\n    renderNotSupported() {\n        const { setOrderButtonEnableStatus } = this.props;\n        return <NotSupportedPayment disableButton={ setOrderButtonEnableStatus } />;\n    }\n\n    renderPayment = (method) => {\n        const {\n            selectPaymentMethod,\n            selectedPaymentCode\n        } = this.props;\n\n        const { code } = method;\n        const isSelected = selectedPaymentCode === code;\n\n        return (\n            <CheckoutPayment\n              key={ code }\n              isSelected={ isSelected }\n              method={ method }\n              onClick={ selectPaymentMethod }\n            />\n        );\n    };\n\n    renderPayments() {\n        const { paymentMethods } = this.props;\n        return paymentMethods.map(this.renderPayment);\n    }\n\n    renderSelectedPayment() {\n        const { selectedPaymentCode } = this.props;\n        const render = this.paymentRenderMap[selectedPaymentCode];\n        if (!render) {\n            return null;\n        }\n\n        return render();\n    }\n\n    renderHeading() {\n        return (\n            <h2 block=\"Checkout\" elem=\"Heading\">\n                { __('Select payment method') }\n            </h2>\n        );\n    }\n\n    renderContent() {\n        const { hasError } = this.state;\n\n        if (hasError) {\n            return (\n                <p>{ __('The error occurred during initializing payment methods. Please try again later!') }</p>\n            );\n        }\n\n        return (\n            <>\n                { this.renderHeading() }\n                <ul block=\"CheckoutPayments\" elem=\"Methods\">\n                    { this.renderPayments() }\n                </ul>\n                { this.renderSelectedPayment() }\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <div block=\"CheckoutPayments\">\n                { this.renderContent() }\n            </div>\n        );\n    }\n}\n\nexport default CheckoutPayments;\n"]},"metadata":{},"sourceType":"module"}