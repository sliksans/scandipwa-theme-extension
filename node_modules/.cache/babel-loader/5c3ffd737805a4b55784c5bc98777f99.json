{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/MyAccountOverlay/MyAccountOverlay.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Loader from \"/home/arturs/scandiweb/extension/src/component/Loader\";\nimport MyAccountConfirmEmail from \"/home/arturs/scandiweb/extension/src/component/MyAccountConfirmEmail\";\nimport MyAccountCreateAccount from \"/home/arturs/scandiweb/extension/src/component/MyAccountCreateAccount\";\nimport MyAccountForgotPassword from \"/home/arturs/scandiweb/extension/src/component/MyAccountForgotPassword\";\nimport MyAccountForgotPasswordSuccess from \"/home/arturs/scandiweb/extension/src/component/MyAccountForgotPasswordSuccess\";\nimport MyAccountSignIn from \"/home/arturs/scandiweb/extension/src/component/MyAccountSignIn\";\nimport Overlay from \"/home/arturs/scandiweb/extension/src/component/Overlay\";\nimport { signInStateType } from \"/home/arturs/scandiweb/extension/src/type/Account\";\nimport { DeviceType } from \"/home/arturs/scandiweb/extension/src/type/Device\";\nimport { CUSTOMER_ACCOUNT_OVERLAY_KEY, STATE_CONFIRM_EMAIL, STATE_CREATE_ACCOUNT, STATE_FORGOT_PASSWORD, STATE_FORGOT_PASSWORD_SUCCESS, STATE_LOGGED_IN, STATE_SIGN_IN } from \"./MyAccountOverlay.config\";\nimport \"./MyAccountOverlay.style\";\n/** #namespace Component/MyAccountOverlay/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountOverlay = Mosaic.middleware((_temp = _class = class MyAccountOverlay_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.renderMap = {\n      [STATE_SIGN_IN]: {\n        render: function () {\n          return _this.renderSignIn();\n        },\n        title: __('Sign in to your account')\n      },\n      [STATE_FORGOT_PASSWORD]: {\n        render: function () {\n          return _this.renderForgotPassword();\n        },\n        title: __('Get password link')\n      },\n      [STATE_FORGOT_PASSWORD_SUCCESS]: {\n        render: function () {\n          return _this.renderForgotPasswordSuccess();\n        }\n      },\n      [STATE_CREATE_ACCOUNT]: {\n        render: function () {\n          return _this.renderCreateAccount();\n        },\n        title: __('Create new account')\n      },\n      [STATE_LOGGED_IN]: {\n        render: function () {}\n      },\n      [STATE_CONFIRM_EMAIL]: {\n        render: function () {\n          return _this.renderConfirmEmail();\n        },\n        title: __('Confirm the email')\n      }\n    };\n  }\n\n  renderMyAccount() {\n    const {\n      state\n    } = this.props;\n    const {\n      render,\n      title\n    } = this.renderMap[state];\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"MyAccountOverlay\",\n      elem: \"Action\",\n      mods: {\n        state\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"p\", {\n      block: \"MyAccountOverlay\",\n      elem: \"Heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, title), render());\n  }\n\n  renderConfirmEmail() {\n    const {\n      state,\n      handleSignIn\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountConfirmEmail, {\n      state: state,\n      handleSignIn: handleSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderForgotPassword() {\n    const {\n      state,\n      onFormError,\n      handleSignIn,\n      handleCreateAccount,\n      setSignInState,\n      setLoadingState,\n      isCheckout\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountForgotPassword, {\n      state: state,\n      onFormError: onFormError,\n      handleSignIn: handleSignIn,\n      handleCreateAccount: handleCreateAccount,\n      setLoadingState: setLoadingState,\n      setSignInState: setSignInState,\n      isCheckout: isCheckout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderForgotPasswordSuccess() {\n    const {\n      state,\n      handleSignIn\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountForgotPasswordSuccess, {\n      state: state,\n      handleSignIn: handleSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderCreateAccount(isLandingPage = false) {\n    const {\n      state,\n      handleSignIn,\n      setSignInState,\n      setLoadingState,\n      onSignIn\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountCreateAccount, {\n      state: state,\n      handleSignIn: handleSignIn,\n      setLoadingState: setLoadingState,\n      setSignInState: setSignInState,\n      onSignIn: onSignIn,\n      isLandingPage: isLandingPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderSignIn() {\n    const {\n      state,\n      onFormError,\n      handleForgotPassword,\n      handleCreateAccount,\n      isCheckout,\n      setLoadingState,\n      onSignIn\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountSignIn, {\n      state: state,\n      onFormError: onFormError,\n      handleForgotPassword: handleForgotPassword,\n      handleCreateAccount: handleCreateAccount,\n      isCheckout: isCheckout,\n      setLoadingState: setLoadingState,\n      onSignIn: onSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    const {\n      isLoading,\n      onVisible,\n      isCheckout,\n      device\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, Overlay, {\n      id: CUSTOMER_ACCOUNT_OVERLAY_KEY,\n      mix: {\n        block: 'MyAccountOverlay'\n      },\n      onVisible: onVisible,\n      isStatic: !isCheckout && device.isMobile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, Loader, {\n      isLoading: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }), this.renderMyAccount());\n  }\n\n}, _class.propTypes = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  isOverlayVisible: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  state: signInStateType.isRequired,\n  setSignInState: PropTypes.func.isRequired,\n  setLoadingState: PropTypes.func.isRequired,\n  onVisible: PropTypes.func.isRequired,\n  onFormError: PropTypes.func.isRequired,\n  handleForgotPassword: PropTypes.func.isRequired,\n  handleSignIn: PropTypes.func.isRequired,\n  handleCreateAccount: PropTypes.func.isRequired,\n  isCheckout: PropTypes.bool,\n  device: DeviceType.isRequired,\n  onSignIn: PropTypes.func.isRequired\n}, _class.defaultProps = {\n  isCheckout: false\n}, _temp), \"Component/MyAccountOverlay/Component\");\nexport default _c = withRouter(MyAccountOverlay);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/MyAccountOverlay/MyAccountOverlay.component.js"],"names":["PropTypes","PureComponent","withRouter","Loader","MyAccountConfirmEmail","MyAccountCreateAccount","MyAccountForgotPassword","MyAccountForgotPasswordSuccess","MyAccountSignIn","Overlay","signInStateType","DeviceType","CUSTOMER_ACCOUNT_OVERLAY_KEY","STATE_CONFIRM_EMAIL","STATE_CREATE_ACCOUNT","STATE_FORGOT_PASSWORD","STATE_FORGOT_PASSWORD_SUCCESS","STATE_LOGGED_IN","STATE_SIGN_IN","renderMap","render","renderSignIn","title","__","renderForgotPassword","renderForgotPasswordSuccess","renderCreateAccount","renderConfirmEmail","renderMyAccount","state","props","handleSignIn","onFormError","handleCreateAccount","setSignInState","setLoadingState","isCheckout","isLandingPage","onSignIn","handleForgotPassword","isLoading","onVisible","device","block","isMobile","propTypes","isOverlayVisible","bool","isRequired","func","defaultProps","MyAccountOverlay"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Loader from 'Component/Loader';\nimport MyAccountConfirmEmail from 'Component/MyAccountConfirmEmail';\nimport MyAccountCreateAccount from 'Component/MyAccountCreateAccount';\nimport MyAccountForgotPassword from 'Component/MyAccountForgotPassword';\nimport MyAccountForgotPasswordSuccess from 'Component/MyAccountForgotPasswordSuccess';\nimport MyAccountSignIn from 'Component/MyAccountSignIn';\nimport Overlay from 'Component/Overlay';\nimport { signInStateType } from 'Type/Account';\nimport { DeviceType } from 'Type/Device';\n\nimport {\n    CUSTOMER_ACCOUNT_OVERLAY_KEY,\n    STATE_CONFIRM_EMAIL,\n    STATE_CREATE_ACCOUNT,\n    STATE_FORGOT_PASSWORD,\n    STATE_FORGOT_PASSWORD_SUCCESS,\n    STATE_LOGGED_IN,\n    STATE_SIGN_IN\n} from './MyAccountOverlay.config';\n\nimport './MyAccountOverlay.style';\n\n/** @namespace Component/MyAccountOverlay/Component */\nexport class MyAccountOverlay extends PureComponent {\n    static propTypes = {\n        // eslint-disable-next-line react/no-unused-prop-types\n        isOverlayVisible: PropTypes.bool.isRequired,\n        isLoading: PropTypes.bool.isRequired,\n        state: signInStateType.isRequired,\n        setSignInState: PropTypes.func.isRequired,\n        setLoadingState: PropTypes.func.isRequired,\n        onVisible: PropTypes.func.isRequired,\n        onFormError: PropTypes.func.isRequired,\n        handleForgotPassword: PropTypes.func.isRequired,\n        handleSignIn: PropTypes.func.isRequired,\n        handleCreateAccount: PropTypes.func.isRequired,\n        isCheckout: PropTypes.bool,\n        device: DeviceType.isRequired,\n        onSignIn: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        isCheckout: false\n    };\n\n    renderMap = {\n        [STATE_SIGN_IN]: {\n            render: () => this.renderSignIn(),\n            title: __('Sign in to your account')\n        },\n        [STATE_FORGOT_PASSWORD]: {\n            render: () => this.renderForgotPassword(),\n            title: __('Get password link')\n        },\n        [STATE_FORGOT_PASSWORD_SUCCESS]: {\n            render: () => this.renderForgotPasswordSuccess()\n        },\n        [STATE_CREATE_ACCOUNT]: {\n            render: () => this.renderCreateAccount(),\n            title: __('Create new account')\n        },\n        [STATE_LOGGED_IN]: {\n            render: () => {}\n        },\n        [STATE_CONFIRM_EMAIL]: {\n            render: () => this.renderConfirmEmail(),\n            title: __('Confirm the email')\n        }\n    };\n\n    renderMyAccount() {\n        const { state } = this.props;\n        const { render, title } = this.renderMap[state];\n\n        return (\n            <div block=\"MyAccountOverlay\" elem=\"Action\" mods={ { state } }>\n                <p block=\"MyAccountOverlay\" elem=\"Heading\">{ title }</p>\n                { render() }\n            </div>\n        );\n    }\n\n    renderConfirmEmail() {\n        const { state, handleSignIn } = this.props;\n\n        return (\n            <MyAccountConfirmEmail\n              state={ state }\n              handleSignIn={ handleSignIn }\n            />\n        );\n    }\n\n    renderForgotPassword() {\n        const {\n            state,\n            onFormError,\n            handleSignIn,\n            handleCreateAccount,\n            setSignInState,\n            setLoadingState,\n            isCheckout\n        } = this.props;\n\n        return (\n            <MyAccountForgotPassword\n              state={ state }\n              onFormError={ onFormError }\n              handleSignIn={ handleSignIn }\n              handleCreateAccount={ handleCreateAccount }\n              setLoadingState={ setLoadingState }\n              setSignInState={ setSignInState }\n              isCheckout={ isCheckout }\n            />\n        );\n    }\n\n    renderForgotPasswordSuccess() {\n        const { state, handleSignIn } = this.props;\n\n        return (\n            <MyAccountForgotPasswordSuccess\n              state={ state }\n              handleSignIn={ handleSignIn }\n            />\n        );\n    }\n\n    renderCreateAccount(isLandingPage = false) {\n        const {\n            state,\n            handleSignIn,\n            setSignInState,\n            setLoadingState,\n            onSignIn\n        } = this.props;\n\n        return (\n            <MyAccountCreateAccount\n              state={ state }\n              handleSignIn={ handleSignIn }\n              setLoadingState={ setLoadingState }\n              setSignInState={ setSignInState }\n              onSignIn={ onSignIn }\n              isLandingPage={ isLandingPage }\n            />\n        );\n    }\n\n    renderSignIn() {\n        const {\n            state,\n            onFormError,\n            handleForgotPassword,\n            handleCreateAccount,\n            isCheckout,\n            setLoadingState,\n            onSignIn\n        } = this.props;\n\n        return (\n            <MyAccountSignIn\n              state={ state }\n              onFormError={ onFormError }\n              handleForgotPassword={ handleForgotPassword }\n              handleCreateAccount={ handleCreateAccount }\n              isCheckout={ isCheckout }\n              setLoadingState={ setLoadingState }\n              onSignIn={ onSignIn }\n            />\n        );\n    }\n\n    render() {\n        const {\n            isLoading,\n            onVisible,\n            isCheckout,\n            device\n        } = this.props;\n\n        return (\n            <Overlay\n              id={ CUSTOMER_ACCOUNT_OVERLAY_KEY }\n              mix={ { block: 'MyAccountOverlay' } }\n              onVisible={ onVisible }\n              isStatic={ !isCheckout && device.isMobile }\n            >\n                <Loader isLoading={ isLoading } />\n                { this.renderMyAccount() }\n            </Overlay>\n        );\n    }\n}\n\nexport default withRouter(\n    MyAccountOverlay\n);\n"]},"metadata":{},"sourceType":"module"}