{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/NewsletterSubscription/NewsletterSubscription.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { showNotification } from \"/home/arturs/scandiweb/extension/src/store/Notification/Notification.action\";\nimport NewsletterSubscription from \"./NewsletterSubscription.component\";\nexport const NewsletterSubscriptionDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/extension/src/store/NewsletterSubscription/NewsletterSubscription.dispatcher\");\n/** #namespace Component/NewsletterSubscribtion/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    allowGuestSubscribe: state.ConfigReducer.newsletter_subscription_allow_guest_subscribe,\n    isSignedIn: state.MyAccountReducer.isSignedIn\n  };\n}, \"Component/NewsletterSubscribtion/Container/mapStateToProps\");\n/** #namespace Component/NewsletterSubscription/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    subscribeToNewsletter: function (email) {\n      return NewsletterSubscriptionDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.subscribeToNewsletter(dispatch, email);\n      });\n    },\n    showErrorNotification: function (message) {\n      return dispatch(showNotification('error', message));\n    }\n  };\n}, \"Component/NewsletterSubscription/Container/mapDispatchToProps\");\n/** #namespace Component/NewsletterSubscription/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const NewsletterSubscriptionContainer = Mosaic.middleware((_temp = _class = class NewsletterSubscriptionContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.containerFunctions = {\n      onFormSubmit: this.onFormSubmit.bind(this)\n    };\n    this.state = {\n      isLoading: false\n    };\n    this.onFormSubmitDone = this.onFormSubmitDone.bind(this);\n  }\n\n  onFormSubmit(fields) {\n    const {\n      subscribeToNewsletter,\n      allowGuestSubscribe,\n      isSignedIn,\n      showErrorNotification\n    } = this.props;\n    const {\n      newsletterEmail: email\n    } = fields;\n\n    if (!allowGuestSubscribe && !isSignedIn) {\n      showErrorNotification(__('Guests can not subscribe to the newsletter. You must create an account or login to subscribe.'));\n      return;\n    }\n\n    this.setState({\n      isLoading: true\n    });\n    subscribeToNewsletter(email).then(this.onFormSubmitDone).catch(this.onFormSubmitDone);\n  }\n\n  onFormSubmitDone() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, NewsletterSubscription, Object.assign({}, this.props, this.state, this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  subscribeToNewsletter: PropTypes.func.isRequired,\n  showErrorNotification: PropTypes.func.isRequired,\n  allowGuestSubscribe: PropTypes.bool.isRequired,\n  isSignedIn: PropTypes.bool.isRequired\n}, _temp), \"Component/NewsletterSubscription/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsletterSubscriptionContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/NewsletterSubscription/NewsletterSubscription.container.js"],"names":["PropTypes","PureComponent","connect","showNotification","NewsletterSubscription","NewsletterSubscriptionDispatcher","mapStateToProps","state","allowGuestSubscribe","ConfigReducer","newsletter_subscription_allow_guest_subscribe","isSignedIn","MyAccountReducer","mapDispatchToProps","dispatch","subscribeToNewsletter","email","then","default","dispatcher","showErrorNotification","message","containerFunctions","onFormSubmit","bind","isLoading","onFormSubmitDone","fields","props","newsletterEmail","__","setState","catch","render","propTypes","func","isRequired","bool","NewsletterSubscriptionContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { showNotification } from 'Store/Notification/Notification.action';\n\nimport NewsletterSubscription from './NewsletterSubscription.component';\n\nexport const NewsletterSubscriptionDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/NewsletterSubscription/NewsletterSubscription.dispatcher'\n);\n\n/** @namespace Component/NewsletterSubscribtion/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    allowGuestSubscribe: state.ConfigReducer.newsletter_subscription_allow_guest_subscribe,\n    isSignedIn: state.MyAccountReducer.isSignedIn\n});\n\n/** @namespace Component/NewsletterSubscription/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    subscribeToNewsletter: (email) => NewsletterSubscriptionDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.subscribeToNewsletter(dispatch, email)\n    ),\n    showErrorNotification: (message) => dispatch(showNotification('error', message))\n});\n\n/** @namespace Component/NewsletterSubscription/Container */\nexport class NewsletterSubscriptionContainer extends PureComponent {\n    static propTypes = {\n        subscribeToNewsletter: PropTypes.func.isRequired,\n        showErrorNotification: PropTypes.func.isRequired,\n        allowGuestSubscribe: PropTypes.bool.isRequired,\n        isSignedIn: PropTypes.bool.isRequired\n    };\n\n    containerFunctions = {\n        onFormSubmit: this.onFormSubmit.bind(this)\n    };\n\n    state = {\n        isLoading: false\n    };\n\n    onFormSubmitDone = this.onFormSubmitDone.bind(this);\n\n    onFormSubmit(fields) {\n        const {\n            subscribeToNewsletter,\n            allowGuestSubscribe,\n            isSignedIn,\n            showErrorNotification\n        } = this.props;\n        const { newsletterEmail: email } = fields;\n\n        if (!allowGuestSubscribe && !isSignedIn) {\n            showErrorNotification(\n                __('Guests can not subscribe to the newsletter. You must create an account or login to subscribe.')\n            );\n\n            return;\n        }\n\n        this.setState({ isLoading: true });\n\n        subscribeToNewsletter(email)\n            .then(this.onFormSubmitDone)\n            .catch(this.onFormSubmitDone);\n    }\n\n    onFormSubmitDone() {\n        this.setState({ isLoading: false });\n    }\n\n    render() {\n        return (\n            <NewsletterSubscription\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(NewsletterSubscriptionContainer);\n"]},"metadata":{},"sourceType":"module"}