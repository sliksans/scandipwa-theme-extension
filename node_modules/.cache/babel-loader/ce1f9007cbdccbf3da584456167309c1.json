{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CategoryPagination/CategoryPagination.component.js\";\n\n/* eslint-disable fp/no-let, fp/no-loops */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport CategoryPaginationLink from \"/home/arturs/scandiweb/scandipwa/src/component/CategoryPaginationLink\";\nimport TextPlaceholder from \"/home/arturs/scandiweb/scandipwa/src/component/TextPlaceholder\";\nimport \"./CategoryPagination.style\";\n/** #namespace Component/CategoryPagination/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CategoryPagination = Mosaic.middleware((_temp = _class = class CategoryPagination_ extends Mosaic.Extensible(PureComponent) {\n  renderPreviousPageLink() {\n    const {\n      anchorTextPrevious,\n      currentPage\n    } = this.props;\n\n    if (currentPage <= 1) {\n      return /*#__PURE__*/_checkBEM(React, \"li\", {\n        block: \"CategoryPagination\",\n        elem: \"ListItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return this.renderPageLink(currentPage - 1, __('Previous page'), anchorTextPrevious || this.renderPageIcon());\n  }\n\n  renderPageLinks() {\n    const {\n      totalPages,\n      paginationFrame,\n      paginationFrameSkip,\n      currentPage\n    } = this.props;\n    let pages = [];\n    let i; // Render next pagination links\n\n    for (i = currentPage; i <= currentPage + paginationFrame; i++) {\n      if (i <= totalPages && pages.length <= paginationFrameSkip) {\n        pages.push(this.renderPageLink(i, __('Page %s', i), i.toString(), i === currentPage));\n      }\n    } // Render previous pagination links if necessary\n\n\n    for (i = 1; i < currentPage; i++) {\n      if (pages.length < paginationFrame) {\n        const id = currentPage - i;\n        const pageData = this.renderPageLink(id, __('Page %s', id), id.toString());\n        pages = [pageData, ...pages];\n      }\n    } // Edge case for rendering correct count of next links when current page is 1\n\n\n    if (currentPage === 1 && pages.length < totalPages) {\n      for (i = pages.length + 1; i <= paginationFrame; i++) {\n        pages.push(this.renderPageLink(i, __('Page %s', i), i.toString()));\n      }\n    }\n\n    return pages;\n  }\n\n  renderPageIcon(isNext = false) {\n    return /*#__PURE__*/_checkBEM(React, \"span\", {\n      block: \"CategoryPagination\",\n      elem: \"Icon\",\n      mods: {\n        isNext\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderNextPageLink() {\n    const {\n      anchorTextNext,\n      currentPage,\n      totalPages\n    } = this.props;\n\n    if (currentPage > totalPages - 1) {\n      return /*#__PURE__*/_checkBEM(React, \"li\", {\n        block: \"CategoryPagination\",\n        elem: \"ListItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return this.renderPageLink(currentPage + 1, __('Next page'), anchorTextNext || this.renderPageIcon(true));\n  }\n\n  renderPageLink(pageNumber, label, children, isCurrent = false) {\n    const {\n      pathname,\n      onPageSelect,\n      getSearchQuery\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"li\", {\n      key: pageNumber,\n      block: \"CategoryPagination\",\n      elem: \"ListItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, CategoryPaginationLink, {\n      label: label,\n      url_path: pathname,\n      getPage: onPageSelect,\n      isCurrent: isCurrent,\n      pageNumber: pageNumber,\n      getSearchQueryForPage: getSearchQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, children));\n  }\n\n  renderPlaceholder() {\n    var _this = this;\n\n    return /*#__PURE__*/_checkBEM(React, \"ul\", {\n      block: \"CategoryPagination\",\n      mods: {\n        isLoading: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, Array.from({\n      length: 4\n    }, function (_, i) {\n      return /*#__PURE__*/_checkBEM(React, \"li\", {\n        key: i,\n        block: \"CategoryPagination\",\n        elem: \"ListItem\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/_checkBEM(React, TextPlaceholder, {\n        length: \"block\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }));\n    }));\n  }\n\n  render() {\n    const {\n      isLoading,\n      totalPages\n    } = this.props;\n\n    if (totalPages === 1) {\n      // do not show pagination, if there are less then one page\n      return /*#__PURE__*/_checkBEM(React, \"ul\", {\n        block: \"CategoryPagination\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (isLoading) {\n      return this.renderPlaceholder();\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"nav\", {\n      \"aria-label\": __('Product list navigation'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"ul\", {\n      block: \"CategoryPagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, this.renderPreviousPageLink(), this.renderPageLinks(), this.renderNextPageLink()));\n  }\n\n}, _class.propTypes = {\n  isLoading: PropTypes.bool,\n  pathname: PropTypes.string.isRequired,\n  onPageSelect: PropTypes.func.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  getSearchQuery: PropTypes.func.isRequired,\n  paginationFrame: PropTypes.number,\n  paginationFrameSkip: PropTypes.number,\n  anchorTextPrevious: PropTypes.string,\n  anchorTextNext: PropTypes.string\n}, _class.defaultProps = {\n  isLoading: false,\n  paginationFrame: 5,\n  paginationFrameSkip: 4,\n  anchorTextPrevious: '',\n  anchorTextNext: ''\n}, _temp), \"Component/CategoryPagination/Component\");\nexport default CategoryPagination;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CategoryPagination/CategoryPagination.component.js"],"names":["PropTypes","PureComponent","CategoryPaginationLink","TextPlaceholder","renderPreviousPageLink","anchorTextPrevious","currentPage","props","renderPageLink","__","renderPageIcon","renderPageLinks","totalPages","paginationFrame","paginationFrameSkip","pages","i","length","push","toString","id","pageData","isNext","renderNextPageLink","anchorTextNext","pageNumber","label","children","isCurrent","pathname","onPageSelect","getSearchQuery","renderPlaceholder","isLoading","Array","from","_","render","propTypes","bool","string","isRequired","func","number","defaultProps","CategoryPagination"],"mappings":"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","sourcesContent":["/* eslint-disable fp/no-let, fp/no-loops */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CategoryPaginationLink from 'Component/CategoryPaginationLink';\nimport TextPlaceholder from 'Component/TextPlaceholder';\n\nimport './CategoryPagination.style';\n\n/** @namespace Component/CategoryPagination/Component */\nexport class CategoryPagination extends PureComponent {\n    static propTypes = {\n        isLoading: PropTypes.bool,\n        pathname: PropTypes.string.isRequired,\n        onPageSelect: PropTypes.func.isRequired,\n        totalPages: PropTypes.number.isRequired,\n        currentPage: PropTypes.number.isRequired,\n        getSearchQuery: PropTypes.func.isRequired,\n        paginationFrame: PropTypes.number,\n        paginationFrameSkip: PropTypes.number,\n        anchorTextPrevious: PropTypes.string,\n        anchorTextNext: PropTypes.string\n    };\n\n    static defaultProps = {\n        isLoading: false,\n        paginationFrame: 5,\n        paginationFrameSkip: 4,\n        anchorTextPrevious: '',\n        anchorTextNext: ''\n    };\n\n    renderPreviousPageLink() {\n        const {\n            anchorTextPrevious,\n            currentPage\n        } = this.props;\n\n        if (currentPage <= 1) {\n            return (\n                <li block=\"CategoryPagination\" elem=\"ListItem\" />\n            );\n        }\n\n        return this.renderPageLink(\n            currentPage - 1,\n            __('Previous page'),\n            anchorTextPrevious || this.renderPageIcon()\n        );\n    }\n\n    renderPageLinks() {\n        const {\n            totalPages,\n            paginationFrame,\n            paginationFrameSkip,\n            currentPage\n        } = this.props;\n\n        let pages = [];\n        let i;\n\n        // Render next pagination links\n        for (i = currentPage; i <= currentPage + paginationFrame; i++) {\n            if (i <= totalPages && pages.length <= paginationFrameSkip) {\n                pages.push(this.renderPageLink(\n                    i,\n                    __('Page %s', i),\n                    i.toString(),\n                    i === currentPage\n                ));\n            }\n        }\n\n        // Render previous pagination links if necessary\n        for (i = 1; i < currentPage; i++) {\n            if (pages.length < paginationFrame) {\n                const id = currentPage - i;\n                const pageData = this.renderPageLink(\n                    id,\n                    __('Page %s', id),\n                    id.toString()\n                );\n\n                pages = [pageData, ...pages];\n            }\n        }\n\n        // Edge case for rendering correct count of next links when current page is 1\n        if (currentPage === 1 && pages.length < totalPages) {\n            for (i = pages.length + 1; i <= paginationFrame; i++) {\n                pages.push(this.renderPageLink(\n                    i,\n                    __('Page %s', i),\n                    i.toString()\n                ));\n            }\n        }\n\n        return pages;\n    }\n\n    renderPageIcon(isNext = false) {\n        return (\n            <span\n              block=\"CategoryPagination\"\n              elem=\"Icon\"\n              mods={ { isNext } }\n            />\n        );\n    }\n\n    renderNextPageLink() {\n        const {\n            anchorTextNext,\n            currentPage,\n            totalPages\n        } = this.props;\n\n        if (currentPage > totalPages - 1) {\n            return (\n                <li block=\"CategoryPagination\" elem=\"ListItem\" />\n            );\n        }\n\n        return this.renderPageLink(\n            currentPage + 1,\n            __('Next page'),\n            anchorTextNext || this.renderPageIcon(true)\n        );\n    }\n\n    renderPageLink(\n        pageNumber,\n        label,\n        children,\n        isCurrent = false\n    ) {\n        const {\n            pathname,\n            onPageSelect,\n            getSearchQuery\n        } = this.props;\n\n        return (\n            <li\n              key={ pageNumber }\n              block=\"CategoryPagination\"\n              elem=\"ListItem\"\n            >\n                <CategoryPaginationLink\n                  label={ label }\n                  url_path={ pathname }\n                  getPage={ onPageSelect }\n                  isCurrent={ isCurrent }\n                  pageNumber={ pageNumber }\n                  getSearchQueryForPage={ getSearchQuery }\n                >\n                    { children }\n                </CategoryPaginationLink>\n            </li>\n        );\n    }\n\n    renderPlaceholder() {\n        return (\n            <ul block=\"CategoryPagination\" mods={ { isLoading: true } }>\n                { Array.from({ length: 4 }, (_, i) => (\n                    <li\n                      key={ i }\n                      block=\"CategoryPagination\"\n                      elem=\"ListItem\"\n                    >\n                        <TextPlaceholder length=\"block\" />\n                    </li>\n                )) }\n            </ul>\n        );\n    }\n\n    render() {\n        const { isLoading, totalPages } = this.props;\n\n        if (totalPages === 1) { // do not show pagination, if there are less then one page\n            return <ul block=\"CategoryPagination\" />;\n        }\n\n        if (isLoading) {\n            return this.renderPlaceholder();\n        }\n\n        return (\n            <nav aria-label={ __('Product list navigation') }>\n                <ul block=\"CategoryPagination\">\n                    { this.renderPreviousPageLink() }\n                    { this.renderPageLinks() }\n                    { this.renderNextPageLink() }\n                </ul>\n            </nav>\n        );\n    }\n}\n\nexport default CategoryPagination;\n"]},"metadata":{},"sourceType":"module"}