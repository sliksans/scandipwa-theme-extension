{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/CheckoutShipping/CheckoutShipping.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport CheckoutAddressBook from \"/home/arturs/scandiweb/extension/src/component/CheckoutAddressBook\";\nimport CheckoutDeliveryOptions from \"/home/arturs/scandiweb/extension/src/component/CheckoutDeliveryOptions\";\nimport Form from \"/home/arturs/scandiweb/extension/src/component/Form\";\nimport Loader from \"/home/arturs/scandiweb/extension/src/component/Loader\";\nimport { STORE_IN_PICK_UP_METHOD_CODE } from \"/home/arturs/scandiweb/extension/src/component/StoreInPickUp/StoreInPickUp.config\";\nimport { SHIPPING_STEP } from \"/home/arturs/scandiweb/extension/src/route/Checkout/Checkout.config\";\nimport { addressType } from \"/home/arturs/scandiweb/extension/src/type/Account\";\nimport { shippingMethodsType, shippingMethodType } from \"/home/arturs/scandiweb/extension/src/type/Checkout\";\nimport { TotalsType } from \"/home/arturs/scandiweb/extension/src/type/MiniCart\";\nimport { formatPrice } from \"/home/arturs/scandiweb/extension/src/util/Price\";\nimport \"./CheckoutShipping.style\";\n/** #namespace Component/CheckoutShipping/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CheckoutShipping = Mosaic.middleware((_temp = _class = class CheckoutShipping_ extends Mosaic.Extensible(PureComponent) {\n  renderOrderTotalExlTax() {\n    const {\n      cartTotalSubPrice,\n      totals: {\n        quote_currency_code\n      }\n    } = this.props;\n\n    if (!cartTotalSubPrice) {\n      return null;\n    }\n\n    const orderTotalExlTax = formatPrice(cartTotalSubPrice, quote_currency_code);\n    return /*#__PURE__*/_checkBEM(React, \"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, `${__('Excl. tax:')} ${orderTotalExlTax}`);\n  }\n\n  renderOrderTotal() {\n    const {\n      totals: {\n        grand_total,\n        quote_currency_code\n      }\n    } = this.props;\n    const orderTotal = formatPrice(grand_total, quote_currency_code);\n    return /*#__PURE__*/_checkBEM(React, \"dl\", {\n      block: \"Checkout\",\n      elem: \"OrderTotal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"dt\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, __('Order total:')), /*#__PURE__*/_checkBEM(React, \"dt\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, orderTotal, this.renderOrderTotalExlTax()));\n  }\n\n  renderActions() {\n    const {\n      selectedShippingMethod,\n      selectedStoreAddress\n    } = this.props;\n    const {\n      method_code\n    } = selectedShippingMethod;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"Checkout\",\n      elem: \"StickyButtonWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, this.renderOrderTotal(), /*#__PURE__*/_checkBEM(React, \"button\", {\n      type: \"submit\",\n      block: \"Button\",\n      disabled: !selectedShippingMethod || method_code === STORE_IN_PICK_UP_METHOD_CODE && !Object.keys(selectedStoreAddress).length,\n      mix: {\n        block: 'CheckoutShipping',\n        elem: 'Button'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, __('Proceed to billing')));\n  }\n\n  renderDelivery() {\n    const {\n      shippingMethods,\n      onShippingMethodSelect,\n      estimateAddress,\n      onStoreSelect\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, CheckoutDeliveryOptions, {\n      shippingMethods: shippingMethods,\n      onShippingMethodSelect: onShippingMethodSelect,\n      estimateAddress: estimateAddress,\n      onStoreSelect: onStoreSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderAddressBook() {\n    const {\n      onAddressSelect,\n      onShippingEstimationFieldsChange,\n      isSubmitted\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, CheckoutAddressBook, {\n      onAddressSelect: onAddressSelect,\n      onShippingEstimationFieldsChange: onShippingEstimationFieldsChange,\n      isSubmitted: isSubmitted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    const {\n      onShippingSuccess,\n      onShippingError,\n      isLoading\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, Form, {\n      id: SHIPPING_STEP,\n      mix: {\n        block: 'CheckoutShipping'\n      },\n      onSubmitError: onShippingError,\n      onSubmitSuccess: onShippingSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, this.renderAddressBook(), /*#__PURE__*/_checkBEM(React, \"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, Loader, {\n      isLoading: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }), this.renderDelivery(), this.renderActions()));\n  }\n\n}, _class.propTypes = {\n  totals: TotalsType.isRequired,\n  cartTotalSubPrice: PropTypes.number,\n  onShippingSuccess: PropTypes.func.isRequired,\n  onShippingError: PropTypes.func.isRequired,\n  onShippingEstimationFieldsChange: PropTypes.func.isRequired,\n  shippingMethods: shippingMethodsType.isRequired,\n  onShippingMethodSelect: PropTypes.func.isRequired,\n  selectedShippingMethod: shippingMethodType,\n  onAddressSelect: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  isSubmitted: PropTypes.bool,\n  onStoreSelect: PropTypes.func.isRequired,\n  estimateAddress: addressType.isRequired,\n  selectedStoreAddress: addressType\n}, _class.defaultProps = {\n  selectedShippingMethod: null,\n  isSubmitted: false,\n  cartTotalSubPrice: null,\n  selectedStoreAddress: {}\n}, _temp), \"Component/CheckoutShipping/Component\");\nexport default CheckoutShipping;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/CheckoutShipping/CheckoutShipping.component.js"],"names":["PropTypes","PureComponent","CheckoutAddressBook","CheckoutDeliveryOptions","Form","Loader","STORE_IN_PICK_UP_METHOD_CODE","SHIPPING_STEP","addressType","shippingMethodsType","shippingMethodType","TotalsType","formatPrice","renderOrderTotalExlTax","cartTotalSubPrice","totals","quote_currency_code","props","orderTotalExlTax","__","renderOrderTotal","grand_total","orderTotal","renderActions","selectedShippingMethod","selectedStoreAddress","method_code","Object","keys","length","block","elem","renderDelivery","shippingMethods","onShippingMethodSelect","estimateAddress","onStoreSelect","renderAddressBook","onAddressSelect","onShippingEstimationFieldsChange","isSubmitted","render","onShippingSuccess","onShippingError","isLoading","propTypes","isRequired","number","func","bool","defaultProps","CheckoutShipping"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CheckoutAddressBook from 'Component/CheckoutAddressBook';\nimport CheckoutDeliveryOptions from 'Component/CheckoutDeliveryOptions';\nimport Form from 'Component/Form';\nimport Loader from 'Component/Loader';\nimport { STORE_IN_PICK_UP_METHOD_CODE } from 'Component/StoreInPickUp/StoreInPickUp.config';\nimport { SHIPPING_STEP } from 'Route/Checkout/Checkout.config';\nimport { addressType } from 'Type/Account';\nimport { shippingMethodsType, shippingMethodType } from 'Type/Checkout';\nimport { TotalsType } from 'Type/MiniCart';\nimport { formatPrice } from 'Util/Price';\n\nimport './CheckoutShipping.style';\n\n/** @namespace Component/CheckoutShipping/Component */\nexport class CheckoutShipping extends PureComponent {\n    static propTypes = {\n        totals: TotalsType.isRequired,\n        cartTotalSubPrice: PropTypes.number,\n        onShippingSuccess: PropTypes.func.isRequired,\n        onShippingError: PropTypes.func.isRequired,\n        onShippingEstimationFieldsChange: PropTypes.func.isRequired,\n        shippingMethods: shippingMethodsType.isRequired,\n        onShippingMethodSelect: PropTypes.func.isRequired,\n        selectedShippingMethod: shippingMethodType,\n        onAddressSelect: PropTypes.func.isRequired,\n        isLoading: PropTypes.bool.isRequired,\n        isSubmitted: PropTypes.bool,\n        onStoreSelect: PropTypes.func.isRequired,\n        estimateAddress: addressType.isRequired,\n        selectedStoreAddress: addressType\n    };\n\n    static defaultProps = {\n        selectedShippingMethod: null,\n        isSubmitted: false,\n        cartTotalSubPrice: null,\n        selectedStoreAddress: {}\n    };\n\n    renderOrderTotalExlTax() {\n        const {\n            cartTotalSubPrice,\n            totals: { quote_currency_code }\n        } = this.props;\n\n        if (!cartTotalSubPrice) {\n            return null;\n        }\n\n        const orderTotalExlTax = formatPrice(cartTotalSubPrice, quote_currency_code);\n\n        return (\n            <span>\n                { `${ __('Excl. tax:') } ${ orderTotalExlTax }` }\n            </span>\n        );\n    }\n\n    renderOrderTotal() {\n        const {\n            totals: {\n                grand_total,\n                quote_currency_code\n            }\n        } = this.props;\n\n        const orderTotal = formatPrice(grand_total, quote_currency_code);\n\n        return (\n            <dl block=\"Checkout\" elem=\"OrderTotal\">\n                <dt>\n                    { __('Order total:') }\n                </dt>\n                <dt>\n                    { orderTotal }\n                    { this.renderOrderTotalExlTax() }\n                </dt>\n            </dl>\n        );\n    }\n\n    renderActions() {\n        const { selectedShippingMethod, selectedStoreAddress } = this.props;\n        const { method_code } = selectedShippingMethod;\n\n        return (\n            <div block=\"Checkout\" elem=\"StickyButtonWrapper\">\n                { this.renderOrderTotal() }\n                <button\n                  type=\"submit\"\n                  block=\"Button\"\n                  disabled={ !selectedShippingMethod\n                      || (method_code === STORE_IN_PICK_UP_METHOD_CODE && !Object.keys(selectedStoreAddress).length) }\n                  mix={ { block: 'CheckoutShipping', elem: 'Button' } }\n                >\n                    { __('Proceed to billing') }\n                </button>\n            </div>\n        );\n    }\n\n    renderDelivery() {\n        const {\n            shippingMethods,\n            onShippingMethodSelect,\n            estimateAddress,\n            onStoreSelect\n        } = this.props;\n\n        return (\n            <CheckoutDeliveryOptions\n              shippingMethods={ shippingMethods }\n              onShippingMethodSelect={ onShippingMethodSelect }\n              estimateAddress={ estimateAddress }\n              onStoreSelect={ onStoreSelect }\n            />\n        );\n    }\n\n    renderAddressBook() {\n        const {\n            onAddressSelect,\n            onShippingEstimationFieldsChange,\n            isSubmitted\n        } = this.props;\n\n        return (\n            <CheckoutAddressBook\n              onAddressSelect={ onAddressSelect }\n              onShippingEstimationFieldsChange={ onShippingEstimationFieldsChange }\n              isSubmitted={ isSubmitted }\n            />\n        );\n    }\n\n    render() {\n        const {\n            onShippingSuccess,\n            onShippingError,\n            isLoading\n        } = this.props;\n\n        return (\n            <Form\n              id={ SHIPPING_STEP }\n              mix={ { block: 'CheckoutShipping' } }\n              onSubmitError={ onShippingError }\n              onSubmitSuccess={ onShippingSuccess }\n            >\n                { this.renderAddressBook() }\n                <div>\n                    <Loader isLoading={ isLoading } />\n                    { this.renderDelivery() }\n                    { this.renderActions() }\n                </div>\n            </Form>\n        );\n    }\n}\n\nexport default CheckoutShipping;\n"]},"metadata":{},"sourceType":"module"}