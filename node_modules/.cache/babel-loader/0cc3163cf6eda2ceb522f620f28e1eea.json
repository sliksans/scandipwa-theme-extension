{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressPopup/MyAccountAddressPopup.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport MyAccountQuery from \"/home/arturs/scandiweb/scandipwa/src/query/MyAccount.query\";\nimport { goToPreviousNavigationState } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.action\";\nimport { TOP_NAVIGATION_TYPE } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.reducer\";\nimport { showNotification } from \"/home/arturs/scandiweb/scandipwa/src/store/Notification/Notification.action\";\nimport { hideActiveOverlay } from \"/home/arturs/scandiweb/scandipwa/src/store/Overlay/Overlay.action\";\nimport { addressType } from \"/home/arturs/scandiweb/scandipwa/src/type/Account\";\nimport { isSignedIn } from \"/home/arturs/scandiweb/scandipwa/src/util/Auth\";\nimport { fetchMutation, getErrorMessage } from \"/home/arturs/scandiweb/scandipwa/src/util/Request\";\nimport MyAccountAddressPopup from \"./MyAccountAddressPopup.component\";\nimport { ADDRESS_POPUP_ID } from \"./MyAccountAddressPopup.config\";\nexport const MyAccountDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/scandipwa/src/store/MyAccount/MyAccount.dispatcher\");\n/** #namespace Component/MyAccountAddressPopup/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    payload: state.PopupReducer.popupPayload[ADDRESS_POPUP_ID] || {}\n  };\n}, \"Component/MyAccountAddressPopup/Container/mapStateToProps\");\n/** #namespace Component/MyAccountAddressPopup/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    hideActiveOverlay: function () {\n      return dispatch(hideActiveOverlay());\n    },\n    showErrorNotification: function (error) {\n      return dispatch(showNotification('error', getErrorMessage(error)));\n    },\n    showSuccessNotification: function (message) {\n      return dispatch(showNotification('success', message));\n    },\n    updateCustomerDetails: function () {\n      return MyAccountDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.requestCustomerData(dispatch);\n      });\n    },\n    goToPreviousHeaderState: function () {\n      return dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE));\n    }\n  };\n}, \"Component/MyAccountAddressPopup/Container/mapDispatchToProps\");\n/** #namespace Component/MyAccountAddressPopup/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountAddressPopupContainer = Mosaic.middleware((_temp = _class = class MyAccountAddressPopupContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      isLoading: false\n    };\n    this.containerFunctions = {\n      handleAddress: this.handleAddress.bind(this),\n      handleDeleteAddress: this.handleDeleteAddress.bind(this)\n    };\n\n    this.handleAfterAction = function () {\n      const {\n        hideActiveOverlay,\n        updateCustomerDetails,\n        showErrorNotification,\n        goToPreviousHeaderState\n      } = _this.props;\n      updateCustomerDetails().then(\n      /** #namespace Component/MyAccountAddressPopup/Container/updateCustomerDetailsThen */\n      Mosaic.middleware(function () {\n        _this.setState({\n          isLoading: false\n        }, function () {\n          hideActiveOverlay();\n          goToPreviousHeaderState();\n        });\n      }, \"Component/MyAccountAddressPopup/Container/updateCustomerDetailsThen\"), showErrorNotification);\n    };\n\n    this.handleError = function (error) {\n      const {\n        showErrorNotification\n      } = _this.props;\n      showErrorNotification(error);\n\n      _this.setState({\n        isLoading: false\n      });\n    };\n  }\n\n  handleAddress(address) {\n    const {\n      payload: {\n        address: {\n          id\n        }\n      }\n    } = this.props;\n    this.setState({\n      isLoading: true\n    });\n\n    if (id) {\n      return this.handleEditAddress(address);\n    }\n\n    return this.handleCreateAddress(address);\n  }\n\n  handleEditAddress(address) {\n    const {\n      payload: {\n        address: {\n          id\n        }\n      }\n    } = this.props;\n    const query = MyAccountQuery.getUpdateAddressMutation(id, address);\n\n    if (!isSignedIn()) {\n      return;\n    }\n\n    fetchMutation(query).then(this.handleAfterAction, this.handleError);\n  }\n\n  handleDeleteAddress() {\n    const {\n      payload: {\n        address: {\n          id\n        }\n      }\n    } = this.props;\n\n    if (!isSignedIn()) {\n      return;\n    }\n\n    this.setState({\n      isLoading: true\n    });\n    const query = MyAccountQuery.getDeleteAddressMutation(id);\n    fetchMutation(query).then(this.handleAfterAction, this.handleError);\n  }\n\n  handleCreateAddress(address) {\n    if (!isSignedIn()) {\n      return;\n    }\n\n    const query = MyAccountQuery.getCreateAddressMutation(address);\n    fetchMutation(query).then(this.handleAfterAction, this.handleError);\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, MyAccountAddressPopup, Object.assign({}, this.props, this.state, this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  showErrorNotification: PropTypes.func.isRequired,\n  updateCustomerDetails: PropTypes.func.isRequired,\n  hideActiveOverlay: PropTypes.func.isRequired,\n  goToPreviousHeaderState: PropTypes.func.isRequired,\n  payload: PropTypes.shape({\n    address: addressType\n  }).isRequired\n}, _temp), \"Component/MyAccountAddressPopup/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountAddressPopupContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressPopup/MyAccountAddressPopup.container.js"],"names":["PropTypes","PureComponent","connect","MyAccountQuery","goToPreviousNavigationState","TOP_NAVIGATION_TYPE","showNotification","hideActiveOverlay","addressType","isSignedIn","fetchMutation","getErrorMessage","MyAccountAddressPopup","ADDRESS_POPUP_ID","MyAccountDispatcher","mapStateToProps","state","payload","PopupReducer","popupPayload","mapDispatchToProps","dispatch","showErrorNotification","error","showSuccessNotification","message","updateCustomerDetails","then","default","dispatcher","requestCustomerData","goToPreviousHeaderState","isLoading","containerFunctions","handleAddress","bind","handleDeleteAddress","handleAfterAction","props","setState","handleError","address","id","handleEditAddress","handleCreateAddress","query","getUpdateAddressMutation","getDeleteAddressMutation","getCreateAddressMutation","render","propTypes","func","isRequired","shape","MyAccountAddressPopupContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport MyAccountQuery from 'Query/MyAccount.query';\nimport { goToPreviousNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { hideActiveOverlay } from 'Store/Overlay/Overlay.action';\nimport { addressType } from 'Type/Account';\nimport { isSignedIn } from 'Util/Auth';\nimport { fetchMutation, getErrorMessage } from 'Util/Request';\n\nimport MyAccountAddressPopup from './MyAccountAddressPopup.component';\nimport { ADDRESS_POPUP_ID } from './MyAccountAddressPopup.config';\n\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Component/MyAccountAddressPopup/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    payload: state.PopupReducer.popupPayload[ADDRESS_POPUP_ID] || {}\n});\n\n/** @namespace Component/MyAccountAddressPopup/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    hideActiveOverlay: () => dispatch(hideActiveOverlay()),\n    showErrorNotification: (error) => dispatch(showNotification('error', getErrorMessage(error))),\n    showSuccessNotification: (message) => dispatch(showNotification('success', message)),\n    updateCustomerDetails: () => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.requestCustomerData(dispatch)\n    ),\n    goToPreviousHeaderState: () => dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE))\n});\n\n/** @namespace Component/MyAccountAddressPopup/Container */\nexport class MyAccountAddressPopupContainer extends PureComponent {\n    static propTypes = {\n        showErrorNotification: PropTypes.func.isRequired,\n        updateCustomerDetails: PropTypes.func.isRequired,\n        hideActiveOverlay: PropTypes.func.isRequired,\n        goToPreviousHeaderState: PropTypes.func.isRequired,\n        payload: PropTypes.shape({\n            address: addressType\n        }).isRequired\n    };\n\n    state = {\n        isLoading: false\n    };\n\n    containerFunctions = {\n        handleAddress: this.handleAddress.bind(this),\n        handleDeleteAddress: this.handleDeleteAddress.bind(this)\n    };\n\n    handleAfterAction = () => {\n        const {\n            hideActiveOverlay,\n            updateCustomerDetails,\n            showErrorNotification,\n            goToPreviousHeaderState\n        } = this.props;\n\n        updateCustomerDetails().then(\n            /** @namespace Component/MyAccountAddressPopup/Container/updateCustomerDetailsThen */\n            () => {\n                this.setState({ isLoading: false }, () => {\n                    hideActiveOverlay();\n                    goToPreviousHeaderState();\n                });\n            }, showErrorNotification\n        );\n    };\n\n    handleError = (error) => {\n        const { showErrorNotification } = this.props;\n        showErrorNotification(error);\n        this.setState({ isLoading: false });\n    };\n\n    handleAddress(address) {\n        const { payload: { address: { id } } } = this.props;\n        this.setState({ isLoading: true });\n        if (id) {\n            return this.handleEditAddress(address);\n        }\n\n        return this.handleCreateAddress(address);\n    }\n\n    handleEditAddress(address) {\n        const { payload: { address: { id } } } = this.props;\n        const query = MyAccountQuery.getUpdateAddressMutation(id, address);\n\n        if (!isSignedIn()) {\n            return;\n        }\n\n        fetchMutation(query).then(this.handleAfterAction, this.handleError);\n    }\n\n    handleDeleteAddress() {\n        const { payload: { address: { id } } } = this.props;\n\n        if (!isSignedIn()) {\n            return;\n        }\n\n        this.setState({ isLoading: true });\n        const query = MyAccountQuery.getDeleteAddressMutation(id);\n        fetchMutation(query).then(this.handleAfterAction, this.handleError);\n    }\n\n    handleCreateAddress(address) {\n        if (!isSignedIn()) {\n            return;\n        }\n\n        const query = MyAccountQuery.getCreateAddressMutation(address);\n        fetchMutation(query).then(this.handleAfterAction, this.handleError);\n    }\n\n    render() {\n        return (\n            <MyAccountAddressPopup\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountAddressPopupContainer);\n"]},"metadata":{},"sourceType":"module"}