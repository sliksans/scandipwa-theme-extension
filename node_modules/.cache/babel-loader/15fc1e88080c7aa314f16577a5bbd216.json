{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountOverlay/MyAccountOverlay.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { CUSTOMER_ACCOUNT, CUSTOMER_SUB_ACCOUNT } from \"/home/arturs/scandiweb/scandipwa/src/component/Header/Header.config\";\nimport { CHECKOUT_URL } from \"/home/arturs/scandiweb/scandipwa/src/route/Checkout/Checkout.config\";\nimport { ACCOUNT_LOGIN_URL, ACCOUNT_URL, MY_ACCOUNT_URL } from \"/home/arturs/scandiweb/scandipwa/src/route/MyAccount/MyAccount.config\";\nimport { changeNavigationState, goToPreviousNavigationState } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.action\";\nimport { TOP_NAVIGATION_TYPE } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.reducer\";\nimport { showNotification } from \"/home/arturs/scandiweb/scandipwa/src/store/Notification/Notification.action\";\nimport { hideActiveOverlay, toggleOverlayByKey } from \"/home/arturs/scandiweb/scandipwa/src/store/Overlay/Overlay.action\";\nimport { DeviceType } from \"/home/arturs/scandiweb/scandipwa/src/type/Device\";\nimport { isSignedIn } from \"/home/arturs/scandiweb/scandipwa/src/util/Auth\";\nimport history from \"/home/arturs/scandiweb/scandipwa/src/util/History\";\nimport { appendWithStoreCode } from \"/home/arturs/scandiweb/scandipwa/src/util/Url\";\nimport MyAccountOverlay from \"./MyAccountOverlay.component\";\nimport { CUSTOMER_ACCOUNT_OVERLAY_KEY, STATE_CREATE_ACCOUNT, STATE_FORGOT_PASSWORD, STATE_LOGGED_IN, STATE_SIGN_IN } from \"./MyAccountOverlay.config\";\n/** #namespace Component/MyAccountOverlay/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    isSignedIn: state.MyAccountReducer.isSignedIn,\n    customer: state.MyAccountReducer.customer,\n    device: state.ConfigReducer.device,\n    isPasswordForgotSend: state.MyAccountReducer.isPasswordForgotSend,\n    isOverlayVisible: state.OverlayReducer.activeOverlay === CUSTOMER_ACCOUNT,\n    redirectToDashboard: state.ConfigReducer.redirect_dashboard,\n    isLoading: state.MyAccountReducer.isLoading\n  };\n}, \"Component/MyAccountOverlay/Container/mapStateToProps\");\n/** #namespace Component/MyAccountOverlay/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    hideActiveOverlay: function () {\n      return dispatch(hideActiveOverlay());\n    },\n    showNotification: function (type, message) {\n      return dispatch(showNotification(type, message));\n    },\n    showOverlay: function (overlayKey) {\n      return dispatch(toggleOverlayByKey(overlayKey));\n    },\n    setHeaderState: function (headerState) {\n      return dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, headerState));\n    },\n    goToPreviousHeaderState: function () {\n      return dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE));\n    }\n  };\n}, \"Component/MyAccountOverlay/Container/mapDispatchToProps\");\n/** #namespace Component/MyAccountOverlay/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountOverlayContainer = Mosaic.middleware((_temp = _class = class MyAccountOverlayContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.containerFunctions = {\n      onFormError: this.onFormError.bind(this),\n      handleForgotPassword: this.handleForgotPassword.bind(this),\n      handleSignIn: this.handleSignIn.bind(this),\n      handleCreateAccount: this.handleCreateAccount.bind(this),\n      onVisible: this.onVisible.bind(this),\n      setSignInState: this.setSignInState.bind(this),\n      setLoadingState: this.setLoadingState.bind(this)\n    };\n\n    this.redirectOrGetState = function (props) {\n      const {\n        showOverlay,\n        setHeaderState,\n        isPasswordForgotSend,\n        device\n      } = props;\n      const {\n        location: {\n          pathname,\n          state: {\n            isForgotPassword\n          } = {}\n        }\n      } = history;\n      const state = {\n        state: isSignedIn() ? STATE_LOGGED_IN : STATE_SIGN_IN,\n        // eslint-disable-next-line react/no-unused-state\n        isPasswordForgotSend,\n        isLoading: false\n      }; // if customer got here from forgot-password\n\n      if (pathname !== '/forgot-password' && !isForgotPassword) {\n        return state;\n      }\n\n      state.state = STATE_FORGOT_PASSWORD;\n      setHeaderState({\n        name: CUSTOMER_SUB_ACCOUNT,\n        title: 'Forgot password',\n        onBackClick: function (e) {\n          history.push({\n            pathname: appendWithStoreCode('/my-account')\n          });\n\n          _this.handleSignIn(e);\n        }\n      });\n\n      if (device.isMobile) {\n        history.push({\n          pathname: appendWithStoreCode('/my-account'),\n          state: {\n            isForgotPassword: true\n          }\n        });\n        return state;\n      }\n\n      showOverlay(CUSTOMER_ACCOUNT_OVERLAY_KEY);\n      return state;\n    };\n\n    this.stopLoading = function () {\n      return _this.setState({\n        isLoading: false\n      });\n    };\n\n    this.stopLoadingAndHideOverlay = function () {\n      const {\n        hideActiveOverlay\n      } = _this.props;\n\n      _this.stopLoading();\n\n      hideActiveOverlay();\n    };\n  }\n\n  __construct(props) {\n    super.__construct(props);\n\n    this.state = this.redirectOrGetState(props);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      isPasswordForgotSend,\n      showNotification,\n      isOverlayVisible,\n      device\n    } = props;\n    const {\n      isPasswordForgotSend: currentIsPasswordForgotSend,\n      state: myAccountState\n    } = state;\n    const {\n      location: {\n        pathname,\n        state: {\n          isForgotPassword\n        } = {}\n      }\n    } = history;\n    const stateToBeUpdated = {};\n    const customerIsSignedIn = isSignedIn();\n\n    if (!device.isMobile) {\n      if (!isOverlayVisible && !customerIsSignedIn) {\n        if (pathname !== '/forgot-password' && !isForgotPassword) {\n          stateToBeUpdated.state = STATE_SIGN_IN;\n        }\n      } else if (!isOverlayVisible && customerIsSignedIn) {\n        stateToBeUpdated.state = STATE_LOGGED_IN;\n      }\n    }\n\n    if (myAccountState !== STATE_LOGGED_IN && customerIsSignedIn) {\n      stateToBeUpdated.isLoading = false;\n      stateToBeUpdated.state = STATE_LOGGED_IN;\n    }\n\n    if (myAccountState === STATE_LOGGED_IN && !customerIsSignedIn) {\n      stateToBeUpdated.state = STATE_SIGN_IN;\n    }\n\n    if (isPasswordForgotSend !== currentIsPasswordForgotSend) {\n      stateToBeUpdated.isLoading = false;\n      stateToBeUpdated.isPasswordForgotSend = isPasswordForgotSend; // eslint-disable-next-line max-len\n\n      showNotification('success', __('If there is an account associated with the provided address you will receive an email with a link to reset your password.'));\n      stateToBeUpdated.state = STATE_SIGN_IN;\n    }\n\n    return Object.keys(stateToBeUpdated).length ? stateToBeUpdated : null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      isSignedIn: prevIsSignedIn\n    } = prevProps;\n    const {\n      state: oldMyAccountState\n    } = prevState;\n    const {\n      state: newMyAccountState\n    } = this.state;\n    const {\n      location: {\n        pathname\n      }\n    } = history;\n    const {\n      isSignedIn,\n      hideActiveOverlay,\n      isCheckout,\n      goToPreviousHeaderState,\n      redirectToDashboard\n    } = this.props;\n\n    if (oldMyAccountState === newMyAccountState) {\n      return;\n    }\n\n    if (isSignedIn !== prevIsSignedIn) {\n      hideActiveOverlay();\n\n      if (isCheckout) {\n        goToPreviousHeaderState();\n      }\n    }\n\n    if (newMyAccountState !== STATE_LOGGED_IN && pathname.includes(MY_ACCOUNT_URL)) {\n      history.push({\n        pathname: appendWithStoreCode(ACCOUNT_LOGIN_URL)\n      });\n    }\n\n    if (newMyAccountState === STATE_LOGGED_IN) {\n      if (pathname.includes(ACCOUNT_URL)) {\n        history.push({\n          pathname: appendWithStoreCode('/')\n        });\n      } else if (!pathname.includes(CHECKOUT_URL) && redirectToDashboard) {\n        history.push({\n          pathname: appendWithStoreCode('/my-account/dashboard')\n        });\n      }\n    }\n  }\n\n  containerProps() {\n    const {\n      props,\n      state\n    } = this;\n    return {\n      isLoading: props.isLoading || state.isLoading\n    };\n  }\n\n  setSignInState(state) {\n    this.setState({\n      state\n    });\n  }\n\n  setLoadingState(isLoading) {\n    this.setState({\n      isLoading\n    });\n  }\n\n  onVisible() {\n    const {\n      setHeaderState,\n      isCheckout,\n      device\n    } = this.props;\n\n    if (device.isMobile && !isCheckout) {\n      setHeaderState({\n        name: CUSTOMER_ACCOUNT,\n        title: __('Sign in')\n      });\n    }\n  }\n\n  onFormError() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  handleForgotPassword(e) {\n    var _this2 = this;\n\n    const {\n      setHeaderState\n    } = this.props;\n    e.preventDefault();\n    e.nativeEvent.stopImmediatePropagation();\n    this.setState({\n      state: STATE_FORGOT_PASSWORD\n    });\n    setHeaderState({\n      name: CUSTOMER_SUB_ACCOUNT,\n      title: __('Forgot password'),\n      onBackClick: function () {\n        return _this2.handleSignIn(e);\n      }\n    });\n  }\n\n  handleSignIn(e) {\n    const {\n      setHeaderState\n    } = this.props;\n    e.preventDefault();\n    e.nativeEvent.stopImmediatePropagation();\n    this.setState({\n      state: STATE_SIGN_IN\n    });\n    setHeaderState({\n      name: CUSTOMER_ACCOUNT,\n      title: __('Sign in')\n    });\n  }\n\n  handleCreateAccount(e) {\n    var _this3 = this;\n\n    const {\n      setHeaderState\n    } = this.props;\n    e.preventDefault();\n    e.nativeEvent.stopImmediatePropagation();\n    this.setState({\n      state: STATE_CREATE_ACCOUNT\n    });\n    setHeaderState({\n      name: CUSTOMER_SUB_ACCOUNT,\n      title: __('Create account'),\n      onBackClick: function () {\n        return _this3.handleSignIn(e);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, MyAccountOverlay, Object.assign({}, this.props, this.state, this.containerProps(), this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  isPasswordForgotSend: PropTypes.bool.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n  showNotification: PropTypes.func.isRequired,\n  isOverlayVisible: PropTypes.bool.isRequired,\n  showOverlay: PropTypes.func.isRequired,\n  setHeaderState: PropTypes.func.isRequired,\n  onSignIn: PropTypes.func,\n  goToPreviousHeaderState: PropTypes.func,\n  isCheckout: PropTypes.bool,\n  hideActiveOverlay: PropTypes.func.isRequired,\n  device: DeviceType.isRequired,\n  redirectToDashboard: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool\n}, _class.defaultProps = {\n  isCheckout: false,\n  isLoading: false,\n  onSignIn: function () {},\n  goToPreviousHeaderState: function () {}\n}, _temp), \"Component/MyAccountOverlay/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountOverlayContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountOverlay/MyAccountOverlay.container.js"],"names":["PropTypes","PureComponent","connect","CUSTOMER_ACCOUNT","CUSTOMER_SUB_ACCOUNT","CHECKOUT_URL","ACCOUNT_LOGIN_URL","ACCOUNT_URL","MY_ACCOUNT_URL","changeNavigationState","goToPreviousNavigationState","TOP_NAVIGATION_TYPE","showNotification","hideActiveOverlay","toggleOverlayByKey","DeviceType","isSignedIn","history","appendWithStoreCode","MyAccountOverlay","CUSTOMER_ACCOUNT_OVERLAY_KEY","STATE_CREATE_ACCOUNT","STATE_FORGOT_PASSWORD","STATE_LOGGED_IN","STATE_SIGN_IN","mapStateToProps","state","MyAccountReducer","customer","device","ConfigReducer","isPasswordForgotSend","isOverlayVisible","OverlayReducer","activeOverlay","redirectToDashboard","redirect_dashboard","isLoading","mapDispatchToProps","dispatch","type","message","showOverlay","overlayKey","setHeaderState","headerState","goToPreviousHeaderState","containerFunctions","onFormError","bind","handleForgotPassword","handleSignIn","handleCreateAccount","onVisible","setSignInState","setLoadingState","redirectOrGetState","props","location","pathname","isForgotPassword","name","title","onBackClick","e","push","isMobile","stopLoading","setState","stopLoadingAndHideOverlay","__construct","getDerivedStateFromProps","currentIsPasswordForgotSend","myAccountState","stateToBeUpdated","customerIsSignedIn","__","Object","keys","length","componentDidUpdate","prevProps","prevState","prevIsSignedIn","oldMyAccountState","newMyAccountState","isCheckout","includes","containerProps","preventDefault","nativeEvent","stopImmediatePropagation","render","propTypes","bool","isRequired","func","onSignIn","defaultProps","MyAccountOverlayContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { CUSTOMER_ACCOUNT, CUSTOMER_SUB_ACCOUNT } from 'Component/Header/Header.config';\nimport { CHECKOUT_URL } from 'Route/Checkout/Checkout.config';\nimport {\n    ACCOUNT_LOGIN_URL,\n    ACCOUNT_URL,\n    MY_ACCOUNT_URL\n} from 'Route/MyAccount/MyAccount.config';\nimport { changeNavigationState, goToPreviousNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { hideActiveOverlay, toggleOverlayByKey } from 'Store/Overlay/Overlay.action';\nimport { DeviceType } from 'Type/Device';\nimport { isSignedIn } from 'Util/Auth';\nimport history from 'Util/History';\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport MyAccountOverlay from './MyAccountOverlay.component';\nimport {\n    CUSTOMER_ACCOUNT_OVERLAY_KEY,\n    STATE_CREATE_ACCOUNT,\n    STATE_FORGOT_PASSWORD,\n    STATE_LOGGED_IN,\n    STATE_SIGN_IN\n} from './MyAccountOverlay.config';\n\n/** @namespace Component/MyAccountOverlay/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    isSignedIn: state.MyAccountReducer.isSignedIn,\n    customer: state.MyAccountReducer.customer,\n    device: state.ConfigReducer.device,\n    isPasswordForgotSend: state.MyAccountReducer.isPasswordForgotSend,\n    isOverlayVisible: state.OverlayReducer.activeOverlay === CUSTOMER_ACCOUNT,\n    redirectToDashboard: state.ConfigReducer.redirect_dashboard,\n    isLoading: state.MyAccountReducer.isLoading\n});\n\n/** @namespace Component/MyAccountOverlay/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    hideActiveOverlay: () => dispatch(hideActiveOverlay()),\n    showNotification: (type, message) => dispatch(showNotification(type, message)),\n    showOverlay: (overlayKey) => dispatch(toggleOverlayByKey(overlayKey)),\n    setHeaderState: (headerState) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, headerState)),\n    goToPreviousHeaderState: () => dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE))\n});\n\n/** @namespace Component/MyAccountOverlay/Container */\nexport class MyAccountOverlayContainer extends PureComponent {\n    static propTypes = {\n        isPasswordForgotSend: PropTypes.bool.isRequired,\n        isSignedIn: PropTypes.bool.isRequired,\n        showNotification: PropTypes.func.isRequired,\n        isOverlayVisible: PropTypes.bool.isRequired,\n        showOverlay: PropTypes.func.isRequired,\n        setHeaderState: PropTypes.func.isRequired,\n        onSignIn: PropTypes.func,\n        goToPreviousHeaderState: PropTypes.func,\n        isCheckout: PropTypes.bool,\n        hideActiveOverlay: PropTypes.func.isRequired,\n        device: DeviceType.isRequired,\n        redirectToDashboard: PropTypes.bool.isRequired,\n        isLoading: PropTypes.bool\n    };\n\n    static defaultProps = {\n        isCheckout: false,\n        isLoading: false,\n        onSignIn: () => {},\n        goToPreviousHeaderState: () => {}\n    };\n\n    containerFunctions = {\n        onFormError: this.onFormError.bind(this),\n        handleForgotPassword: this.handleForgotPassword.bind(this),\n        handleSignIn: this.handleSignIn.bind(this),\n        handleCreateAccount: this.handleCreateAccount.bind(this),\n        onVisible: this.onVisible.bind(this),\n        setSignInState: this.setSignInState.bind(this),\n        setLoadingState: this.setLoadingState.bind(this)\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        this.state = this.redirectOrGetState(props);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const {\n            isPasswordForgotSend,\n            showNotification,\n            isOverlayVisible,\n            device\n        } = props;\n\n        const {\n            isPasswordForgotSend: currentIsPasswordForgotSend,\n            state: myAccountState\n        } = state;\n\n        const { location: { pathname, state: { isForgotPassword } = {} } } = history;\n\n        const stateToBeUpdated = {};\n        const customerIsSignedIn = isSignedIn();\n\n        if (!device.isMobile) {\n            if (!isOverlayVisible && !customerIsSignedIn) {\n                if (pathname !== '/forgot-password' && !isForgotPassword) {\n                    stateToBeUpdated.state = STATE_SIGN_IN;\n                }\n            } else if (!isOverlayVisible && customerIsSignedIn) {\n                stateToBeUpdated.state = STATE_LOGGED_IN;\n            }\n        }\n\n        if (myAccountState !== STATE_LOGGED_IN && customerIsSignedIn) {\n            stateToBeUpdated.isLoading = false;\n            stateToBeUpdated.state = STATE_LOGGED_IN;\n        }\n\n        if (myAccountState === STATE_LOGGED_IN && !customerIsSignedIn) {\n            stateToBeUpdated.state = STATE_SIGN_IN;\n        }\n\n        if (isPasswordForgotSend !== currentIsPasswordForgotSend) {\n            stateToBeUpdated.isLoading = false;\n            stateToBeUpdated.isPasswordForgotSend = isPasswordForgotSend;\n            // eslint-disable-next-line max-len\n            showNotification('success', __('If there is an account associated with the provided address you will receive an email with a link to reset your password.'));\n            stateToBeUpdated.state = STATE_SIGN_IN;\n        }\n\n        return Object.keys(stateToBeUpdated).length ? stateToBeUpdated : null;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { isSignedIn: prevIsSignedIn } = prevProps;\n        const { state: oldMyAccountState } = prevState;\n        const { state: newMyAccountState } = this.state;\n        const { location: { pathname } } = history;\n\n        const {\n            isSignedIn,\n            hideActiveOverlay,\n            isCheckout,\n            goToPreviousHeaderState,\n            redirectToDashboard\n        } = this.props;\n\n        if (oldMyAccountState === newMyAccountState) {\n            return;\n        }\n\n        if (isSignedIn !== prevIsSignedIn) {\n            hideActiveOverlay();\n\n            if (isCheckout) {\n                goToPreviousHeaderState();\n            }\n        }\n\n        if (newMyAccountState !== STATE_LOGGED_IN && pathname.includes(MY_ACCOUNT_URL)) {\n            history.push({ pathname: appendWithStoreCode(ACCOUNT_LOGIN_URL) });\n        }\n\n        if (newMyAccountState === STATE_LOGGED_IN) {\n            if (pathname.includes(ACCOUNT_URL)) {\n                history.push({ pathname: appendWithStoreCode('/') });\n            } else if (!pathname.includes(CHECKOUT_URL) && redirectToDashboard) {\n                history.push({ pathname: appendWithStoreCode('/my-account/dashboard') });\n            }\n        }\n    }\n\n    containerProps() {\n        const { props, state } = this;\n\n        return {\n            isLoading: props.isLoading || state.isLoading\n        };\n    }\n\n    setSignInState(state) {\n        this.setState({ state });\n    }\n\n    setLoadingState(isLoading) {\n        this.setState({ isLoading });\n    }\n\n    redirectOrGetState = (props) => {\n        const {\n            showOverlay,\n            setHeaderState,\n            isPasswordForgotSend,\n            device\n        } = props;\n\n        const { location: { pathname, state: { isForgotPassword } = {} } } = history;\n\n        const state = {\n            state: isSignedIn() ? STATE_LOGGED_IN : STATE_SIGN_IN,\n            // eslint-disable-next-line react/no-unused-state\n            isPasswordForgotSend,\n            isLoading: false\n        };\n\n        // if customer got here from forgot-password\n        if (pathname !== '/forgot-password' && !isForgotPassword) {\n            return state;\n        }\n\n        state.state = STATE_FORGOT_PASSWORD;\n\n        setHeaderState({\n            name: CUSTOMER_SUB_ACCOUNT,\n            title: 'Forgot password',\n            onBackClick: (e) => {\n                history.push({ pathname: appendWithStoreCode('/my-account') });\n                this.handleSignIn(e);\n            }\n        });\n\n        if (device.isMobile) {\n            history.push({ pathname: appendWithStoreCode('/my-account'), state: { isForgotPassword: true } });\n            return state;\n        }\n\n        showOverlay(CUSTOMER_ACCOUNT_OVERLAY_KEY);\n\n        return state;\n    };\n\n    onVisible() {\n        const { setHeaderState, isCheckout, device } = this.props;\n\n        if (device.isMobile && !isCheckout) {\n            setHeaderState({ name: CUSTOMER_ACCOUNT, title: __('Sign in') });\n        }\n    }\n\n    onFormError() {\n        this.setState({ isLoading: false });\n    }\n\n    stopLoading = () => this.setState({ isLoading: false });\n\n    stopLoadingAndHideOverlay = () => {\n        const { hideActiveOverlay } = this.props;\n        this.stopLoading();\n        hideActiveOverlay();\n    };\n\n    handleForgotPassword(e) {\n        const { setHeaderState } = this.props;\n        e.preventDefault();\n        e.nativeEvent.stopImmediatePropagation();\n        this.setState({ state: STATE_FORGOT_PASSWORD });\n\n        setHeaderState({\n            name: CUSTOMER_SUB_ACCOUNT,\n            title: __('Forgot password'),\n            onBackClick: () => this.handleSignIn(e)\n        });\n    }\n\n    handleSignIn(e) {\n        const { setHeaderState } = this.props;\n        e.preventDefault();\n        e.nativeEvent.stopImmediatePropagation();\n        this.setState({ state: STATE_SIGN_IN });\n\n        setHeaderState({\n            name: CUSTOMER_ACCOUNT,\n            title: __('Sign in')\n        });\n    }\n\n    handleCreateAccount(e) {\n        const { setHeaderState } = this.props;\n        e.preventDefault();\n        e.nativeEvent.stopImmediatePropagation();\n        this.setState({ state: STATE_CREATE_ACCOUNT });\n\n        setHeaderState({\n            name: CUSTOMER_SUB_ACCOUNT,\n            title: __('Create account'),\n            onBackClick: () => this.handleSignIn(e)\n        });\n    }\n\n    render() {\n        return (\n            <MyAccountOverlay\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountOverlayContainer);\n"]},"metadata":{},"sourceType":"module"}