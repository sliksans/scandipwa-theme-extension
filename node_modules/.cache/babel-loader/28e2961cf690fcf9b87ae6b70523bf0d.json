{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductReviewForm/ProductReviewForm.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { goToPreviousNavigationState } from \"/home/arturs/scandiweb/extension/src/store/Navigation/Navigation.action\";\nimport { TOP_NAVIGATION_TYPE } from \"/home/arturs/scandiweb/extension/src/store/Navigation/Navigation.reducer\";\nimport { showNotification } from \"/home/arturs/scandiweb/extension/src/store/Notification/Notification.action\";\nimport { hideActiveOverlay } from \"/home/arturs/scandiweb/extension/src/store/Overlay/Overlay.action\";\nimport { customerType } from \"/home/arturs/scandiweb/extension/src/type/Account\";\nimport { ProductType } from \"/home/arturs/scandiweb/extension/src/type/ProductList\";\nimport { RatingItemsType } from \"/home/arturs/scandiweb/extension/src/type/Rating\";\nimport ProductReviewForm from \"./ProductReviewForm.component\";\nexport const ReviewDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/extension/src/store/Review/Review.dispatcher\");\n/** #namespace Component/ProductReviewForm/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    customer: state.MyAccountReducer.customer,\n    reviewRatings: state.ConfigReducer.reviewRatings\n  };\n}, \"Component/ProductReviewForm/Container/mapStateToProps\");\n/** #namespace Component/ProductReviewForm/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    addReview: function (options) {\n      return ReviewDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.submitProductReview(dispatch, options);\n      });\n    },\n    showNotification: function (type, message) {\n      return dispatch(showNotification(type, message));\n    },\n    hideActiveOverlay: function () {\n      return dispatch(hideActiveOverlay());\n    },\n    goToPreviousHeaderState: function () {\n      return dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE));\n    }\n  };\n}, \"Component/ProductReviewForm/Container/mapDispatchToProps\");\n/** #namespace Component/ProductReviewForm/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductReviewFormContainer = Mosaic.middleware((_temp = _class = class ProductReviewFormContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.containerFunctions = {\n      onReviewSubmitAttempt: this._onReviewSubmitAttempt.bind(this),\n      onReviewSubmitSuccess: this._onReviewSubmitSuccess.bind(this),\n      onStarRatingClick: this._onStarRatingClick.bind(this),\n      handleNicknameChange: this._handleFieldChange.bind(this, 'nickname'),\n      handleSummaryChange: this._handleFieldChange.bind(this, 'summary'),\n      handleDetailChange: this._handleFieldChange.bind(this, 'detail'),\n      onReviewError: this._onReviewError.bind(this)\n    };\n  }\n\n  __construct(props) {\n    super.__construct(props);\n\n    const {\n      customer: {\n        firstname: nickname\n      }\n    } = this.props;\n    const reviewData = {\n      nickname\n    };\n    this.state = {\n      isLoading: false,\n      ratingData: {},\n      reviewData,\n      isSubmitted: false\n    };\n  }\n\n  _onReviewError(_, invalidFields) {\n    const {\n      showNotification\n    } = this.props;\n    const reviewsAreNotValid = invalidFields;\n\n    if (reviewsAreNotValid) {\n      showNotification('info', __('Incorrect data! Please check review fields.'));\n    }\n\n    this.setState({\n      isLoading: !reviewsAreNotValid\n    });\n  }\n\n  _onReviewSubmitAttempt() {\n    const {\n      showNotification,\n      reviewRatings\n    } = this.props;\n    const {\n      ratingData,\n      isSubmitted\n    } = this.state;\n    const reviewsAreNotValid = !reviewRatings.every(function ({\n      rating_id\n    }) {\n      return ratingData[rating_id];\n    });\n\n    if (reviewsAreNotValid) {\n      showNotification('info', __('Please fill all rating fields.'));\n    }\n\n    this.setState({\n      isSubmitted: !isSubmitted,\n      isLoading: !reviewsAreNotValid\n    });\n  }\n\n  _onReviewSubmitSuccess(fields) {\n    var _this = this;\n\n    const {\n      product,\n      addReview,\n      hideActiveOverlay,\n      goToPreviousHeaderState\n    } = this.props;\n    const {\n      ratingData: rating_data,\n      isLoading\n    } = this.state;\n    const {\n      nickname,\n      title,\n      detail\n    } = fields;\n    const {\n      sku: product_sku\n    } = product;\n\n    if (Object.keys(rating_data).length && isLoading) {\n      addReview({\n        nickname,\n        title,\n        detail,\n        product_sku,\n        rating_data\n      }).then(\n      /** #namespace Component/ProductReviewForm/Container/addReviewThen */\n      Mosaic.middleware(function (success) {\n        if (success) {\n          _this.setState({\n            ratingData: {},\n            reviewData: {},\n            isLoading: false\n          });\n\n          goToPreviousHeaderState();\n          hideActiveOverlay();\n          return;\n        }\n\n        _this.setState({\n          isLoading: false\n        });\n      }, \"Component/ProductReviewForm/Container/addReviewThen\"));\n    }\n  }\n\n  _onStarRatingClick(rating_id, option_id) {\n    this.setState(function ({\n      ratingData\n    }) {\n      return {\n        ratingData: { ...ratingData,\n          [rating_id]: option_id\n        }\n      };\n    });\n  }\n\n  _handleFieldChange(fieldName, value) {\n    this.setState(function ({\n      reviewData\n    }) {\n      return {\n        reviewData: { ...reviewData,\n          [fieldName]: value\n        }\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, ProductReviewForm, Object.assign({}, this.props, this.containerFunctions, this.state, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  showNotification: PropTypes.func.isRequired,\n  goToPreviousHeaderState: PropTypes.func.isRequired,\n  hideActiveOverlay: PropTypes.func.isRequired,\n  reviewRatings: RatingItemsType.isRequired,\n  product: ProductType.isRequired,\n  addReview: PropTypes.func.isRequired,\n  customer: customerType.isRequired\n}, _temp), \"Component/ProductReviewForm/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductReviewFormContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductReviewForm/ProductReviewForm.container.js"],"names":["PropTypes","PureComponent","connect","goToPreviousNavigationState","TOP_NAVIGATION_TYPE","showNotification","hideActiveOverlay","customerType","ProductType","RatingItemsType","ProductReviewForm","ReviewDispatcher","mapStateToProps","state","customer","MyAccountReducer","reviewRatings","ConfigReducer","mapDispatchToProps","dispatch","addReview","options","then","default","dispatcher","submitProductReview","type","message","goToPreviousHeaderState","containerFunctions","onReviewSubmitAttempt","_onReviewSubmitAttempt","bind","onReviewSubmitSuccess","_onReviewSubmitSuccess","onStarRatingClick","_onStarRatingClick","handleNicknameChange","_handleFieldChange","handleSummaryChange","handleDetailChange","onReviewError","_onReviewError","__construct","props","firstname","nickname","reviewData","isLoading","ratingData","isSubmitted","_","invalidFields","reviewsAreNotValid","__","setState","every","rating_id","fields","product","rating_data","title","detail","sku","product_sku","Object","keys","length","success","option_id","fieldName","value","render","propTypes","func","isRequired","ProductReviewFormContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { goToPreviousNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { hideActiveOverlay } from 'Store/Overlay/Overlay.action';\nimport { customerType } from 'Type/Account';\nimport { ProductType } from 'Type/ProductList';\nimport { RatingItemsType } from 'Type/Rating';\n\nimport ProductReviewForm from './ProductReviewForm.component';\n\nexport const ReviewDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Review/Review.dispatcher'\n);\n\n/** @namespace Component/ProductReviewForm/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    customer: state.MyAccountReducer.customer,\n    reviewRatings: state.ConfigReducer.reviewRatings\n});\n\n/** @namespace Component/ProductReviewForm/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    addReview: (options) => ReviewDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.submitProductReview(dispatch, options)\n    ),\n    showNotification: (type, message) => dispatch(showNotification(type, message)),\n    hideActiveOverlay: () => dispatch(hideActiveOverlay()),\n    goToPreviousHeaderState: () => dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE))\n});\n\n/** @namespace Component/ProductReviewForm/Container */\nexport class ProductReviewFormContainer extends PureComponent {\n    static propTypes = {\n        showNotification: PropTypes.func.isRequired,\n        goToPreviousHeaderState: PropTypes.func.isRequired,\n        hideActiveOverlay: PropTypes.func.isRequired,\n        reviewRatings: RatingItemsType.isRequired,\n        product: ProductType.isRequired,\n        addReview: PropTypes.func.isRequired,\n        customer: customerType.isRequired\n    };\n\n    containerFunctions = ({\n        onReviewSubmitAttempt: this._onReviewSubmitAttempt.bind(this),\n        onReviewSubmitSuccess: this._onReviewSubmitSuccess.bind(this),\n        onStarRatingClick: this._onStarRatingClick.bind(this),\n        handleNicknameChange: this._handleFieldChange.bind(this, 'nickname'),\n        handleSummaryChange: this._handleFieldChange.bind(this, 'summary'),\n        handleDetailChange: this._handleFieldChange.bind(this, 'detail'),\n        onReviewError: this._onReviewError.bind(this)\n    });\n\n    __construct(props) {\n        super.__construct(props);\n\n        const { customer: { firstname: nickname } } = this.props;\n        const reviewData = { nickname };\n\n        this.state = {\n            isLoading: false,\n            ratingData: {},\n            reviewData,\n            isSubmitted: false\n        };\n    }\n\n    _onReviewError(_, invalidFields) {\n        const { showNotification } = this.props;\n        const reviewsAreNotValid = invalidFields;\n\n        if (reviewsAreNotValid) {\n            showNotification('info', __('Incorrect data! Please check review fields.'));\n        }\n\n        this.setState({ isLoading: !reviewsAreNotValid });\n    }\n\n    _onReviewSubmitAttempt() {\n        const { showNotification, reviewRatings } = this.props;\n        const { ratingData, isSubmitted } = this.state;\n        const reviewsAreNotValid = !reviewRatings.every(({ rating_id }) => ratingData[rating_id]);\n\n        if (reviewsAreNotValid) {\n            showNotification('info', __('Please fill all rating fields.'));\n        }\n\n        this.setState({ isSubmitted: !isSubmitted, isLoading: !reviewsAreNotValid });\n    }\n\n    _onReviewSubmitSuccess(fields) {\n        const {\n            product,\n            addReview,\n            hideActiveOverlay,\n            goToPreviousHeaderState\n        } = this.props;\n\n        const { ratingData: rating_data, isLoading } = this.state;\n\n        const {\n            nickname,\n            title,\n            detail\n        } = fields;\n\n        const { sku: product_sku } = product;\n\n        if (Object.keys(rating_data).length && isLoading) {\n            addReview({\n                nickname,\n                title,\n                detail,\n                product_sku,\n                rating_data\n            }).then(\n                /** @namespace Component/ProductReviewForm/Container/addReviewThen */\n                (success) => {\n                    if (success) {\n                        this.setState({\n                            ratingData: {},\n                            reviewData: {},\n                            isLoading: false\n                        });\n\n                        goToPreviousHeaderState();\n                        hideActiveOverlay();\n\n                        return;\n                    }\n\n                    this.setState({ isLoading: false });\n                }\n            );\n        }\n    }\n\n    _onStarRatingClick(rating_id, option_id) {\n        this.setState(({ ratingData }) => ({\n            ratingData: { ...ratingData, [rating_id]: option_id }\n        }));\n    }\n\n    _handleFieldChange(fieldName, value) {\n        this.setState(({ reviewData }) => ({\n            reviewData: { ...reviewData, [fieldName]: value }\n        }));\n    }\n\n    render() {\n        return (\n            <ProductReviewForm\n              { ...this.props }\n              { ...this.containerFunctions }\n              { ...this.state }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductReviewFormContainer);\n"]},"metadata":{},"sourceType":"module"}