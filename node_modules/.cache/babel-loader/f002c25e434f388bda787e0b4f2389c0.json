{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductBundleItem/ProductBundleItem.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport Field from \"/home/arturs/scandiweb/scandipwa/src/component/Field\";\nimport ProductCustomizableOption from \"/home/arturs/scandiweb/scandipwa/src/component/ProductCustomizableOption/ProductCustomizableOption.component\";\nimport { CHECKBOX, MULTI, RADIO, SELECT } from \"./ProductBundleItem.config\";\nimport \"./ProductBundleItem.style\";\n/** #namespace Component/ProductBundleItem/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductBundleItem = Mosaic.middleware((_temp = _class = class ProductBundleItem_ extends Mosaic.Extensible(ProductCustomizableOption) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.renderMap = {\n      [CHECKBOX]: this.renderCheckboxValues.bind(this),\n      [MULTI]: this.renderCheckboxValues.bind(this),\n      [RADIO]: this.renderDropdownValues.bind(this),\n      [SELECT]: this.renderDropdownValues.bind(this)\n    };\n\n    this.renderOptionCheckboxValue = function (item) {\n      const {\n        currencyCode,\n        getSelectedCheckboxValue,\n        renderOptionLabel\n      } = _this.props;\n\n      if (!item.product) {\n        return null;\n      }\n\n      const {\n        id,\n        label,\n        price_type,\n        quantity,\n        is_default,\n        finalOptionPrice,\n        price\n      } = item;\n      const priceLabel = renderOptionLabel(price_type, finalOptionPrice, price, currencyCode);\n      return /*#__PURE__*/_checkBEM(React, \"div\", {\n        key: id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/_checkBEM(React, Field, {\n        type: \"checkbox\",\n        label: _this.renderHeading(label, priceLabel, quantity),\n        id: `option-${id}`,\n        name: `option-${id}`,\n        value: id,\n        checked: is_default,\n        onChange: getSelectedCheckboxValue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    this.renderQtyInput = function (item) {\n      const {\n        selectedDropdownValue,\n        setDropdownItemQuantity,\n        maxQuantity\n      } = _this.props;\n      const {\n        id,\n        quantity,\n        can_change_quantity\n      } = item;\n\n      if (id !== selectedDropdownValue || !can_change_quantity) {\n        return null;\n      }\n\n      return /*#__PURE__*/_checkBEM(React, Field, {\n        key: id,\n        id: \"item_qty\",\n        name: \"item_qty\",\n        type: \"number\",\n        value: quantity,\n        max: maxQuantity,\n        min: 1,\n        mix: {\n          block: 'ProductBundleItems',\n          elem: 'Qty'\n        },\n        onChange: setDropdownItemQuantity,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      });\n    };\n  }\n\n  renderHeading(mainTitle, titleBold, quantity) {\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, /*#__PURE__*/_checkBEM(React, \"span\", {\n      block: \"ProductBundleItem\",\n      elem: \"Heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, `${quantity} x ${mainTitle} `), /*#__PURE__*/_checkBEM(React, \"span\", {\n      block: \"ProductBundleItem\",\n      elem: \"HeadingBold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, titleBold));\n  }\n\n  renderOptionDropdownValues(values) {\n    const {\n      option: {\n        options\n      },\n      getDropdownOptions,\n      selectedDropdownValue,\n      setDropdownValue\n    } = this.props;\n    const dropdownOptions = getDropdownOptions(values);\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductBundleItem\",\n      elem: \"DropdownWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, Field, {\n      id: \"bundle-options-dropdown\",\n      name: \"bundle-options-dropdown\",\n      type: \"select\",\n      mix: {\n        block: 'ProductBundleItem',\n        elem: 'Select'\n      },\n      placeholder: __('Choose Option'),\n      selectOptions: dropdownOptions,\n      value: selectedDropdownValue,\n      onChange: setDropdownValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }), options.map(this.renderQtyInput));\n  }\n\n  renderCheckboxValues() {\n    const {\n      option: {\n        required,\n        options\n      }\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, options.map(this.renderOptionCheckboxValue), this.renderRequired(required));\n  }\n\n  renderDropdownValues() {\n    const {\n      option: {\n        required,\n        options\n      }\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, this.renderOptionDropdownValues(options), this.renderRequired(required));\n  }\n\n  render() {\n    const {\n      optionType\n    } = this.props;\n    const render = this.renderMap[optionType];\n\n    if (!render) {\n      return null;\n    }\n\n    const {\n      option: {\n        title\n      }\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductBundleItem\",\n      elem: \"Wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductBundleItem\",\n      elem: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, title), render());\n  }\n\n}, _class.propTypes = { ...ProductCustomizableOption.propTypes,\n  maxQuantity: PropTypes.number.isRequired,\n  setDropdownItemQuantity: PropTypes.func.isRequired\n}, _temp), \"Component/ProductBundleItem/Component\");\nexport default ProductBundleItem;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductBundleItem/ProductBundleItem.component.js"],"names":["PropTypes","Field","ProductCustomizableOption","CHECKBOX","MULTI","RADIO","SELECT","renderMap","renderCheckboxValues","bind","renderDropdownValues","renderOptionCheckboxValue","item","currencyCode","getSelectedCheckboxValue","renderOptionLabel","props","product","id","label","price_type","quantity","is_default","finalOptionPrice","price","priceLabel","renderHeading","renderQtyInput","selectedDropdownValue","setDropdownItemQuantity","maxQuantity","can_change_quantity","block","elem","mainTitle","titleBold","renderOptionDropdownValues","values","option","options","getDropdownOptions","setDropdownValue","dropdownOptions","__","map","required","renderRequired","render","optionType","title","propTypes","number","isRequired","func","ProductBundleItem"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport Field from 'Component/Field';\nimport ProductCustomizableOption from 'Component/ProductCustomizableOption/ProductCustomizableOption.component';\n\nimport {\n    CHECKBOX,\n    MULTI,\n    RADIO,\n    SELECT\n} from './ProductBundleItem.config';\n\nimport './ProductBundleItem.style';\n\n/** @namespace Component/ProductBundleItem/Component */\nexport class ProductBundleItem extends ProductCustomizableOption {\n    static propTypes = {\n        ...ProductCustomizableOption.propTypes,\n        maxQuantity: PropTypes.number.isRequired,\n        setDropdownItemQuantity: PropTypes.func.isRequired\n    };\n\n    renderMap = {\n        [CHECKBOX]: this.renderCheckboxValues.bind(this),\n        [MULTI]: this.renderCheckboxValues.bind(this),\n        [RADIO]: this.renderDropdownValues.bind(this),\n        [SELECT]: this.renderDropdownValues.bind(this)\n    };\n\n    renderHeading(mainTitle, titleBold, quantity) {\n        return (\n            <>\n                <span\n                  block=\"ProductBundleItem\"\n                  elem=\"Heading\"\n                >\n                    { `${ quantity } x ${ mainTitle } ` }\n                </span>\n                <span\n                  block=\"ProductBundleItem\"\n                  elem=\"HeadingBold\"\n                >\n                    { titleBold }\n                </span>\n            </>\n        );\n    }\n\n    renderOptionCheckboxValue = (item) => {\n        const {\n            currencyCode,\n            getSelectedCheckboxValue,\n            renderOptionLabel\n        } = this.props;\n\n        if (!item.product) {\n            return null;\n        }\n\n        const {\n            id,\n            label,\n            price_type,\n            quantity,\n            is_default,\n            finalOptionPrice,\n            price\n        } = item;\n\n        const priceLabel = renderOptionLabel(price_type, finalOptionPrice, price, currencyCode);\n\n        return (\n            <div key={ id }>\n                <Field\n                  type=\"checkbox\"\n                  label={ this.renderHeading(label, priceLabel, quantity) }\n                  id={ `option-${ id }` }\n                  name={ `option-${ id }` }\n                  value={ id }\n                  checked={ is_default }\n                  onChange={ getSelectedCheckboxValue }\n                />\n            </div>\n        );\n    };\n\n    renderQtyInput = (item) => {\n        const {\n            selectedDropdownValue,\n            setDropdownItemQuantity,\n            maxQuantity\n        } = this.props;\n        const { id, quantity, can_change_quantity } = item;\n\n        if (id !== selectedDropdownValue || !can_change_quantity) {\n            return null;\n        }\n\n        return (\n            <Field\n              key={ id }\n              id=\"item_qty\"\n              name=\"item_qty\"\n              type=\"number\"\n              value={ quantity }\n              max={ maxQuantity }\n              min={ 1 }\n              mix={ { block: 'ProductBundleItems', elem: 'Qty' } }\n              onChange={ setDropdownItemQuantity }\n            />\n        );\n    };\n\n    renderOptionDropdownValues(values) {\n        const {\n            option: { options },\n            getDropdownOptions,\n            selectedDropdownValue,\n            setDropdownValue\n        } = this.props;\n        const dropdownOptions = getDropdownOptions(values);\n\n        return (\n            <div block=\"ProductBundleItem\" elem=\"DropdownWrapper\">\n                <Field\n                  id=\"bundle-options-dropdown\"\n                  name=\"bundle-options-dropdown\"\n                  type=\"select\"\n                  mix={ { block: 'ProductBundleItem', elem: 'Select' } }\n                  placeholder={ __('Choose Option') }\n                  selectOptions={ dropdownOptions }\n                  value={ selectedDropdownValue }\n                  onChange={ setDropdownValue }\n                />\n                { options.map(this.renderQtyInput) }\n            </div>\n        );\n    }\n\n    renderCheckboxValues() {\n        const { option: { required, options } } = this.props;\n\n        return (\n            <>\n                { options.map(this.renderOptionCheckboxValue) }\n                { this.renderRequired(required) }\n            </>\n        );\n    }\n\n    renderDropdownValues() {\n        const { option: { required, options } } = this.props;\n\n        return (\n            <>\n                { this.renderOptionDropdownValues(options) }\n                { this.renderRequired(required) }\n            </>\n        );\n    }\n\n    render() {\n        const { optionType } = this.props;\n        const render = this.renderMap[optionType];\n\n        if (!render) {\n            return null;\n        }\n\n        const { option: { title } } = this.props;\n\n        return (\n            <div block=\"ProductBundleItem\" elem=\"Wrapper\">\n                <div block=\"ProductBundleItem\" elem=\"Title\">\n                    { title }\n                </div>\n                { render() }\n            </div>\n        );\n    }\n}\n\nexport default ProductBundleItem;\n"]},"metadata":{},"sourceType":"module"}