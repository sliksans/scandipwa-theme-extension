{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductBundleItem/ProductBundleItem.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { mapDispatchToProps, mapStateToProps, ProductCustomizableOptionContainer } from \"/home/arturs/scandiweb/extension/src/component/ProductCustomizableOption/ProductCustomizableOption.container\";\nimport ProductBundleItem from \"./ProductBundleItem.component\";\n/** #namespace Component/ProductBundleItem/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductBundleItemContainer = Mosaic.middleware((_temp = _class = class ProductBundleItemContainer_ extends Mosaic.Extensible(ProductCustomizableOptionContainer) {\n  constructor(...args) {\n    super(...args);\n    this.containerFunctions = { ...this.containerFunctions,\n      setDropdownItemQuantity: this.setDropdownItemQuantity.bind(this)\n    };\n  }\n\n  componentDidMount() {\n    this.getDefaultValues();\n  }\n\n  getDefaultValues() {\n    const {\n      optionType\n    } = this.containerProps();\n\n    switch (optionType) {\n      case 'select':\n      case 'radio':\n        // handle radio as select\n        this.setDefaultDropdownValue();\n        break;\n\n      case 'checkbox':\n      case 'multi':\n        // handle multi-select as checkbox\n        this.setDefaultCheckboxValue();\n        break;\n\n      default:\n        return null;\n    }\n\n    return null;\n  }\n\n  setDefaultDropdownValue() {\n    var _this = this;\n\n    const {\n      setSelectedDropdownValue,\n      option: {\n        option_id,\n        options\n      }\n    } = this.props;\n    return options.reduce(function (acc, {\n      is_default,\n      id,\n      quantity\n    }) {\n      if (is_default) {\n        const value = id.toString();\n        setSelectedDropdownValue(option_id, {\n          value,\n          quantity\n        });\n\n        _this.setState({\n          selectedDropdownValue: id\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  setDefaultCheckboxValue() {\n    const {\n      option: {\n        option_id,\n        options\n      },\n      setSelectedCheckboxValues\n    } = this.props;\n    return options.reduce(function (acc, {\n      is_default,\n      id,\n      quantity\n    }) {\n      if (is_default) {\n        const value = id.toString();\n        setSelectedCheckboxValues(option_id, {\n          value,\n          quantity\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  getIsRequiredSelected() {\n    const {\n      productOptionsData,\n      productOptionsData: {\n        requiredOptions,\n        productOptions,\n        productOptionsMulti\n      },\n      option: {\n        option_id\n      }\n    } = this.props;\n\n    if (Object.keys(productOptionsData).length < 1 || !requiredOptions) {\n      return true;\n    }\n\n    const selectedItems = [...(productOptions || []), ...(productOptionsMulti || [])];\n    const isRequired = requiredOptions.reduce(function (acc, item) {\n      if (item === option_id) {\n        acc.push(item);\n      }\n\n      return acc;\n    }, []);\n\n    if (!isRequired.length) {\n      return true;\n    }\n\n    const isRequiredSelected = selectedItems.reduce(function (acc, {\n      id\n    }) {\n      if (isRequired[0] === id) {\n        acc.push(id);\n      }\n\n      return acc;\n    }, []);\n    return !!isRequiredSelected.length;\n  }\n\n  getSelectedCheckboxValue(value) {\n    const {\n      option: {\n        option_id\n      },\n      setSelectedCheckboxValues\n    } = this.props;\n    const selectedValue = this.getSelectedOptionData(value);\n    setSelectedCheckboxValues(option_id, selectedValue);\n  }\n\n  setDropdownItemQuantity(quantity) {\n    const {\n      setSelectedDropdownValue,\n      option: {\n        option_id\n      }\n    } = this.props;\n    const {\n      selectedDropdownValue\n    } = this.state;\n    const value = selectedDropdownValue.toString();\n    const selectedValue = {\n      value,\n      quantity\n    };\n    setSelectedDropdownValue(option_id, selectedValue);\n  }\n\n  setDropdownValue(value) {\n    const {\n      setSelectedDropdownValue,\n      option,\n      option: {\n        option_id\n      }\n    } = this.props;\n    const {\n      selectedDropdownValue\n    } = this.state;\n\n    if (selectedDropdownValue === value) {\n      setSelectedDropdownValue(null, option);\n      this.setState({\n        selectedDropdownValue: 0\n      });\n    } else {\n      this.setState({\n        selectedDropdownValue: parseInt(value, 10)\n      });\n      const selectedValue = this.getSelectedOptionData(value.toString());\n      setSelectedDropdownValue(option_id, selectedValue);\n    }\n  }\n\n  getSelectedOptionData(optionId) {\n    const {\n      option: {\n        options\n      }\n    } = this.props;\n    return options.reduce(function (parameters, {\n      id,\n      quantity\n    }) {\n      const value = id.toString();\n\n      if (optionId === value) {\n        return {\n          value,\n          quantity\n        };\n      }\n\n      return parameters;\n    }, {});\n  }\n\n  getDropdownOptions(values) {\n    var _this2 = this;\n\n    const {\n      currencyCode\n    } = this.props;\n    return values.reduce(function (acc, {\n      id,\n      label,\n      price_type,\n      quantity,\n      can_change_quantity,\n      finalOptionPrice,\n      price\n    }) {\n      const optionLabel = _this2.renderOptionLabel(price_type, finalOptionPrice, price, currencyCode);\n\n      const dropdownLabel = !can_change_quantity ? `${quantity} x ${label} ${optionLabel}` : `${label} ${optionLabel}`;\n      acc.push({\n        id,\n        name: label,\n        value: id,\n        label: dropdownLabel\n      });\n      return acc;\n    }, []);\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, ProductBundleItem, Object.assign({}, this.props, this.state, this.containerFunctions, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = { ...ProductCustomizableOptionContainer.propTypes,\n  setCustomizableOptionTextFieldValue: PropTypes.func,\n  updateQuantity: PropTypes.func.isRequired\n}, _class.defaultProps = { ...ProductCustomizableOptionContainer.defaultProps,\n  setCustomizableOptionTextFieldValue: function () {}\n}, _temp), \"Component/ProductBundleItem/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductBundleItemContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductBundleItem/ProductBundleItem.container.js"],"names":["PropTypes","connect","mapDispatchToProps","mapStateToProps","ProductCustomizableOptionContainer","ProductBundleItem","containerFunctions","setDropdownItemQuantity","bind","componentDidMount","getDefaultValues","optionType","containerProps","setDefaultDropdownValue","setDefaultCheckboxValue","setSelectedDropdownValue","option","option_id","options","props","reduce","acc","is_default","id","quantity","value","toString","setState","selectedDropdownValue","setSelectedCheckboxValues","getIsRequiredSelected","productOptionsData","requiredOptions","productOptions","productOptionsMulti","Object","keys","length","selectedItems","isRequired","item","push","isRequiredSelected","getSelectedCheckboxValue","selectedValue","getSelectedOptionData","state","setDropdownValue","parseInt","optionId","parameters","getDropdownOptions","values","currencyCode","label","price_type","can_change_quantity","finalOptionPrice","price","optionLabel","renderOptionLabel","dropdownLabel","name","render","propTypes","setCustomizableOptionTextFieldValue","func","updateQuantity","defaultProps","ProductBundleItemContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n    mapDispatchToProps,\n    mapStateToProps,\n    ProductCustomizableOptionContainer\n} from 'Component/ProductCustomizableOption/ProductCustomizableOption.container';\n\nimport ProductBundleItem from './ProductBundleItem.component';\n\n/** @namespace Component/ProductBundleItem/Container */\nexport class ProductBundleItemContainer extends ProductCustomizableOptionContainer {\n    static propTypes = {\n        ...ProductCustomizableOptionContainer.propTypes,\n        setCustomizableOptionTextFieldValue: PropTypes.func,\n        updateQuantity: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        ...ProductCustomizableOptionContainer.defaultProps,\n        setCustomizableOptionTextFieldValue: () => {}\n    };\n\n    containerFunctions = {\n        ...this.containerFunctions,\n        setDropdownItemQuantity: this.setDropdownItemQuantity.bind(this)\n    };\n\n    componentDidMount() {\n        this.getDefaultValues();\n    }\n\n    getDefaultValues() {\n        const { optionType } = this.containerProps();\n\n        switch (optionType) {\n        case 'select':\n        case 'radio': // handle radio as select\n            this.setDefaultDropdownValue();\n            break;\n        case 'checkbox':\n        case 'multi': // handle multi-select as checkbox\n            this.setDefaultCheckboxValue();\n            break;\n        default:\n            return null;\n        }\n\n        return null;\n    }\n\n    setDefaultDropdownValue() {\n        const {\n            setSelectedDropdownValue,\n            option: { option_id, options }\n        } = this.props;\n\n        return options.reduce((acc, { is_default, id, quantity }) => {\n            if (is_default) {\n                const value = id.toString();\n                setSelectedDropdownValue(option_id, { value, quantity });\n                this.setState({ selectedDropdownValue: id });\n            }\n\n            return acc;\n        }, []);\n    }\n\n    setDefaultCheckboxValue() {\n        const { option: { option_id, options }, setSelectedCheckboxValues } = this.props;\n\n        return options.reduce((acc, { is_default, id, quantity }) => {\n            if (is_default) {\n                const value = id.toString();\n                setSelectedCheckboxValues(option_id, { value, quantity });\n            }\n\n            return acc;\n        }, []);\n    }\n\n    getIsRequiredSelected() {\n        const {\n            productOptionsData,\n            productOptionsData: {\n                requiredOptions,\n                productOptions,\n                productOptionsMulti\n            },\n            option: {\n                option_id\n            }\n        } = this.props;\n\n        if (Object.keys(productOptionsData).length < 1 || !requiredOptions) {\n            return true;\n        }\n\n        const selectedItems = [...productOptions || [], ...productOptionsMulti || []];\n        const isRequired = requiredOptions.reduce((acc, item) => {\n            if (item === option_id) {\n                acc.push(item);\n            }\n\n            return acc;\n        }, []);\n\n        if (!isRequired.length) {\n            return true;\n        }\n\n        const isRequiredSelected = selectedItems.reduce((acc, { id }) => {\n            if (isRequired[0] === id) {\n                acc.push(id);\n            }\n\n            return acc;\n        }, []);\n\n        return !!isRequiredSelected.length;\n    }\n\n    getSelectedCheckboxValue(value) {\n        const {\n            option: { option_id },\n            setSelectedCheckboxValues\n        } = this.props;\n        const selectedValue = this.getSelectedOptionData(value);\n\n        setSelectedCheckboxValues(option_id, selectedValue);\n    }\n\n    setDropdownItemQuantity(quantity) {\n        const { setSelectedDropdownValue, option: { option_id } } = this.props;\n        const { selectedDropdownValue } = this.state;\n        const value = selectedDropdownValue.toString();\n        const selectedValue = { value, quantity };\n\n        setSelectedDropdownValue(option_id, selectedValue);\n    }\n\n    setDropdownValue(value) {\n        const { setSelectedDropdownValue, option, option: { option_id } } = this.props;\n        const { selectedDropdownValue } = this.state;\n\n        if (selectedDropdownValue === value) {\n            setSelectedDropdownValue(null, option);\n            this.setState({ selectedDropdownValue: 0 });\n        } else {\n            this.setState({ selectedDropdownValue: parseInt(value, 10) });\n            const selectedValue = this.getSelectedOptionData(value.toString());\n            setSelectedDropdownValue(option_id, selectedValue);\n        }\n    }\n\n    getSelectedOptionData(optionId) {\n        const { option: { options } } = this.props;\n\n        return options.reduce(\n            (parameters, { id, quantity }) => {\n                const value = id.toString();\n\n                if (optionId === value) {\n                    return { value, quantity };\n                }\n\n                return parameters;\n            }, {}\n        );\n    }\n\n    getDropdownOptions(values) {\n        const {\n            currencyCode\n        } = this.props;\n\n        return values.reduce((acc, {\n            id,\n            label,\n            price_type,\n            quantity,\n            can_change_quantity,\n            finalOptionPrice,\n            price\n        }) => {\n            const optionLabel = this.renderOptionLabel(price_type, finalOptionPrice, price, currencyCode);\n            const dropdownLabel = !can_change_quantity\n                ? `${ quantity } x ${ label } ${ optionLabel }`\n                : `${ label } ${optionLabel}`;\n\n            acc.push({\n                id,\n                name: label,\n                value: id,\n                label: dropdownLabel\n            });\n\n            return acc;\n        }, []);\n    }\n\n    render() {\n        return (\n            <ProductBundleItem\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductBundleItemContainer);\n"]},"metadata":{},"sourceType":"module"}