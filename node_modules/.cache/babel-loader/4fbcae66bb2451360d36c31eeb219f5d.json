{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDownloadableTableRow/MyAccountDownloadableTableRow.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { ORDER_POPUP_ID } from \"/home/arturs/scandiweb/scandipwa/src/component/MyAccountOrderPopup/MyAccountOrderPopup.config\";\nimport { showPopup } from \"/home/arturs/scandiweb/scandipwa/src/store/Popup/Popup.action\";\nimport { downloadableType } from \"/home/arturs/scandiweb/scandipwa/src/type/Account\";\nimport { DeviceType } from \"/home/arturs/scandiweb/scandipwa/src/type/Device\";\nimport MyAccountDownloadableTableRow from \"./MyAccountDownloadableTableRow.component\";\n/** #namespace Component/MyAccountDownloadableTableRow/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    device: state.ConfigReducer.device,\n    orderList: state.OrderReducer.orderList,\n    isOpenInNewTab: state.ConfigReducer.downloadable_links_target_new_window\n  };\n}, \"Component/MyAccountDownloadableTableRow/Container/mapStateToProps\");\n/** #namespace Component/MyAccountDownloadableTableRow/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    showPopup: function (payload) {\n      return dispatch(showPopup(ORDER_POPUP_ID, payload));\n    }\n  };\n}, \"Component/MyAccountDownloadableTableRow/Container/mapDispatchToProps\");\n/** #namespace Component/MyAccountDownloadableTableRow/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountDownloadableTableRowContainer = Mosaic.middleware((_temp = _class = class MyAccountDownloadableTableRowContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.containerFunctions = {\n      onOrderIdClick: this.onOrderIdClick.bind(this)\n    };\n  }\n\n  onOrderIdClick() {\n    const {\n      showPopup,\n      orderList,\n      order: {\n        order_id\n      }\n    } = this.props;\n    const order = orderList.find(function (order) {\n      const {\n        base_order_info: {\n          increment_id\n        }\n      } = order;\n      return increment_id === order_id;\n    });\n    showPopup({\n      title: __('Order #%s', order_id),\n      increment_id: order_id,\n      order\n    });\n  }\n\n  containerProps() {\n    const {\n      device,\n      order,\n      isOpenInNewTab\n    } = this.props;\n    return {\n      order,\n      device,\n      isOpenInNewTab\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, MyAccountDownloadableTableRow, Object.assign({}, this.containerProps(), this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  showPopup: PropTypes.func.isRequired,\n  orderList: PropTypes.array.isRequired,\n  order: downloadableType.isRequired,\n  device: DeviceType.isRequired,\n  isOpenInNewTab: PropTypes.bool.isRequired\n}, _temp), \"Component/MyAccountDownloadableTableRow/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountDownloadableTableRowContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountDownloadableTableRow/MyAccountDownloadableTableRow.container.js"],"names":["PropTypes","PureComponent","connect","ORDER_POPUP_ID","showPopup","downloadableType","DeviceType","MyAccountDownloadableTableRow","mapStateToProps","state","device","ConfigReducer","orderList","OrderReducer","isOpenInNewTab","downloadable_links_target_new_window","mapDispatchToProps","dispatch","payload","containerFunctions","onOrderIdClick","bind","order","order_id","props","find","base_order_info","increment_id","title","__","containerProps","render","propTypes","func","isRequired","array","bool","MyAccountDownloadableTableRowContainer"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,cAAT;AACA,SAASC,SAAT;AACA,SAASC,gBAAT;AACA,SAASC,UAAT;AAEA,OAAOC,6BAAP;AAEA;;AACA,OAAO,MAAMC,eAAe,qBAAG,UAACC,KAAD;AAAA,SAAY;AACvCC,IAAAA,MAAM,EAAED,KAAK,CAACE,aAAN,CAAoBD,MADW;AAEvCE,IAAAA,SAAS,EAAEH,KAAK,CAACI,YAAN,CAAmBD,SAFS;AAGvCE,IAAAA,cAAc,EAAEL,KAAK,CAACE,aAAN,CAAoBI;AAHG,GAAZ;AAAA,CAAH,sEAArB;AAMP;;AACA,OAAO,MAAMC,kBAAkB,qBAAG,UAACC,QAAD;AAAA,SAAe;AAC7Cb,IAAAA,SAAS,EAAE,UAACc,OAAD;AAAA,aAAaD,QAAQ,CAACb,SAAS,CAACD,cAAD,EAAiBe,OAAjB,CAAV,CAArB;AAAA;AADkC,GAAf;AAAA,CAAH,yEAAxB;AAIP;;;;AACA,kKAA4DjB,aAA5D,EAA0E;AAAA;AAAA;AAAA,SAStEkB,kBATsE,GASjD;AACjBC,MAAAA,cAAc,EAAE,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB;AADC,KATiD;AAAA;;AAatED,EAAAA,cAAc,GAAG;AACb,UAAM;AAAEhB,MAAAA,SAAF;AAAaQ,MAAAA,SAAb;AAAwBU,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AAA/B,QAAgD,KAAKC,KAA3D;AAEA,UAAMF,KAAK,GAAGV,SAAS,CAACa,IAAV,CAAe,UAACH,KAAD,EAAW;AACpC,YAAM;AACFI,QAAAA,eAAe,EAAE;AACbC,UAAAA;AADa;AADf,UAIFL,KAJJ;AAMA,aAAOK,YAAY,KAAKJ,QAAxB;AACH,KARa,CAAd;AAUAnB,IAAAA,SAAS,CAAC;AACNwB,MAAAA,KAAK,EAAEC,EAAE,CAAC,WAAD,EAAcN,QAAd,CADH;AAENI,MAAAA,YAAY,EAAEJ,QAFR;AAGND,MAAAA;AAHM,KAAD,CAAT;AAKH;;AAEDQ,EAAAA,cAAc,GAAG;AACb,UAAM;AAAEpB,MAAAA,MAAF;AAAUY,MAAAA,KAAV;AAAiBR,MAAAA;AAAjB,QAAoC,KAAKU,KAA/C;AAEA,WAAQ;AACJF,MAAAA,KADI;AAEJZ,MAAAA,MAFI;AAGJI,MAAAA;AAHI,KAAR;AAKH;;AAEDiB,EAAAA,MAAM,GAAG;AACL,yCACK,6BADL,oBAEW,KAAKD,cAAL,EAFX,EAGW,KAAKX,kBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;;AAlDqE,CAA1E,SACWa,SADX,GACuB;AACf5B,EAAAA,SAAS,EAAEJ,SAAS,CAACiC,IAAV,CAAeC,UADX;AAEftB,EAAAA,SAAS,EAAEZ,SAAS,CAACmC,KAAV,CAAgBD,UAFZ;AAGfZ,EAAAA,KAAK,EAAEjB,gBAAgB,CAAC6B,UAHT;AAIfxB,EAAAA,MAAM,EAAEJ,UAAU,CAAC4B,UAJJ;AAKfpB,EAAAA,cAAc,EAAEd,SAAS,CAACoC,IAAV,CAAeF;AALhB,CADvB;AAqDA,eAAehC,OAAO,CAACM,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CqB,sCAA7C,CAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { ORDER_POPUP_ID } from 'Component/MyAccountOrderPopup/MyAccountOrderPopup.config';\nimport { showPopup } from 'Store/Popup/Popup.action';\nimport { downloadableType } from 'Type/Account';\nimport { DeviceType } from 'Type/Device';\n\nimport MyAccountDownloadableTableRow from './MyAccountDownloadableTableRow.component';\n\n/** @namespace Component/MyAccountDownloadableTableRow/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device,\n    orderList: state.OrderReducer.orderList,\n    isOpenInNewTab: state.ConfigReducer.downloadable_links_target_new_window\n});\n\n/** @namespace Component/MyAccountDownloadableTableRow/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showPopup: (payload) => dispatch(showPopup(ORDER_POPUP_ID, payload))\n});\n\n/** @namespace Component/MyAccountDownloadableTableRow/Container */\nexport class MyAccountDownloadableTableRowContainer extends PureComponent {\n    static propTypes = {\n        showPopup: PropTypes.func.isRequired,\n        orderList: PropTypes.array.isRequired,\n        order: downloadableType.isRequired,\n        device: DeviceType.isRequired,\n        isOpenInNewTab: PropTypes.bool.isRequired\n    };\n\n    containerFunctions = {\n        onOrderIdClick: this.onOrderIdClick.bind(this)\n    };\n\n    onOrderIdClick() {\n        const { showPopup, orderList, order: { order_id } } = this.props;\n\n        const order = orderList.find((order) => {\n            const {\n                base_order_info: {\n                    increment_id\n                }\n            } = order;\n\n            return increment_id === order_id;\n        });\n\n        showPopup({\n            title: __('Order #%s', order_id),\n            increment_id: order_id,\n            order\n        });\n    }\n\n    containerProps() {\n        const { device, order, isOpenInNewTab } = this.props;\n\n        return ({\n            order,\n            device,\n            isOpenInNewTab\n        });\n    }\n\n    render() {\n        return (\n            <MyAccountDownloadableTableRow\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountDownloadableTableRowContainer);\n"]},"metadata":{},"sourceType":"module"}