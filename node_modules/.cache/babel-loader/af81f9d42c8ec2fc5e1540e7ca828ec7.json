{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/TextPlaceholder/TextPlaceholder.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { MixType } from \"/home/arturs/scandiweb/scandipwa/src/type/Common\";\nimport \"./TextPlaceholder.style\";\n/**\n * Text placeholder\n * @class TextPlaceholder\n * #namespace Component/TextPlaceholder/Component\n */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const TextPlaceholder = Mosaic.middleware((_temp = _class = class TextPlaceholder_ extends Mosaic.Extensible(PureComponent) {\n  render() {\n    const {\n      content,\n      length,\n      mix\n    } = this.props;\n\n    if (content) {\n      return content;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"span\", {\n      mix: mix,\n      block: \"TextPlaceholder\",\n      mods: {\n        length\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }\n    });\n  }\n\n}, _class.propTypes = {\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number]),\n  length: PropTypes.oneOf(['block', 'short', 'medium', 'long', 'paragraph', 'custom']),\n  mix: MixType\n}, _class.defaultProps = {\n  content: '',\n  length: 'short',\n  mix: {}\n}, _temp), \"Component/TextPlaceholder/Component\");\nexport default TextPlaceholder;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/TextPlaceholder/TextPlaceholder.component.js"],"names":["PropTypes","PureComponent","MixType","render","content","length","mix","props","propTypes","oneOfType","string","bool","number","oneOf","defaultProps","TextPlaceholder"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,SAASC,OAAT;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;AACA,oHAAqCD,aAArC,EAAmD;AAwB/CE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBC,MAAAA;AAAnB,QAA2B,KAAKC,KAAtC;;AACA,QAAIH,OAAJ,EAAa;AACT,aAAOA,OAAP;AACH;;AAED;AAAa,MAAA,GAAG,EAAGE,GAAnB;AAAyB,MAAA,KAAK,EAAC,iBAA/B;AAAiD,MAAA,IAAI,EAAG;AAAED,QAAAA;AAAF,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AA/B8C,CAAnD,SACWG,SADX,GACuB;AACfJ,EAAAA,OAAO,EAAEJ,SAAS,CAACS,SAAV,CAAoB,CACzBT,SAAS,CAACU,MADe,EAEzBV,SAAS,CAACW,IAFe,EAGzBX,SAAS,CAACY,MAHe,CAApB,CADM;AAMfP,EAAAA,MAAM,EAAEL,SAAS,CAACa,KAAV,CAAgB,CACpB,OADoB,EAEpB,OAFoB,EAGpB,QAHoB,EAIpB,MAJoB,EAKpB,WALoB,EAMpB,QANoB,CAAhB,CANO;AAcfP,EAAAA,GAAG,EAAEJ;AAdU,CADvB,SAkBWY,YAlBX,GAkB0B;AAClBV,EAAAA,OAAO,EAAE,EADS;AAElBC,EAAAA,MAAM,EAAE,OAFU;AAGlBC,EAAAA,GAAG,EAAE;AAHa,CAlB1B;AAkCA,eAAeS,eAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { MixType } from 'Type/Common';\n\nimport './TextPlaceholder.style';\n\n/**\n * Text placeholder\n * @class TextPlaceholder\n * @namespace Component/TextPlaceholder/Component\n */\nexport class TextPlaceholder extends PureComponent {\n    static propTypes = {\n        content: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.bool,\n            PropTypes.number\n        ]),\n        length: PropTypes.oneOf([\n            'block',\n            'short',\n            'medium',\n            'long',\n            'paragraph',\n            'custom'\n        ]),\n        mix: MixType\n    };\n\n    static defaultProps = {\n        content: '',\n        length: 'short',\n        mix: {}\n    };\n\n    render() {\n        const { content, length, mix } = this.props;\n        if (content) {\n            return content;\n        }\n\n        return <span mix={ mix } block=\"TextPlaceholder\" mods={ { length } } />;\n    }\n}\n\nexport default TextPlaceholder;\n"]},"metadata":{},"sourceType":"module"}