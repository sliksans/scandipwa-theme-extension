{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/route/MyAccount/MyAccount.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { CUSTOMER_ACCOUNT, CUSTOMER_ACCOUNT_PAGE, CUSTOMER_WISHLIST } from \"/home/arturs/scandiweb/scandipwa/src/component/Header/Header.config\";\nimport { updateMeta } from \"/home/arturs/scandiweb/scandipwa/src/store/Meta/Meta.action\";\nimport { changeNavigationState } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.action\";\nimport { TOP_NAVIGATION_TYPE } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.reducer\";\nimport { toggleOverlayByKey } from \"/home/arturs/scandiweb/scandipwa/src/store/Overlay/Overlay.action\";\nimport { ADDRESS_BOOK, DASHBOARD, MY_DOWNLOADABLE, MY_ORDERS, MY_WISHLIST, NEWSLETTER_SUBSCRIPTION } from \"/home/arturs/scandiweb/scandipwa/src/type/Account\";\nimport { HistoryType, LocationType, MatchType } from \"/home/arturs/scandiweb/scandipwa/src/type/Common\";\nimport { DeviceType } from \"/home/arturs/scandiweb/scandipwa/src/type/Device\";\nimport { isSignedIn } from \"/home/arturs/scandiweb/scandipwa/src/util/Auth\";\nimport history from \"/home/arturs/scandiweb/scandipwa/src/util/History\";\nimport { appendWithStoreCode } from \"/home/arturs/scandiweb/scandipwa/src/util/Url\";\nimport MyAccount from \"./MyAccount.component\";\nimport { MY_ACCOUNT_URL } from \"./MyAccount.config\";\nexport const BreadcrumbsDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/scandipwa/src/store/Breadcrumbs/Breadcrumbs.dispatcher\");\nexport const MyAccountDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/scandipwa/src/store/MyAccount/MyAccount.dispatcher\");\n/** #namespace Route/MyAccount/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    device: state.ConfigReducer.device,\n    isWishlistEnabled: state.ConfigReducer.wishlist_general_active,\n    wishlistItems: state.WishlistReducer.productsInWishlist,\n    isSignedIn: state.MyAccountReducer.isSignedIn,\n    newsletterActive: state.ConfigReducer.newsletter_general_active\n  };\n}, \"Route/MyAccount/Container/mapStateToProps\");\n/** #namespace Route/MyAccount/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    updateBreadcrumbs: function (breadcrumbs) {\n      return BreadcrumbsDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.update(breadcrumbs, dispatch);\n      });\n    },\n    changeHeaderState: function (state) {\n      return dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state));\n    },\n    requestCustomerData: function () {\n      return MyAccountDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.requestCustomerData(dispatch);\n      });\n    },\n    toggleOverlayByKey: function (key) {\n      return dispatch(toggleOverlayByKey(key));\n    },\n    updateMeta: function (meta) {\n      return dispatch(updateMeta(meta));\n    }\n  };\n}, \"Route/MyAccount/Container/mapDispatchToProps\");\n/** #namespace Route/MyAccount/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountContainer = Mosaic.middleware((_temp = _class = class MyAccountContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.containerFunctions = {\n      changeActiveTab: this.changeActiveTab.bind(this),\n      onSignIn: this.onSignIn.bind(this),\n      onSignOut: this.onSignOut.bind(this)\n    };\n\n    this.getMyWishlistHeaderTitle = function () {\n      const {\n        wishlistItems\n      } = _this.props;\n      const {\n        length\n      } = Object.keys(wishlistItems);\n      return `${length} ${length === 1 ? __('item') : __('items')}`;\n    };\n  }\n\n  static isTabEnabled(props, tabName) {\n    const {\n      isWishlistEnabled,\n      newsletterActive\n    } = props;\n\n    switch (tabName) {\n      case MY_WISHLIST:\n        return isWishlistEnabled;\n\n      case NEWSLETTER_SUBSCRIPTION:\n        return newsletterActive;\n\n      default:\n        return true;\n    }\n  }\n\n  static navigateToSelectedTab(props, state = {}) {\n    const {\n      history,\n      match: {\n        params: {\n          tab: historyActiveTab\n        } = {}\n      } = {}\n    } = props;\n    const {\n      activeTab\n    } = state; // redirect to Dashboard, if user visited non-existent or disabled page\n\n    const newActiveTab = this.tabMap[historyActiveTab] && this.isTabEnabled(props, historyActiveTab) ? historyActiveTab : DASHBOARD;\n\n    if (historyActiveTab !== newActiveTab) {\n      history.push(appendWithStoreCode(`${MY_ACCOUNT_URL}/${newActiveTab}`));\n    }\n\n    if (activeTab !== newActiveTab) {\n      return {\n        activeTab: newActiveTab\n      };\n    }\n\n    return null;\n  }\n\n  __construct(props) {\n    super.__construct(props);\n\n    const {\n      updateMeta,\n      toggleOverlayByKey\n    } = this.props;\n    this.state = { ...MyAccountContainer.navigateToSelectedTab(this.props),\n      isEditingActive: false\n    };\n\n    if (!isSignedIn()) {\n      toggleOverlayByKey(CUSTOMER_ACCOUNT);\n    }\n\n    updateMeta({\n      title: __('My account')\n    });\n    this.redirectIfNotSignedIn();\n    this.onSignIn();\n    this.updateBreadcrumbs();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return MyAccountContainer.navigateToSelectedTab(props, state);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      wishlistItems: prevWishlistItems,\n      isSignedIn: prevIsSignedIn\n    } = prevProps;\n    const {\n      wishlistItems,\n      isSignedIn: currIsSignedIn\n    } = this.props;\n    const {\n      activeTab: prevActiveTab\n    } = prevState;\n    const {\n      activeTab\n    } = this.state;\n    this.redirectIfNotSignedIn();\n\n    if (prevIsSignedIn !== currIsSignedIn) {\n      this.changeHeaderState();\n    }\n\n    if (prevActiveTab !== activeTab) {\n      this.updateBreadcrumbs();\n      this.changeHeaderState();\n    }\n\n    if (Object.keys(wishlistItems).length !== Object.keys(prevWishlistItems).length) {\n      this.changeHeaderState();\n    }\n\n    if (!isSignedIn()) {\n      this.changeHeaderState('default');\n    }\n  }\n\n  tabsFilterEnabled() {\n    var _this2 = this;\n\n    return Object.fromEntries(Object.entries(MyAccountContainer.tabMap).filter(function ([k]) {\n      return MyAccountContainer.isTabEnabled(_this2.props, k);\n    }));\n  }\n\n  onSignOut() {\n    const {\n      toggleOverlayByKey\n    } = this.props;\n    this.setState({\n      activeTab: DASHBOARD\n    });\n    toggleOverlayByKey(CUSTOMER_ACCOUNT);\n    history.push(appendWithStoreCode('/'));\n  }\n\n  onSignIn() {\n    const {\n      requestCustomerData\n    } = this.props;\n\n    if (isSignedIn()) {\n      requestCustomerData();\n    }\n\n    this.changeHeaderState();\n  }\n\n  changeWishlistHeaderState(hiddenElements) {\n    var _this3 = this;\n\n    const {\n      changeHeaderState\n    } = this.props;\n    const {\n      isEditingActive\n    } = this.state;\n    const currentHiddenElements = hiddenElements || [isEditingActive ? 'edit' : 'ok'];\n\n    const handleClick = function (isEdit = false) {\n      _this3.setState({\n        isEditingActive: isEdit\n      });\n\n      const hiddenElements = [isEdit ? 'edit' : 'ok'];\n\n      _this3.changeWishlistHeaderState(hiddenElements);\n    };\n\n    changeHeaderState({\n      title: this.getMyWishlistHeaderTitle(),\n      name: CUSTOMER_WISHLIST,\n      onEditClick: function () {\n        return handleClick(true);\n      },\n      onOkClick: function () {\n        return handleClick();\n      },\n      hiddenElements: currentHiddenElements,\n      shouldNotGoToPrevState: true\n    });\n  }\n\n  changeDefaultHeaderState() {\n    const {\n      changeHeaderState\n    } = this.props;\n    changeHeaderState({\n      title: 'My account',\n      name: CUSTOMER_ACCOUNT_PAGE,\n      onBackClick: function () {\n        return history.push(appendWithStoreCode('/'));\n      }\n    });\n  }\n\n  changeHeaderState(activeTabParam) {\n    const {\n      activeTab: activeTabState\n    } = this.state;\n    const activeTab = activeTabParam || activeTabState;\n\n    if (activeTab !== MY_WISHLIST) {\n      this.changeDefaultHeaderState();\n      return;\n    }\n\n    this.changeWishlistHeaderState();\n  }\n\n  changeActiveTab(activeTab) {\n    const {\n      history\n    } = this.props;\n    const {\n      [activeTab]: {\n        url\n      }\n    } = this.tabsFilterEnabled(MyAccountContainer.tabMap);\n    history.push(appendWithStoreCode(`${MY_ACCOUNT_URL}${url}`));\n    this.changeHeaderState(activeTab);\n  }\n\n  updateBreadcrumbs() {\n    const {\n      updateBreadcrumbs\n    } = this.props;\n    const {\n      activeTab\n    } = this.state;\n    const {\n      url,\n      name\n    } = MyAccountContainer.tabMap[activeTab];\n    updateBreadcrumbs([{\n      url: `${MY_ACCOUNT_URL}${url}`,\n      name\n    }, {\n      name: __('My Account'),\n      url: `${MY_ACCOUNT_URL}/${DASHBOARD}`\n    }]);\n  }\n\n  redirectIfNotSignedIn() {\n    const {\n      history,\n      location: {\n        pathname\n      },\n      device\n    } = this.props;\n\n    if (isSignedIn()) {\n      // do nothing for signed-in users\n      return;\n    }\n\n    if (device.isMobile) {\n      // do not redirect on mobile\n      return;\n    }\n\n    if (pathname === '/forgot-password') {\n      // forward the forgot password state\n      history.push({\n        pathname: appendWithStoreCode('/'),\n        state: {\n          isForgotPassword: true\n        }\n      });\n      return;\n    }\n\n    history.push({\n      pathname: appendWithStoreCode('/')\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, MyAccount, Object.assign({}, this.props, this.state, this.containerFunctions, {\n      tabMap: this.tabsFilterEnabled(MyAccountContainer.tabMap),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  changeHeaderState: PropTypes.func.isRequired,\n  requestCustomerData: PropTypes.func.isRequired,\n  updateBreadcrumbs: PropTypes.func.isRequired,\n  toggleOverlayByKey: PropTypes.func.isRequired,\n  updateMeta: PropTypes.func.isRequired,\n  match: MatchType.isRequired,\n  location: LocationType.isRequired,\n  history: HistoryType.isRequired,\n  device: DeviceType.isRequired,\n  wishlistItems: PropTypes.object,\n  newsletterActive: PropTypes.bool.isRequired,\n  isWishlistEnabled: PropTypes.bool.isRequired,\n  isSignedIn: PropTypes.bool.isRequired\n}, _class.defaultProps = {\n  wishlistItems: {}\n}, _class.tabMap = {\n  [DASHBOARD]: {\n    url: '/dashboard',\n    name: __('Dashboard')\n  },\n  [ADDRESS_BOOK]: {\n    url: '/address-book',\n    name: __('Address book')\n  },\n  [MY_ORDERS]: {\n    url: '/my-orders',\n    name: __('My orders')\n  },\n  [MY_DOWNLOADABLE]: {\n    url: '/my-downloadable',\n    name: __('My downloadable')\n  },\n  [MY_WISHLIST]: {\n    url: '/my-wishlist',\n    name: __('My wishlist')\n  },\n  [NEWSLETTER_SUBSCRIPTION]: {\n    url: '/newsletter-subscription',\n    name: __('Newsletter Subscription')\n  }\n}, _temp), \"Route/MyAccount/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/route/MyAccount/MyAccount.container.js"],"names":["PropTypes","PureComponent","connect","CUSTOMER_ACCOUNT","CUSTOMER_ACCOUNT_PAGE","CUSTOMER_WISHLIST","updateMeta","changeNavigationState","TOP_NAVIGATION_TYPE","toggleOverlayByKey","ADDRESS_BOOK","DASHBOARD","MY_DOWNLOADABLE","MY_ORDERS","MY_WISHLIST","NEWSLETTER_SUBSCRIPTION","HistoryType","LocationType","MatchType","DeviceType","isSignedIn","history","appendWithStoreCode","MyAccount","MY_ACCOUNT_URL","BreadcrumbsDispatcher","MyAccountDispatcher","mapStateToProps","state","device","ConfigReducer","isWishlistEnabled","wishlist_general_active","wishlistItems","WishlistReducer","productsInWishlist","MyAccountReducer","newsletterActive","newsletter_general_active","mapDispatchToProps","dispatch","updateBreadcrumbs","breadcrumbs","then","default","dispatcher","update","changeHeaderState","requestCustomerData","key","meta","containerFunctions","changeActiveTab","bind","onSignIn","onSignOut","getMyWishlistHeaderTitle","props","length","Object","keys","__","isTabEnabled","tabName","navigateToSelectedTab","match","params","tab","historyActiveTab","activeTab","newActiveTab","tabMap","push","__construct","MyAccountContainer","isEditingActive","title","redirectIfNotSignedIn","getDerivedStateFromProps","componentDidUpdate","prevProps","prevState","prevWishlistItems","prevIsSignedIn","currIsSignedIn","prevActiveTab","tabsFilterEnabled","fromEntries","entries","filter","k","setState","changeWishlistHeaderState","hiddenElements","currentHiddenElements","handleClick","isEdit","name","onEditClick","onOkClick","shouldNotGoToPrevState","changeDefaultHeaderState","onBackClick","activeTabParam","activeTabState","url","location","pathname","isMobile","isForgotPassword","render","propTypes","func","isRequired","object","bool","defaultProps"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { CUSTOMER_ACCOUNT, CUSTOMER_ACCOUNT_PAGE, CUSTOMER_WISHLIST } from 'Component/Header/Header.config';\nimport { updateMeta } from 'Store/Meta/Meta.action';\nimport { changeNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { toggleOverlayByKey } from 'Store/Overlay/Overlay.action';\nimport {\n    ADDRESS_BOOK,\n    DASHBOARD, MY_DOWNLOADABLE, MY_ORDERS,\n    MY_WISHLIST, NEWSLETTER_SUBSCRIPTION\n} from 'Type/Account';\nimport { HistoryType, LocationType, MatchType } from 'Type/Common';\nimport { DeviceType } from 'Type/Device';\nimport { isSignedIn } from 'Util/Auth';\nimport history from 'Util/History';\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport MyAccount from './MyAccount.component';\nimport { MY_ACCOUNT_URL } from './MyAccount.config';\n\nexport const BreadcrumbsDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Breadcrumbs/Breadcrumbs.dispatcher'\n);\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Route/MyAccount/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device,\n    isWishlistEnabled: state.ConfigReducer.wishlist_general_active,\n    wishlistItems: state.WishlistReducer.productsInWishlist,\n    isSignedIn: state.MyAccountReducer.isSignedIn,\n    newsletterActive: state.ConfigReducer.newsletter_general_active\n});\n\n/** @namespace Route/MyAccount/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    updateBreadcrumbs: (breadcrumbs) => BreadcrumbsDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.update(breadcrumbs, dispatch)\n    ),\n    changeHeaderState: (state) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state)),\n    requestCustomerData: () => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.requestCustomerData(dispatch)\n    ),\n    toggleOverlayByKey: (key) => dispatch(toggleOverlayByKey(key)),\n    updateMeta: (meta) => dispatch(updateMeta(meta))\n});\n\n/** @namespace Route/MyAccount/Container */\nexport class MyAccountContainer extends PureComponent {\n    static propTypes = {\n        changeHeaderState: PropTypes.func.isRequired,\n        requestCustomerData: PropTypes.func.isRequired,\n        updateBreadcrumbs: PropTypes.func.isRequired,\n        toggleOverlayByKey: PropTypes.func.isRequired,\n        updateMeta: PropTypes.func.isRequired,\n        match: MatchType.isRequired,\n        location: LocationType.isRequired,\n        history: HistoryType.isRequired,\n        device: DeviceType.isRequired,\n        wishlistItems: PropTypes.object,\n        newsletterActive: PropTypes.bool.isRequired,\n        isWishlistEnabled: PropTypes.bool.isRequired,\n        isSignedIn: PropTypes.bool.isRequired\n    };\n\n    static defaultProps = {\n        wishlistItems: {}\n    };\n\n    static tabMap = {\n        [DASHBOARD]: {\n            url: '/dashboard',\n            name: __('Dashboard')\n        },\n        [ADDRESS_BOOK]: {\n            url: '/address-book',\n            name: __('Address book')\n        },\n        [MY_ORDERS]: {\n            url: '/my-orders',\n            name: __('My orders')\n        },\n        [MY_DOWNLOADABLE]: {\n            url: '/my-downloadable',\n            name: __('My downloadable')\n        },\n        [MY_WISHLIST]: {\n            url: '/my-wishlist',\n            name: __('My wishlist')\n        },\n        [NEWSLETTER_SUBSCRIPTION]: {\n            url: '/newsletter-subscription',\n            name: __('Newsletter Subscription')\n        }\n    };\n\n    static isTabEnabled(props, tabName) {\n        const { isWishlistEnabled, newsletterActive } = props;\n\n        switch (tabName) {\n        case MY_WISHLIST:\n            return isWishlistEnabled;\n        case NEWSLETTER_SUBSCRIPTION:\n            return newsletterActive;\n        default:\n            return true;\n        }\n    }\n\n    static navigateToSelectedTab(props, state = {}) {\n        const {\n            history,\n            match: {\n                params: {\n                    tab: historyActiveTab\n                } = {}\n            } = {}\n        } = props;\n\n        const { activeTab } = state;\n\n        // redirect to Dashboard, if user visited non-existent or disabled page\n        const newActiveTab = this.tabMap[historyActiveTab] && this.isTabEnabled(props, historyActiveTab)\n            ? historyActiveTab\n            : DASHBOARD;\n\n        if (historyActiveTab !== newActiveTab) {\n            history.push(appendWithStoreCode(`${ MY_ACCOUNT_URL }/${ newActiveTab }`));\n        }\n\n        if (activeTab !== newActiveTab) {\n            return { activeTab: newActiveTab };\n        }\n\n        return null;\n    }\n\n    containerFunctions = {\n        changeActiveTab: this.changeActiveTab.bind(this),\n        onSignIn: this.onSignIn.bind(this),\n        onSignOut: this.onSignOut.bind(this)\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        const {\n            updateMeta,\n            toggleOverlayByKey\n        } = this.props;\n\n        this.state = {\n            ...MyAccountContainer.navigateToSelectedTab(this.props),\n            isEditingActive: false\n        };\n\n        if (!isSignedIn()) {\n            toggleOverlayByKey(CUSTOMER_ACCOUNT);\n        }\n\n        updateMeta({ title: __('My account') });\n\n        this.redirectIfNotSignedIn();\n        this.onSignIn();\n        this.updateBreadcrumbs();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        return MyAccountContainer.navigateToSelectedTab(props, state);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {\n            wishlistItems: prevWishlistItems,\n            isSignedIn: prevIsSignedIn\n        } = prevProps;\n        const {\n            wishlistItems,\n            isSignedIn: currIsSignedIn\n        } = this.props;\n        const { activeTab: prevActiveTab } = prevState;\n        const { activeTab } = this.state;\n\n        this.redirectIfNotSignedIn();\n\n        if (prevIsSignedIn !== currIsSignedIn) {\n            this.changeHeaderState();\n        }\n\n        if (prevActiveTab !== activeTab) {\n            this.updateBreadcrumbs();\n            this.changeHeaderState();\n        }\n\n        if (Object.keys(wishlistItems).length !== Object.keys(prevWishlistItems).length) {\n            this.changeHeaderState();\n        }\n\n        if (!isSignedIn()) {\n            this.changeHeaderState('default');\n        }\n    }\n\n    getMyWishlistHeaderTitle = () => {\n        const { wishlistItems } = this.props;\n\n        const { length } = Object.keys(wishlistItems);\n\n        return `${ length } ${ length === 1 ? __('item') : __('items') }`;\n    };\n\n    tabsFilterEnabled() {\n        return Object.fromEntries(Object.entries(MyAccountContainer.tabMap)\n            .filter(([k]) => MyAccountContainer.isTabEnabled(this.props, k)));\n    }\n\n    onSignOut() {\n        const { toggleOverlayByKey } = this.props;\n        this.setState({ activeTab: DASHBOARD });\n        toggleOverlayByKey(CUSTOMER_ACCOUNT);\n        history.push(appendWithStoreCode('/'));\n    }\n\n    onSignIn() {\n        const { requestCustomerData } = this.props;\n\n        if (isSignedIn()) {\n            requestCustomerData();\n        }\n\n        this.changeHeaderState();\n    }\n\n    changeWishlistHeaderState(hiddenElements) {\n        const { changeHeaderState } = this.props;\n        const { isEditingActive } = this.state;\n\n        const currentHiddenElements = hiddenElements || [isEditingActive ? 'edit' : 'ok'];\n\n        const handleClick = (isEdit = false) => {\n            this.setState({ isEditingActive: isEdit });\n\n            const hiddenElements = [isEdit ? 'edit' : 'ok'];\n\n            this.changeWishlistHeaderState(hiddenElements);\n        };\n\n        changeHeaderState({\n            title: this.getMyWishlistHeaderTitle(),\n            name: CUSTOMER_WISHLIST,\n            onEditClick: () => handleClick(true),\n            onOkClick: () => handleClick(),\n            hiddenElements: currentHiddenElements,\n            shouldNotGoToPrevState: true\n        });\n    }\n\n    changeDefaultHeaderState() {\n        const { changeHeaderState } = this.props;\n\n        changeHeaderState({\n            title: 'My account',\n            name: CUSTOMER_ACCOUNT_PAGE,\n            onBackClick: () => history.push(appendWithStoreCode('/'))\n        });\n    }\n\n    changeHeaderState(activeTabParam) {\n        const { activeTab: activeTabState } = this.state;\n        const activeTab = activeTabParam || activeTabState;\n\n        if (activeTab !== MY_WISHLIST) {\n            this.changeDefaultHeaderState();\n\n            return;\n        }\n\n        this.changeWishlistHeaderState();\n    }\n\n    changeActiveTab(activeTab) {\n        const { history } = this.props;\n        const { [activeTab]: { url } } = this.tabsFilterEnabled(MyAccountContainer.tabMap);\n\n        history.push(appendWithStoreCode(`${ MY_ACCOUNT_URL }${ url }`));\n        this.changeHeaderState(activeTab);\n    }\n\n    updateBreadcrumbs() {\n        const { updateBreadcrumbs } = this.props;\n        const { activeTab } = this.state;\n        const { url, name } = MyAccountContainer.tabMap[activeTab];\n\n        updateBreadcrumbs([\n            { url: `${ MY_ACCOUNT_URL }${ url }`, name },\n            { name: __('My Account'), url: `${ MY_ACCOUNT_URL }/${ DASHBOARD }` }\n        ]);\n    }\n\n    redirectIfNotSignedIn() {\n        const {\n            history,\n            location: { pathname },\n            device\n        } = this.props;\n\n        if (isSignedIn()) { // do nothing for signed-in users\n            return;\n        }\n\n        if (device.isMobile) { // do not redirect on mobile\n            return;\n        }\n\n        if (pathname === '/forgot-password') { // forward the forgot password state\n            history.push({ pathname: appendWithStoreCode('/'), state: { isForgotPassword: true } });\n            return;\n        }\n\n        history.push({ pathname: appendWithStoreCode('/') });\n    }\n\n    render() {\n        return (\n            <MyAccount\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n              tabMap={ this.tabsFilterEnabled(MyAccountContainer.tabMap) }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountContainer);\n"]},"metadata":{},"sourceType":"module"}