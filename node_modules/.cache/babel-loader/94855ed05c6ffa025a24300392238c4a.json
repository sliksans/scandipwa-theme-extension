{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/RecentlyViewedWidget/RecentlyViewedWidget.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport RecentlyViewedProductsDispatcher from \"/home/arturs/scandiweb/scandipwa/src/store/RecentlyViewedProducts/RecentlyViewedProducts.dispatcher\";\nimport { ItemsType } from \"/home/arturs/scandiweb/scandipwa/src/type/ProductList\";\nimport RecentlyViewedWidget from \"./RecentlyViewedWidget.component\";\n/** #namespace Component/RecentlyViewedWidget/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    recentProducts: state.RecentlyViewedProductsReducer.recentlyViewedProducts,\n    shouldBeUpdated: state.RecentlyViewedProductsReducer.shouldBeUpdated,\n    store: state.ConfigReducer.code\n  };\n}, \"Component/RecentlyViewedWidget/Container/mapStateToProps\");\n/** #namespace Component/RecentlyViewedWidget/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    updateRecentViewedProductsInfo: function (options) {\n      return RecentlyViewedProductsDispatcher.handleData(dispatch, options);\n    }\n  };\n}, \"Component/RecentlyViewedWidget/Container/mapDispatchToProps\");\n/** #namespace Component/RecentlyViewedWidget/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const RecentlyViewedWidgetContainer = Mosaic.middleware((_temp = _class = class RecentlyViewedWidgetContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      siblingsHaveBrands: false,\n      siblingsHavePriceBadge: false,\n      siblingsHaveTierPrice: false,\n      siblingsHaveConfigurableOptions: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      shouldBeUpdated,\n      updateRecentViewedProductsInfo,\n      recentProducts,\n      store\n    } = this.props;\n\n    if (shouldBeUpdated && Object.entries(recentProducts).length !== 0) {\n      updateRecentViewedProductsInfo({\n        recentProducts,\n        store\n      });\n    }\n  }\n\n  containerProps() {\n    var _recentProducts$store,\n        _this = this;\n\n    const {\n      siblingsHaveBrands,\n      siblingsHavePriceBadge,\n      siblingsHaveTierPrice,\n      siblingsHaveConfigurableOptions\n    } = this.state;\n    const {\n      store,\n      recentProducts\n    } = this.props;\n    const products = (_recentProducts$store = recentProducts[store]) !== null && _recentProducts$store !== void 0 ? _recentProducts$store : [];\n    return {\n      productCardFunctions: {\n        setSiblingsHaveBrands: function () {\n          return _this.setState({\n            siblingsHaveBrands: true\n          });\n        },\n        setSiblingsHavePriceBadge: function () {\n          return _this.setState({\n            siblingsHavePriceBadge: true\n          });\n        },\n        setSiblingsHaveTierPrice: function () {\n          return _this.setState({\n            siblingsHaveTierPrice: true\n          });\n        },\n        setSiblingsHaveConfigurableOptions: function () {\n          return _this.setState({\n            siblingsHaveConfigurableOptions: true\n          });\n        }\n      },\n      productCardProps: {\n        siblingsHaveBrands,\n        siblingsHavePriceBadge,\n        siblingsHaveTierPrice,\n        siblingsHaveConfigurableOptions\n      },\n      products\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, RecentlyViewedWidget, Object.assign({}, this.props, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  updateRecentViewedProductsInfo: PropTypes.func.isRequired,\n  recentProducts: PropTypes.objectOf(ItemsType).isRequired,\n  shouldBeUpdated: PropTypes.bool.isRequired,\n  store: PropTypes.string.isRequired\n}, _temp), \"Component/RecentlyViewedWidget/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(RecentlyViewedWidgetContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/RecentlyViewedWidget/RecentlyViewedWidget.container.js"],"names":["PropTypes","PureComponent","connect","RecentlyViewedProductsDispatcher","ItemsType","RecentlyViewedWidget","mapStateToProps","state","recentProducts","RecentlyViewedProductsReducer","recentlyViewedProducts","shouldBeUpdated","store","ConfigReducer","code","mapDispatchToProps","dispatch","updateRecentViewedProductsInfo","options","handleData","siblingsHaveBrands","siblingsHavePriceBadge","siblingsHaveTierPrice","siblingsHaveConfigurableOptions","componentDidMount","props","Object","entries","length","containerProps","products","productCardFunctions","setSiblingsHaveBrands","setState","setSiblingsHavePriceBadge","setSiblingsHaveTierPrice","setSiblingsHaveConfigurableOptions","productCardProps","render","propTypes","func","isRequired","objectOf","bool","string","RecentlyViewedWidgetContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport RecentlyViewedProductsDispatcher from 'Store/RecentlyViewedProducts/RecentlyViewedProducts.dispatcher';\nimport { ItemsType } from 'Type/ProductList';\n\nimport RecentlyViewedWidget from './RecentlyViewedWidget.component';\n\n/** @namespace Component/RecentlyViewedWidget/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    recentProducts: state.RecentlyViewedProductsReducer.recentlyViewedProducts,\n    shouldBeUpdated: state.RecentlyViewedProductsReducer.shouldBeUpdated,\n    store: state.ConfigReducer.code\n});\n\n/** @namespace Component/RecentlyViewedWidget/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({\n    updateRecentViewedProductsInfo:\n        (options) => RecentlyViewedProductsDispatcher.handleData(dispatch, options)\n});\n\n/** @namespace Component/RecentlyViewedWidget/Container */\nexport class RecentlyViewedWidgetContainer extends PureComponent {\n    static propTypes = {\n        updateRecentViewedProductsInfo: PropTypes.func.isRequired,\n        recentProducts: PropTypes.objectOf(ItemsType).isRequired,\n        shouldBeUpdated: PropTypes.bool.isRequired,\n        store: PropTypes.string.isRequired\n    };\n\n    state = {\n        siblingsHaveBrands: false,\n        siblingsHavePriceBadge: false,\n        siblingsHaveTierPrice: false,\n        siblingsHaveConfigurableOptions: false\n    };\n\n    componentDidMount() {\n        const {\n            shouldBeUpdated,\n            updateRecentViewedProductsInfo,\n            recentProducts,\n            store\n        } = this.props;\n\n        if (shouldBeUpdated && Object.entries(recentProducts).length !== 0) {\n            updateRecentViewedProductsInfo({ recentProducts, store });\n        }\n    }\n\n    containerProps() {\n        const {\n            siblingsHaveBrands,\n            siblingsHavePriceBadge,\n            siblingsHaveTierPrice,\n            siblingsHaveConfigurableOptions\n        } = this.state;\n\n        const {\n            store,\n            recentProducts\n        } = this.props;\n\n        const products = recentProducts[store] ?? [];\n\n        return {\n            productCardFunctions: {\n                setSiblingsHaveBrands: () => this.setState({ siblingsHaveBrands: true }),\n                setSiblingsHavePriceBadge: () => this.setState({ siblingsHavePriceBadge: true }),\n                setSiblingsHaveTierPrice: () => this.setState({ siblingsHaveTierPrice: true }),\n                setSiblingsHaveConfigurableOptions: () => this.setState({ siblingsHaveConfigurableOptions: true })\n            },\n            productCardProps: {\n                siblingsHaveBrands,\n                siblingsHavePriceBadge,\n                siblingsHaveTierPrice,\n                siblingsHaveConfigurableOptions\n            },\n            products\n        };\n    }\n\n    render() {\n        return (\n            <RecentlyViewedWidget\n              { ...this.props }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecentlyViewedWidgetContainer);\n"]},"metadata":{},"sourceType":"module"}