{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductReviewRating/ProductReviewRating.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\nimport { MixType } from \"/home/arturs/scandiweb/scandipwa/src/type/Common\";\nimport CSS from \"/home/arturs/scandiweb/scandipwa/src/util/CSS\";\nimport \"./ProductReviewRating.style\";\n/**\n * @class ProductReviewRating\n * #namespace Component/ProductReviewRating/Component\n */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductReviewRating = Mosaic.middleware((_temp = _class = class ProductReviewRating_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.reviewRating = /*#__PURE__*/createRef();\n  }\n\n  componentDidMount() {\n    this.updateRating();\n  }\n\n  componentDidUpdate() {\n    this.updateRating();\n  }\n\n  getAriaText(summary, code) {\n    const ONE_FIFTH_OF_A_HUNDRED = 20;\n    const rating = parseFloat(summary / ONE_FIFTH_OF_A_HUNDRED).toFixed(2);\n    return code ? `Review's ${code} rating is ${rating} out of 5` : `Product's rating is ${rating} out of 5`;\n  }\n\n  updateRating() {\n    const {\n      summary\n    } = this.props;\n    CSS.setVariable(this.reviewRating, 'percentage', `${summary}%`);\n  }\n\n  renderPlaceholder() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductReviewRating\",\n      ref: this.reviewRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    const {\n      summary,\n      code,\n      placeholder,\n      mix\n    } = this.props;\n    const ariaText = this.getAriaText(summary, code);\n\n    if (placeholder) {\n      return this.renderPlaceholder();\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductReviewRating\",\n      title: `${summary}%`,\n      ref: this.reviewRating,\n      \"aria-label\": ariaText,\n      mix: mix,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    });\n  }\n\n}, _class.propTypes = {\n  summary: PropTypes.number,\n  code: PropTypes.string,\n  placeholder: PropTypes.bool,\n  mix: MixType\n}, _class.defaultProps = {\n  summary: 0,\n  code: '',\n  placeholder: false,\n  mix: {}\n}, _temp), \"Component/ProductReviewRating/Component\");\nexport default ProductReviewRating;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductReviewRating/ProductReviewRating.component.js"],"names":["PropTypes","createRef","PureComponent","MixType","CSS","reviewRating","componentDidMount","updateRating","componentDidUpdate","getAriaText","summary","code","ONE_FIFTH_OF_A_HUNDRED","rating","parseFloat","toFixed","props","setVariable","renderPlaceholder","render","placeholder","mix","ariaText","propTypes","number","string","bool","defaultProps","ProductReviewRating"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,OAAzC;AAEA,SAASC,OAAT;AACA,OAAOC,GAAP;AAEA;AAEA;AACA;AACA;AACA;;;;AACA,4HAAyCF,aAAzC,EAAuD;AAAA;AAAA;AAAA,SAenDG,YAfmD,gBAepCJ,SAAS,EAf2B;AAAA;;AAiBnDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,YAAL;AACH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKD,YAAL;AACH;;AAEDE,EAAAA,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgB;AACvB,UAAMC,sBAAsB,GAAG,EAA/B;AACA,UAAMC,MAAM,GAAGC,UAAU,CAACJ,OAAO,GAAGE,sBAAX,CAAV,CAA6CG,OAA7C,CAAqD,CAArD,CAAf;AAEA,WAAOJ,IAAI,GACJ,YAAWA,IAAK,cAAaE,MAAO,WADhC,GAEJ,uBAAsBA,MAAO,WAFpC;AAGH;;AAEDN,EAAAA,YAAY,GAAG;AACX,UAAM;AAAEG,MAAAA;AAAF,QAAc,KAAKM,KAAzB;AAEAZ,IAAAA,GAAG,CAACa,WAAJ,CACI,KAAKZ,YADT,EAEI,YAFJ,EAGK,GAAEK,OAAQ,GAHf;AAKH;;AAEDQ,EAAAA,iBAAiB,GAAG;AAChB;AAEM,MAAA,KAAK,EAAC,qBAFZ;AAGM,MAAA,GAAG,EAAG,KAAKb,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;;AAEDc,EAAAA,MAAM,GAAG;AACL,UAAM;AACFT,MAAAA,OADE;AAEFC,MAAAA,IAFE;AAGFS,MAAAA,WAHE;AAIFC,MAAAA;AAJE,QAKF,KAAKL,KALT;AAOA,UAAMM,QAAQ,GAAG,KAAKb,WAAL,CAAiBC,OAAjB,EAA0BC,IAA1B,CAAjB;;AAEA,QAAIS,WAAJ,EAAiB;AACb,aAAO,KAAKF,iBAAL,EAAP;AACH;;AAED;AAEM,MAAA,KAAK,EAAC,qBAFZ;AAGM,MAAA,KAAK,EAAI,GAAER,OAAQ,GAHzB;AAIM,MAAA,GAAG,EAAG,KAAKL,YAJjB;AAKM,oBAAaiB,QALnB;AAMM,MAAA,GAAG,EAAGD,GANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASH;;AA5EkD,CAAvD,SACWE,SADX,GACuB;AACfb,EAAAA,OAAO,EAAEV,SAAS,CAACwB,MADJ;AAEfb,EAAAA,IAAI,EAAEX,SAAS,CAACyB,MAFD;AAGfL,EAAAA,WAAW,EAAEpB,SAAS,CAAC0B,IAHR;AAIfL,EAAAA,GAAG,EAAElB;AAJU,CADvB,SAQWwB,YARX,GAQ0B;AAClBjB,EAAAA,OAAO,EAAE,CADS;AAElBC,EAAAA,IAAI,EAAE,EAFY;AAGlBS,EAAAA,WAAW,EAAE,KAHK;AAIlBC,EAAAA,GAAG,EAAE;AAJa,CAR1B;AA+EA,eAAeO,mBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\n\nimport { MixType } from 'Type/Common';\nimport CSS from 'Util/CSS';\n\nimport './ProductReviewRating.style';\n\n/**\n * @class ProductReviewRating\n * @namespace Component/ProductReviewRating/Component\n */\nexport class ProductReviewRating extends PureComponent {\n    static propTypes = {\n        summary: PropTypes.number,\n        code: PropTypes.string,\n        placeholder: PropTypes.bool,\n        mix: MixType\n    };\n\n    static defaultProps = {\n        summary: 0,\n        code: '',\n        placeholder: false,\n        mix: {}\n    };\n\n    reviewRating = createRef();\n\n    componentDidMount() {\n        this.updateRating();\n    }\n\n    componentDidUpdate() {\n        this.updateRating();\n    }\n\n    getAriaText(summary, code) {\n        const ONE_FIFTH_OF_A_HUNDRED = 20;\n        const rating = parseFloat(summary / ONE_FIFTH_OF_A_HUNDRED).toFixed(2);\n\n        return code\n            ? `Review's ${code} rating is ${rating} out of 5`\n            : `Product's rating is ${rating} out of 5`;\n    }\n\n    updateRating() {\n        const { summary } = this.props;\n\n        CSS.setVariable(\n            this.reviewRating,\n            'percentage',\n            `${summary}%`\n        );\n    }\n\n    renderPlaceholder() {\n        return (\n            <div\n              block=\"ProductReviewRating\"\n              ref={ this.reviewRating }\n            />\n        );\n    }\n\n    render() {\n        const {\n            summary,\n            code,\n            placeholder,\n            mix\n        } = this.props;\n\n        const ariaText = this.getAriaText(summary, code);\n\n        if (placeholder) {\n            return this.renderPlaceholder();\n        }\n\n        return (\n            <div\n              block=\"ProductReviewRating\"\n              title={ `${summary}%` }\n              ref={ this.reviewRating }\n              aria-label={ ariaText }\n              mix={ mix }\n            />\n        );\n    }\n}\n\nexport default ProductReviewRating;\n"]},"metadata":{},"sourceType":"module"}