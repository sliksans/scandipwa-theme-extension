{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/CmsBlock/CmsBlock.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport CmsBlockQuery from \"/home/arturs/scandiweb/extension/src/query/CmsBlock.query\";\nimport DataContainer from \"/home/arturs/scandiweb/extension/src/util/Request/DataContainer\";\nimport CmsBlock from \"./CmsBlock.component\";\n/** #namespace Component/CmsBlock/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CmsBlockContainer = Mosaic.middleware((_temp = _class = class CmsBlockContainer_ extends Mosaic.Extensible(DataContainer) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      cmsBlock: {}\n    };\n\n    this.containerProps = function () {\n      const {\n        blockType\n      } = _this.props;\n      const {\n        cmsBlock\n      } = _this.state;\n      return {\n        cmsBlock,\n        blockType\n      };\n    };\n  }\n\n  componentDidMount() {\n    this._getCmsBlock();\n  }\n\n  _getCmsBlock() {\n    var _this2 = this;\n\n    const {\n      identifier\n    } = this.props;\n    this.fetchData([CmsBlockQuery.getQuery({\n      identifiers: [identifier]\n    })], function ({\n      cmsBlocks: {\n        items\n      }\n    }) {\n      if (!items.length) {\n        return;\n      }\n\n      _this2.setState({\n        cmsBlock: items[0]\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, CmsBlock, Object.assign({}, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  identifier: PropTypes.string.isRequired\n}, _temp), \"Component/CmsBlock/Container\");\nexport default CmsBlockContainer;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/CmsBlock/CmsBlock.container.js"],"names":["PropTypes","CmsBlockQuery","DataContainer","CmsBlock","state","cmsBlock","containerProps","blockType","props","componentDidMount","_getCmsBlock","identifier","fetchData","getQuery","identifiers","cmsBlocks","items","length","setState","render","propTypes","string","isRequired","CmsBlockContainer"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAOC,aAAP;AACA,OAAOC,aAAP;AAEA,OAAOC,QAAP;AAEA;;;;AACA,wHAAuCD,aAAvC,EAAqD;AAAA;AAAA;;AAAA;AAAA;AAAA,SAKjDE,KALiD,GAKzC;AACJC,MAAAA,QAAQ,EAAE;AADN,KALyC;;AAAA,SASjDC,cATiD,GAShC,YAAM;AACnB,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAI,CAACC,KAA3B;AACA,YAAM;AAAEH,QAAAA;AAAF,UAAe,KAAI,CAACD,KAA1B;AACA,aAAO;AAAEC,QAAAA,QAAF;AAAYE,QAAAA;AAAZ,OAAP;AACH,KAbgD;AAAA;;AAejDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,YAAL;AACH;;AAEDA,EAAAA,YAAY,GAAG;AAAA;;AACX,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKH,KAA5B;AAEA,SAAKI,SAAL,CACI,CAACX,aAAa,CAACY,QAAd,CAAuB;AAAEC,MAAAA,WAAW,EAAE,CAACH,UAAD;AAAf,KAAvB,CAAD,CADJ,EAEI,UAAC;AAAEI,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,KAAD,EAA8B;AAC1B,UAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;AACf;AACH;;AAED,MAAA,MAAI,CAACC,QAAL,CAAc;AAAEb,QAAAA,QAAQ,EAAEW,KAAK,CAAC,CAAD;AAAjB,OAAd;AACH,KARL;AAUH;;AAEDG,EAAAA,MAAM,GAAG;AACL,yCACK,QADL,oBAEW,KAAKb,cAAL,EAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH;;AAxCgD,CAArD,SACWc,SADX,GACuB;AACfT,EAAAA,UAAU,EAAEX,SAAS,CAACqB,MAAV,CAAiBC;AADd,CADvB;AA2CA,eAAeC,iBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\n\nimport CmsBlockQuery from 'Query/CmsBlock.query';\nimport DataContainer from 'Util/Request/DataContainer';\n\nimport CmsBlock from './CmsBlock.component';\n\n/** @namespace Component/CmsBlock/Container */\nexport class CmsBlockContainer extends DataContainer {\n    static propTypes = {\n        identifier: PropTypes.string.isRequired\n    };\n\n    state = {\n        cmsBlock: {}\n    };\n\n    containerProps = () => {\n        const { blockType } = this.props;\n        const { cmsBlock } = this.state;\n        return { cmsBlock, blockType };\n    };\n\n    componentDidMount() {\n        this._getCmsBlock();\n    }\n\n    _getCmsBlock() {\n        const { identifier } = this.props;\n\n        this.fetchData(\n            [CmsBlockQuery.getQuery({ identifiers: [identifier] })],\n            ({ cmsBlocks: { items } }) => {\n                if (!items.length) {\n                    return;\n                }\n\n                this.setState({ cmsBlock: items[0] });\n            }\n        );\n    }\n\n    render() {\n        return (\n            <CmsBlock\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default CmsBlockContainer;\n"]},"metadata":{},"sourceType":"module"}