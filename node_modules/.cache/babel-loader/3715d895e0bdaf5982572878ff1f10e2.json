{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/StoreSwitcher/StoreSwitcher.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport ClickOutside from \"/home/arturs/scandiweb/extension/src/component/ClickOutside\";\nimport Field from \"/home/arturs/scandiweb/extension/src/component/Field\";\nimport StoreItems from \"/home/arturs/scandiweb/extension/src/component/StoreItems\";\nimport { DeviceType } from \"/home/arturs/scandiweb/extension/src/type/Device\";\nimport \"./StoreSwitcher.style\";\n/** #namespace Component/StoreSwitcher/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const StoreSwitcher = Mosaic.middleware((_temp = _class = class StoreSwitcher_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.renderStoreList = function (item) {\n      const {\n        handleStoreSelect\n      } = _this.props;\n      const {\n        value\n      } = item;\n      return /*#__PURE__*/_checkBEM(React, StoreItems, {\n        key: value,\n        item: item,\n        handleStoreSelect: handleStoreSelect,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      });\n    };\n  }\n\n  renderMobileStoreSwitcher() {\n    const {\n      storeList,\n      handleStoreSelect,\n      currentStoreCode\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"StoreSwitcher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, Field, {\n      id: \"StoreSwitcher\",\n      name: \"StoreSwitcher\",\n      type: \"select\",\n      selectOptions: storeList,\n      value: currentStoreCode,\n      onChange: handleStoreSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderDesktopStoreSwitcher() {\n    const {\n      storeList,\n      onStoreSwitcherOutsideClick,\n      onStoreSwitcherClick,\n      isOpened,\n      storeLabel\n    } = this.props;\n    const mods = {\n      isOpen: isOpened\n    };\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"StoreSwitcher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, ClickOutside, {\n      onClick: onStoreSwitcherOutsideClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"button\", {\n      block: \"StoreSwitcher\",\n      elem: \"Title\",\n      mods: mods,\n      onClick: onStoreSwitcherClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, storeLabel), /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"StoreSwitcher\",\n      elem: \"StoreList\",\n      mods: mods,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, storeList.map(this.renderStoreList))));\n  }\n\n  render() {\n    const {\n      storeList,\n      device\n    } = this.props;\n\n    if (storeList.length <= 1) {\n      return null;\n    }\n\n    if (device.isMobile) {\n      return this.renderMobileStoreSwitcher();\n    }\n\n    return this.renderDesktopStoreSwitcher();\n  }\n\n}, _class.propTypes = {\n  storeList: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  isOpened: PropTypes.bool.isRequired,\n  currentStoreCode: PropTypes.string.isRequired,\n  handleStoreSelect: PropTypes.func.isRequired,\n  onStoreSwitcherClick: PropTypes.func.isRequired,\n  onStoreSwitcherOutsideClick: PropTypes.func.isRequired,\n  storeLabel: PropTypes.string,\n  device: DeviceType.isRequired\n}, _class.defaultProps = {\n  storeLabel: ''\n}, _temp), \"Component/StoreSwitcher/Component\");\nexport default StoreSwitcher;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/StoreSwitcher/StoreSwitcher.component.js"],"names":["PropTypes","PureComponent","ClickOutside","Field","StoreItems","DeviceType","renderStoreList","item","handleStoreSelect","props","value","renderMobileStoreSwitcher","storeList","currentStoreCode","renderDesktopStoreSwitcher","onStoreSwitcherOutsideClick","onStoreSwitcherClick","isOpened","storeLabel","mods","isOpen","map","render","device","length","isMobile","propTypes","arrayOf","objectOf","string","isRequired","bool","func","defaultProps","StoreSwitcher"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport ClickOutside from 'Component/ClickOutside';\nimport Field from 'Component/Field';\nimport StoreItems from 'Component/StoreItems';\nimport { DeviceType } from 'Type/Device';\n\nimport './StoreSwitcher.style';\n\n/** @namespace Component/StoreSwitcher/Component */\nexport class StoreSwitcher extends PureComponent {\n    static propTypes = {\n        storeList: PropTypes.arrayOf(\n            PropTypes.objectOf(\n                PropTypes.string\n            )\n        ).isRequired,\n        isOpened: PropTypes.bool.isRequired,\n        currentStoreCode: PropTypes.string.isRequired,\n        handleStoreSelect: PropTypes.func.isRequired,\n        onStoreSwitcherClick: PropTypes.func.isRequired,\n        onStoreSwitcherOutsideClick: PropTypes.func.isRequired,\n        storeLabel: PropTypes.string,\n        device: DeviceType.isRequired\n    };\n\n    static defaultProps = {\n        storeLabel: ''\n    };\n\n    renderStoreList = (item) => {\n        const { handleStoreSelect } = this.props;\n        const { value } = item;\n\n        return (\n            <StoreItems\n              key={ value }\n              item={ item }\n              handleStoreSelect={ handleStoreSelect }\n            />\n        );\n    };\n\n    renderMobileStoreSwitcher() {\n        const {\n            storeList,\n            handleStoreSelect,\n            currentStoreCode\n        } = this.props;\n\n        return (\n            <div block=\"StoreSwitcher\">\n                <Field\n                  id=\"StoreSwitcher\"\n                  name=\"StoreSwitcher\"\n                  type=\"select\"\n                  selectOptions={ storeList }\n                  value={ currentStoreCode }\n                  onChange={ handleStoreSelect }\n                />\n            </div>\n        );\n    }\n\n    renderDesktopStoreSwitcher() {\n        const {\n            storeList,\n            onStoreSwitcherOutsideClick,\n            onStoreSwitcherClick,\n            isOpened,\n            storeLabel\n        } = this.props;\n\n        const mods = { isOpen: isOpened };\n\n        return (\n            <div block=\"StoreSwitcher\">\n                <ClickOutside onClick={ onStoreSwitcherOutsideClick }>\n                    <button\n                      block=\"StoreSwitcher\"\n                      elem=\"Title\"\n                      mods={ mods }\n                      onClick={ onStoreSwitcherClick }\n                    >\n                        { storeLabel }\n                    </button>\n\n                    <div block=\"StoreSwitcher\" elem=\"StoreList\" mods={ mods }>\n                        { storeList.map(this.renderStoreList) }\n                    </div>\n                </ClickOutside>\n            </div>\n        );\n    }\n\n    render() {\n        const { storeList, device } = this.props;\n\n        if (storeList.length <= 1) {\n            return null;\n        }\n\n        if (device.isMobile) {\n            return this.renderMobileStoreSwitcher();\n        }\n\n        return this.renderDesktopStoreSwitcher();\n    }\n}\n\nexport default StoreSwitcher;\n"]},"metadata":{},"sourceType":"module"}