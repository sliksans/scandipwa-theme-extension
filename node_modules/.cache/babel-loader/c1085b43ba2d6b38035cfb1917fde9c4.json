{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nexport const regionType = PropTypes.oneOfType([PropTypes.shape({\n  region_code: PropTypes.string,\n  region: PropTypes.string,\n  region_id: PropTypes.number\n})]);\nexport const addressType = PropTypes.shape({\n  city: PropTypes.string,\n  country_id: PropTypes.string,\n  customer_id: PropTypes.number,\n  default_billing: PropTypes.bool,\n  default_shipping: PropTypes.bool,\n  firstname: PropTypes.string,\n  id: PropTypes.number,\n  lastname: PropTypes.string,\n  middlename: PropTypes.string,\n  postcode: PropTypes.string,\n  prefix: PropTypes.string,\n  regionType,\n  street: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  suffix: PropTypes.string,\n  telephone: PropTypes.string\n});\nexport const addressesType = PropTypes.arrayOf(addressType);\nexport const customerType = PropTypes.shape({\n  addressesType,\n  created_at: PropTypes.string,\n  default_billing: PropTypes.string,\n  default_shipping: PropTypes.string,\n  dob: PropTypes.date,\n  email: PropTypes.string,\n  firstname: PropTypes.string,\n  group_id: PropTypes.number,\n  id: PropTypes.number,\n  is_subscribed: PropTypes.bool,\n  lastname: PropTypes.string,\n  middlename: PropTypes.string,\n  prefix: PropTypes.string,\n  suffix: PropTypes.string,\n  taxvat: PropTypes.string\n});\nexport const baseOrderInfoType = PropTypes.shape({\n  id: PropTypes.number,\n  increment_id: PropTypes.string,\n  created_at: PropTypes.string,\n  status_label: PropTypes.string,\n  grand_total: PropTypes.number,\n  subtotal: PropTypes.string\n}); // TODO: remove objects\n\nexport const orderType = PropTypes.shape({\n  base_order_info: baseOrderInfoType,\n  order_products: PropTypes.array,\n  payment_info: PropTypes.object,\n  shipping_info: PropTypes.object\n});\nexport const downloadableType = PropTypes.shape({\n  id: PropTypes.number,\n  order_id: PropTypes.string,\n  status_label: PropTypes.string,\n  downloads: PropTypes.string,\n  download_url: PropTypes.string,\n  created_at: PropTypes.string,\n  title: PropTypes.string\n});\nexport const ordersType = PropTypes.arrayOf(orderType);\nexport const DASHBOARD = 'dashboard';\nexport const MY_ORDERS = 'my-orders';\nexport const MY_DOWNLOADABLE = 'my-downloadable';\nexport const MY_WISHLIST = 'my-wishlist';\nexport const ADDRESS_BOOK = 'address-book';\nexport const NEWSLETTER_SUBSCRIPTION = 'newsletter-subscription';\nexport const activeTabType = PropTypes.string;\nexport const tabType = PropTypes.shape({\n  url: PropTypes.string,\n  name: PropTypes.string\n});\nexport const tabMapType = PropTypes.objectOf(tabType);\nexport const signInStateType = PropTypes.string;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/type/Account.js"],"names":["PropTypes","regionType","oneOfType","shape","region_code","string","region","region_id","number","addressType","city","country_id","customer_id","default_billing","bool","default_shipping","firstname","id","lastname","middlename","postcode","prefix","street","arrayOf","suffix","telephone","addressesType","customerType","created_at","dob","date","email","group_id","is_subscribed","taxvat","baseOrderInfoType","increment_id","status_label","grand_total","subtotal","orderType","base_order_info","order_products","array","payment_info","object","shipping_info","downloadableType","order_id","downloads","download_url","title","ordersType","DASHBOARD","MY_ORDERS","MY_DOWNLOADABLE","MY_WISHLIST","ADDRESS_BOOK","NEWSLETTER_SUBSCRIPTION","activeTabType","tabType","url","name","tabMapType","objectOf","signInStateType"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\n\nexport const regionType = PropTypes.oneOfType([\n    PropTypes.shape({\n        region_code: PropTypes.string,\n        region: PropTypes.string,\n        region_id: PropTypes.number\n    })\n]);\n\nexport const addressType = PropTypes.shape({\n    city: PropTypes.string,\n    country_id: PropTypes.string,\n    customer_id: PropTypes.number,\n    default_billing: PropTypes.bool,\n    default_shipping: PropTypes.bool,\n    firstname: PropTypes.string,\n    id: PropTypes.number,\n    lastname: PropTypes.string,\n    middlename: PropTypes.string,\n    postcode: PropTypes.string,\n    prefix: PropTypes.string,\n    regionType,\n    street: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.string)\n    ]),\n    suffix: PropTypes.string,\n    telephone: PropTypes.string\n});\n\nexport const addressesType = PropTypes.arrayOf(addressType);\n\nexport const customerType = PropTypes.shape({\n    addressesType,\n    created_at: PropTypes.string,\n    default_billing: PropTypes.string,\n    default_shipping: PropTypes.string,\n    dob: PropTypes.date,\n    email: PropTypes.string,\n    firstname: PropTypes.string,\n    group_id: PropTypes.number,\n    id: PropTypes.number,\n    is_subscribed: PropTypes.bool,\n    lastname: PropTypes.string,\n    middlename: PropTypes.string,\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    taxvat: PropTypes.string\n});\n\nexport const baseOrderInfoType = PropTypes.shape({\n    id: PropTypes.number,\n    increment_id: PropTypes.string,\n    created_at: PropTypes.string,\n    status_label: PropTypes.string,\n    grand_total: PropTypes.number,\n    subtotal: PropTypes.string\n});\n\n// TODO: remove objects\nexport const orderType = PropTypes.shape({\n    base_order_info: baseOrderInfoType,\n    order_products: PropTypes.array,\n    payment_info: PropTypes.object,\n    shipping_info: PropTypes.object\n});\n\nexport const downloadableType = PropTypes.shape({\n    id: PropTypes.number,\n    order_id: PropTypes.string,\n    status_label: PropTypes.string,\n    downloads: PropTypes.string,\n    download_url: PropTypes.string,\n    created_at: PropTypes.string,\n    title: PropTypes.string\n});\n\nexport const ordersType = PropTypes.arrayOf(orderType);\n\nexport const DASHBOARD = 'dashboard';\nexport const MY_ORDERS = 'my-orders';\nexport const MY_DOWNLOADABLE = 'my-downloadable';\nexport const MY_WISHLIST = 'my-wishlist';\nexport const ADDRESS_BOOK = 'address-book';\nexport const NEWSLETTER_SUBSCRIPTION = 'newsletter-subscription';\n\nexport const activeTabType = PropTypes.string;\n\nexport const tabType = PropTypes.shape({\n    url: PropTypes.string,\n    name: PropTypes.string\n});\n\nexport const tabMapType = PropTypes.objectOf(tabType);\n\nexport const signInStateType = PropTypes.string;\n"]},"metadata":{},"sourceType":"module"}