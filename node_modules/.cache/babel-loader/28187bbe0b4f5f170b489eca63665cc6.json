{"ast":null,"code":"var _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/SharedWishlistItem/SharedWishlistItem.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { connect } from 'react-redux';\nimport { WishlistItemContainer } from \"/home/arturs/scandiweb/extension/src/component/WishlistItem/WishlistItem.container\";\nimport { showNotification } from \"/home/arturs/scandiweb/extension/src/store/Notification/Notification.action\";\nimport SharedWishlistItem from \"./SharedWishlistItem.component\";\nexport const CartDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/extension/src/store/Cart/Cart.dispatcher\");\n/** #namespace Component/SharedWishlistItem/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    showNotification: function (type, message) {\n      return dispatch(showNotification(type, message));\n    },\n    addProductToCart: function (options) {\n      return CartDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.addProductToCart(dispatch, options);\n      });\n    }\n  };\n}, \"Component/SharedWishlistItem/Container/mapDispatchToProps\");\n/** #namespace Component/SharedWishlistItem/Container/sharedWishlistItemContainer */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const SharedWishlistItemContainer = Mosaic.middleware(class SharedWishlistItemContainer_ extends Mosaic.Extensible(WishlistItemContainer) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      quantity: 1\n    };\n\n    this.containerProps = function () {\n      const {\n        isLoading\n      } = _this.state;\n      return {\n        changeQuantity: _this.changeQuantity,\n        changeDescription: _this.changeDescription,\n        configurableVariantIndex: _this._getConfigurableVariantIndex(),\n        parameters: _this.getAttributes(),\n        isLoading\n      };\n    };\n\n    this.changeQuantity = function (quantity) {\n      _this.setState({\n        quantity\n      });\n    };\n  }\n\n  _getConfigurableVariantIndex() {\n    const {\n      product: {\n        wishlist: {\n          sku\n        },\n        variants\n      }\n    } = this.props;\n    return +this.getConfigurableVariantIndex(sku, variants);\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, SharedWishlistItem, Object.assign({}, this.props, this.state, this.containerProps(), this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, \"Component/SharedWishlistItem/Container/sharedWishlistItemContainer\");\n/** #namespace Component/SharedWishlistItem/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {};\n}, \"Component/SharedWishlistItem/Container/mapStateToProps\");\nexport default connect(mapStateToProps, mapDispatchToProps)(SharedWishlistItemContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/SharedWishlistItem/SharedWishlistItem.container.js"],"names":["connect","WishlistItemContainer","showNotification","SharedWishlistItem","CartDispatcher","mapDispatchToProps","dispatch","type","message","addProductToCart","options","then","default","dispatcher","state","quantity","containerProps","isLoading","changeQuantity","changeDescription","configurableVariantIndex","_getConfigurableVariantIndex","parameters","getAttributes","setState","product","wishlist","sku","variants","props","getConfigurableVariantIndex","render","containerFunctions","mapStateToProps","SharedWishlistItemContainer"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT;AACA,SAASC,gBAAT;AAEA,OAAOC,kBAAP;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC1B;AAD0B,kEAAvB;AAKP;;AACA,OAAO,MAAMC,kBAAkB,qBAAG,UAACC,QAAD;AAAA,SAAe;AAC7CJ,IAAAA,gBAAgB,EAAE,UAACK,IAAD,EAAOC,OAAP;AAAA,aAAmBF,QAAQ,CAACJ,gBAAgB,CAACK,IAAD,EAAOC,OAAP,CAAjB,CAA3B;AAAA,KAD2B;AAE7CC,IAAAA,gBAAgB,EAAE,UAACC,OAAD;AAAA,aAAaN,cAAc,CAACO,IAAf,CAC3B,UAAC;AAAEC,QAAAA,OAAO,EAAEC;AAAX,OAAD;AAAA,eAA6BA,UAAU,CAACJ,gBAAX,CAA4BH,QAA5B,EAAsCI,OAAtC,CAA7B;AAAA,OAD2B,CAAb;AAAA;AAF2B,GAAf;AAAA,CAAH,8DAAxB;AAOP;;;;AACA,0HAAiDT,qBAAjD,EAAuE;AAAA;AAAA;;AAAA;AAAA;AAAA,SACnEa,KADmE,GAC3D;AACJC,MAAAA,QAAQ,EAAE;AADN,KAD2D;;AAAA,SAUnEC,cAVmE,GAUlD,YAAM;AACnB,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAI,CAACH,KAA3B;AAEA,aAAO;AACHI,QAAAA,cAAc,EAAE,KAAI,CAACA,cADlB;AAEHC,QAAAA,iBAAiB,EAAE,KAAI,CAACA,iBAFrB;AAGHC,QAAAA,wBAAwB,EAAE,KAAI,CAACC,4BAAL,EAHvB;AAIHC,QAAAA,UAAU,EAAE,KAAI,CAACC,aAAL,EAJT;AAKHN,QAAAA;AALG,OAAP;AAOH,KApBkE;;AAAA,SAsBnEC,cAtBmE,GAsBlD,UAACH,QAAD,EAAc;AAC3B,MAAA,KAAI,CAACS,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACH,KAxBkE;AAAA;;AAKnEM,EAAAA,4BAA4B,GAAG;AAC3B,UAAM;AAAEI,MAAAA,OAAO,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA;AAAF,SAAZ;AAAqBC,QAAAA;AAArB;AAAX,QAA+C,KAAKC,KAA1D;AACA,WAAO,CAAC,KAAKC,2BAAL,CAAiCH,GAAjC,EAAsCC,QAAtC,CAAR;AACH;;AAkBDG,EAAAA,MAAM,GAAG;AACL,yCACK,kBADL,oBAEW,KAAKF,KAFhB,EAGW,KAAKf,KAHhB,EAIW,KAAKE,cAAL,EAJX,EAKW,KAAKgB,kBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQH;;AAnCkE,CAAvE;AAsCA;AACA;;AACA,OAAO,MAAMC,eAAe,qBAAG,UAACnB,KAAD;AAAA,SAAY,EAAZ;AAAA,CAAH,2DAArB;AAEP,eAAed,OAAO,CAACiC,eAAD,EAAkB5B,kBAAlB,CAAP,CAA6C6B,2BAA7C,CAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { connect } from 'react-redux';\n\nimport { WishlistItemContainer } from 'Component/WishlistItem/WishlistItem.container';\nimport { showNotification } from 'Store/Notification/Notification.action';\n\nimport SharedWishlistItem from './SharedWishlistItem.component';\n\nexport const CartDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Cart/Cart.dispatcher'\n);\n\n/** @namespace Component/SharedWishlistItem/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showNotification: (type, message) => dispatch(showNotification(type, message)),\n    addProductToCart: (options) => CartDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.addProductToCart(dispatch, options)\n    )\n});\n\n/** @namespace Component/SharedWishlistItem/Container/sharedWishlistItemContainer */\nexport class SharedWishlistItemContainer extends WishlistItemContainer {\n    state = {\n        quantity: 1\n    };\n\n    _getConfigurableVariantIndex() {\n        const { product: { wishlist: { sku }, variants } } = this.props;\n        return +this.getConfigurableVariantIndex(sku, variants);\n    }\n\n    containerProps = () => {\n        const { isLoading } = this.state;\n\n        return {\n            changeQuantity: this.changeQuantity,\n            changeDescription: this.changeDescription,\n            configurableVariantIndex: this._getConfigurableVariantIndex(),\n            parameters: this.getAttributes(),\n            isLoading\n        };\n    };\n\n    changeQuantity = (quantity) => {\n        this.setState({ quantity });\n    };\n\n    render() {\n        return (\n            <SharedWishlistItem\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\n/** @namespace Component/SharedWishlistItem/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SharedWishlistItemContainer);\n"]},"metadata":{},"sourceType":"module"}