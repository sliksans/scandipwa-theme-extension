{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/NewVersionPopup/NewVersionPopup.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { goToPreviousNavigationState } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.action\";\nimport { TOP_NAVIGATION_TYPE } from \"/home/arturs/scandiweb/scandipwa/src/store/Navigation/Navigation.reducer\";\nimport { hideActiveOverlay } from \"/home/arturs/scandiweb/scandipwa/src/store/Overlay/Overlay.action\";\nimport { showPopup } from \"/home/arturs/scandiweb/scandipwa/src/store/Popup/Popup.action\";\nimport { DeviceType } from \"/home/arturs/scandiweb/scandipwa/src/type/Device\";\nimport NewVersionPopup from \"./NewVersionPopup.component\";\nimport { NEW_VERSION_POPUP_ID } from \"./NewVersionPopup.config\";\n/** #namespace Component/NewVersionPopup/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    device: state.ConfigReducer.device\n  };\n}, \"Component/NewVersionPopup/Container/mapStateToProps\");\n/** #namespace Component/NewVersionPopup/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    showPopup: function (payload) {\n      return dispatch(showPopup(NEW_VERSION_POPUP_ID, payload));\n    },\n    goToPreviousHeaderState: function () {\n      return dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE));\n    },\n    hideActiveOverlay: function () {\n      return dispatch(hideActiveOverlay());\n    }\n  };\n}, \"Component/NewVersionPopup/Container/mapDispatchToProps\");\n/** #namespace Component/NewVersionPopup/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const NewVersionPopupContainer = Mosaic.middleware((_temp = _class = class NewVersionPopupContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.containerFunctions = {\n      toggleNewVersion: this.toggleNewVersion.bind(this),\n      handleDismiss: this.handleDismiss.bind(this)\n    };\n  }\n\n  componentDidMount() {\n    const {\n      showPopup,\n      goToPreviousHeaderState,\n      device\n    } = this.props;\n\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.addEventListener('controllerchange', function () {\n        showPopup({\n          title: __('New version available!')\n        });\n\n        if (device.isMobile) {\n          goToPreviousHeaderState();\n        }\n      });\n    }\n  }\n\n  toggleNewVersion() {\n    window.location.reload();\n  }\n\n  handleDismiss() {\n    const {\n      hideActiveOverlay\n    } = this.props;\n    hideActiveOverlay();\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, NewVersionPopup, Object.assign({}, this.props, this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  showPopup: PropTypes.func.isRequired,\n  goToPreviousHeaderState: PropTypes.func.isRequired,\n  device: DeviceType.isRequired,\n  hideActiveOverlay: PropTypes.func.isRequired\n}, _temp), \"Component/NewVersionPopup/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(NewVersionPopupContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/NewVersionPopup/NewVersionPopup.container.js"],"names":["PropTypes","PureComponent","connect","goToPreviousNavigationState","TOP_NAVIGATION_TYPE","hideActiveOverlay","showPopup","DeviceType","NewVersionPopup","NEW_VERSION_POPUP_ID","mapStateToProps","state","device","ConfigReducer","mapDispatchToProps","dispatch","payload","goToPreviousHeaderState","containerFunctions","toggleNewVersion","bind","handleDismiss","componentDidMount","props","navigator","serviceWorker","addEventListener","title","__","isMobile","window","location","reload","render","propTypes","func","isRequired","NewVersionPopupContainer"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,2BAAT;AACA,SAASC,mBAAT;AACA,SAASC,iBAAT;AACA,SAASC,SAAT;AACA,SAASC,UAAT;AAEA,OAAOC,eAAP;AACA,SAASC,oBAAT;AAEA;;AACA,OAAO,MAAMC,eAAe,qBAAG,UAACC,KAAD;AAAA,SAAY;AACvCC,IAAAA,MAAM,EAAED,KAAK,CAACE,aAAN,CAAoBD;AADW,GAAZ;AAAA,CAAH,wDAArB;AAIP;;AACA,OAAO,MAAME,kBAAkB,qBAAG,UAACC,QAAD;AAAA,SAAe;AAC7CT,IAAAA,SAAS,EAAE,UAACU,OAAD;AAAA,aAAaD,QAAQ,CAACT,SAAS,CAACG,oBAAD,EAAuBO,OAAvB,CAAV,CAArB;AAAA,KADkC;AAE7CC,IAAAA,uBAAuB,EAAE;AAAA,aAAMF,QAAQ,CAACZ,2BAA2B,CAACC,mBAAD,CAA5B,CAAd;AAAA,KAFoB;AAG7CC,IAAAA,iBAAiB,EAAE;AAAA,aAAMU,QAAQ,CAACV,iBAAiB,EAAlB,CAAd;AAAA;AAH0B,GAAf;AAAA,CAAH,2DAAxB;AAMP;;;;AACA,sIAA8CJ,aAA9C,EAA4D;AAAA;AAAA;AAAA,SAQxDiB,kBARwD,GAQnC;AACjBC,MAAAA,gBAAgB,EAAE,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CADD;AAEjBC,MAAAA,aAAa,EAAE,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB;AAFE,KARmC;AAAA;;AAaxDE,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEhB,MAAAA,SAAF;AAAaW,MAAAA,uBAAb;AAAsCL,MAAAA;AAAtC,QAAiD,KAAKW,KAA5D;;AAEA,QAAI,mBAAmBC,SAAvB,EAAkC;AAC9BA,MAAAA,SAAS,CAACC,aAAV,CAAwBC,gBAAxB,CAAyC,kBAAzC,EAA6D,YAAM;AAC/DpB,QAAAA,SAAS,CAAC;AACNqB,UAAAA,KAAK,EAAEC,EAAE,CAAC,wBAAD;AADH,SAAD,CAAT;;AAIA,YAAIhB,MAAM,CAACiB,QAAX,EAAqB;AACjBZ,UAAAA,uBAAuB;AAC1B;AACJ,OARD;AASH;AACJ;;AAEDE,EAAAA,gBAAgB,GAAG;AACfW,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AAEDX,EAAAA,aAAa,GAAG;AACZ,UAAM;AAAEhB,MAAAA;AAAF,QAAwB,KAAKkB,KAAnC;AAEAlB,IAAAA,iBAAiB;AACpB;;AAED4B,EAAAA,MAAM,GAAG;AACL,yCACK,eADL,oBAEW,KAAKV,KAFhB,EAGW,KAAKL,kBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;;AA9CuD,CAA5D,SACWgB,SADX,GACuB;AACf5B,EAAAA,SAAS,EAAEN,SAAS,CAACmC,IAAV,CAAeC,UADX;AAEfnB,EAAAA,uBAAuB,EAAEjB,SAAS,CAACmC,IAAV,CAAeC,UAFzB;AAGfxB,EAAAA,MAAM,EAAEL,UAAU,CAAC6B,UAHJ;AAIf/B,EAAAA,iBAAiB,EAAEL,SAAS,CAACmC,IAAV,CAAeC;AAJnB,CADvB;AAiDA,eAAelC,OAAO,CAACQ,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CuB,wBAA7C,CAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { goToPreviousNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { hideActiveOverlay } from 'Store/Overlay/Overlay.action';\nimport { showPopup } from 'Store/Popup/Popup.action';\nimport { DeviceType } from 'Type/Device';\n\nimport NewVersionPopup from './NewVersionPopup.component';\nimport { NEW_VERSION_POPUP_ID } from './NewVersionPopup.config';\n\n/** @namespace Component/NewVersionPopup/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device\n});\n\n/** @namespace Component/NewVersionPopup/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showPopup: (payload) => dispatch(showPopup(NEW_VERSION_POPUP_ID, payload)),\n    goToPreviousHeaderState: () => dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE)),\n    hideActiveOverlay: () => dispatch(hideActiveOverlay())\n});\n\n/** @namespace Component/NewVersionPopup/Container */\nexport class NewVersionPopupContainer extends PureComponent {\n    static propTypes = {\n        showPopup: PropTypes.func.isRequired,\n        goToPreviousHeaderState: PropTypes.func.isRequired,\n        device: DeviceType.isRequired,\n        hideActiveOverlay: PropTypes.func.isRequired\n    };\n\n    containerFunctions = {\n        toggleNewVersion: this.toggleNewVersion.bind(this),\n        handleDismiss: this.handleDismiss.bind(this)\n    };\n\n    componentDidMount() {\n        const { showPopup, goToPreviousHeaderState, device } = this.props;\n\n        if ('serviceWorker' in navigator) {\n            navigator.serviceWorker.addEventListener('controllerchange', () => {\n                showPopup({\n                    title: __('New version available!')\n                });\n\n                if (device.isMobile) {\n                    goToPreviousHeaderState();\n                }\n            });\n        }\n    }\n\n    toggleNewVersion() {\n        window.location.reload();\n    }\n\n    handleDismiss() {\n        const { hideActiveOverlay } = this.props;\n\n        hideActiveOverlay();\n    }\n\n    render() {\n        return (\n            <NewVersionPopup\n              { ...this.props }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewVersionPopupContainer);\n"]},"metadata":{},"sourceType":"module"}