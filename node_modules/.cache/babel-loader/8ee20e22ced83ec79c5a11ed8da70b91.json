{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/SwipeToDelete/SwipeToDelete.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\nimport Draggable from \"/home/arturs/scandiweb/extension/src/component/Draggable\";\nimport Loader from \"/home/arturs/scandiweb/extension/src/component/Loader\";\nimport { ChildrenType } from \"/home/arturs/scandiweb/extension/src/type/Common\";\nimport CSS from \"/home/arturs/scandiweb/extension/src/util/CSS\";\nimport { ANIMATION_DURATION, ANIMATION_DURATION_ON_REMOVE, DRAG_ITEM_REMOVE_THRESHOLD, DRAG_RIGHT_OPEN_THRESHOLD, DRAG_RIGHT_OPEN_TRIGGER_THRESHOLD } from \"./SwipeToDelete.config\";\nimport \"./SwipeToDelete.style\";\n/** #namespace Component/SwipeToDelete/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const SwipeToDelete = Mosaic.middleware((_temp = _class = class SwipeToDelete_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      isRightSideOpen: false,\n      isAheadRemoveItemThreshold: false\n    };\n    this.draggableRef = /*#__PURE__*/createRef();\n\n    this.handleDragStart = function () {\n      // Remove animation when drag starts\n      _this.setAnimationSpeedStyle(0);\n    };\n\n    this.handleDrag = function ({\n      translateX\n    }) {\n      const {\n        dragRightOpenThreshold\n      } = _this.props;\n      const {\n        isRightSideOpen,\n        isAheadRemoveItemThreshold\n      } = _this.state;\n      const {\n        draggableRemoveThreshold\n      } = _this;\n      const nextIsAheadRemoveItemThreshold = Math.abs(translateX) > draggableRemoveThreshold;\n\n      if (isAheadRemoveItemThreshold !== nextIsAheadRemoveItemThreshold) {\n        _this.setState({\n          isAheadRemoveItemThreshold: nextIsAheadRemoveItemThreshold\n        });\n      } // When dragging to left from current start point, going negative translateX\n\n\n      if (translateX <= 0) {\n        const translate = isRightSideOpen // Add (remove to have minus value) opened content width, to have full -translateX value\n        ? translateX - dragRightOpenThreshold : translateX;\n\n        _this.setTranslateXStyle(translate);\n\n        return;\n      } // When dragging to right from current start point, going positive translateX\n\n\n      if (translateX > 0) {\n        // When translate goes out of screen\n        if (!isRightSideOpen || isRightSideOpen && translateX - dragRightOpenThreshold > 0) {\n          _this.setTranslateXStyle(0);\n\n          return;\n        } // When content is opened and dragging to right side\n\n\n        if (translateX - dragRightOpenThreshold < 0 && isRightSideOpen) {\n          // Add (remove to have minus value) opened content width, to have full -translateX value\n          _this.setTranslateXStyle(translateX - dragRightOpenThreshold);\n        }\n      }\n    };\n\n    this.handleDragEnd = function ({\n      translateX\n    }) {\n      const {\n        dragRightOpenThreshold,\n        dragRightOpenTriggerThreshold,\n        onAheadOfDragItemRemoveThreshold,\n        animationDurationOnRemove\n      } = _this.props;\n      const {\n        isAheadRemoveItemThreshold\n      } = _this.state;\n      const {\n        draggableWidth\n      } = _this;\n      const shouldOpen = translateX > -dragRightOpenTriggerThreshold;\n\n      if (isAheadRemoveItemThreshold) {\n        // swipe to the end\n        _this.setAnimationSpeedStyle(animationDurationOnRemove);\n\n        _this.setTranslateXStyle(-draggableWidth);\n\n        onAheadOfDragItemRemoveThreshold();\n        return;\n      }\n\n      _this.setAnimationSpeedStyle();\n\n      _this.setState({\n        isRightSideOpen: !shouldOpen\n      });\n\n      if (shouldOpen) {\n        _this.setTranslateXStyle(0);\n\n        return;\n      }\n\n      _this.setTranslateXStyle(-dragRightOpenThreshold);\n    };\n  }\n\n  componentDidMount() {\n    // Sets default style\n    this.setTranslateXStyle(0);\n    this.setRightSideContentWidth();\n    this.setDraggableWidth();\n    this.setDraggableRemoveThreshold();\n  }\n\n  setRightSideContentWidth() {\n    const {\n      dragRightOpenThreshold\n    } = this.props;\n    CSS.setVariable(this.draggableRef, 'right-side-content-width', `${dragRightOpenThreshold}px`);\n  }\n\n  setTranslateXStyle(translate) {\n    CSS.setVariable(this.draggableRef, 'translateX', `${translate}px`);\n  }\n\n  setDraggableWidth() {\n    const {\n      draggableRef\n    } = this;\n    const {\n      width\n    } = draggableRef.current.getBoundingClientRect();\n    this.draggableWidth = width;\n  }\n\n  setDraggableRemoveThreshold() {\n    const {\n      draggableWidth\n    } = this;\n    const {\n      dragRightOpenThreshold,\n      dragItemRemoveThreshold\n    } = this.props;\n    this.draggableRemoveThreshold = draggableWidth * dragItemRemoveThreshold - dragRightOpenThreshold;\n  }\n\n  setAnimationSpeedStyle(specAnimationDuration) {\n    const {\n      animationDuration\n    } = this.props;\n    const duration = specAnimationDuration === undefined ? animationDuration : specAnimationDuration;\n    CSS.setVariable(this.draggableRef, 'animation-speed', `${duration}ms`);\n  }\n\n  renderRightSideContent() {\n    const {\n      renderRightSideContent,\n      rightSideMix\n    } = this.props;\n    const {\n      isAheadRemoveItemThreshold\n    } = this.state;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"SwipeToDelete\",\n      elem: \"RightSideContentWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"SwipeToDelete\",\n      elem: \"RightSideContent\",\n      mods: {\n        isAheadRemoveItemThreshold\n      },\n      mix: rightSideMix,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, renderRightSideContent()));\n  }\n\n  renderChildren() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"SwipeToDelete\",\n      role: \"button\",\n      tabIndex: \"0\" // eslint-disable-next-line react/jsx-no-bind\n      ,\n      onMouseDown: function (e) {\n        return e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, children), this.renderRightSideContent());\n  }\n\n  render() {\n    const {\n      topElemMix,\n      isLoading\n    } = this.props;\n    const {\n      isAheadRemoveItemThreshold\n    } = this.state;\n    return /*#__PURE__*/_checkBEM(React, Draggable, {\n      onDrag: this.handleDrag,\n      draggableRef: this.draggableRef,\n      onDragStart: this.handleDragStart,\n      onDragEnd: this.handleDragEnd,\n      mix: topElemMix,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, Loader, {\n      isLoading: isLoading && isAheadRemoveItemThreshold,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }), this.renderChildren());\n  }\n\n}, _class.propTypes = {\n  children: ChildrenType.isRequired,\n  dragRightOpenTriggerThreshold: PropTypes.number,\n  dragRightOpenThreshold: PropTypes.number,\n  dragItemRemoveThreshold: PropTypes.number,\n  animationDuration: PropTypes.number,\n  animationDurationOnRemove: PropTypes.number,\n  renderRightSideContent: PropTypes.func,\n  rightSideMix: PropTypes.object,\n  topElemMix: PropTypes.object,\n  onAheadOfDragItemRemoveThreshold: PropTypes.func,\n  isLoading: PropTypes.bool\n}, _class.defaultProps = {\n  // Threshold after we open right side\n  dragRightOpenTriggerThreshold: DRAG_RIGHT_OPEN_TRIGGER_THRESHOLD,\n  // Width of opened right side\n  dragRightOpenThreshold: DRAG_RIGHT_OPEN_THRESHOLD,\n  // Threshold after we remove item on touchend as percentage of item width\n  dragItemRemoveThreshold: DRAG_ITEM_REMOVE_THRESHOLD,\n  animationDuration: ANIMATION_DURATION,\n  animationDurationOnRemove: ANIMATION_DURATION_ON_REMOVE,\n  renderRightSideContent: function () {},\n  rightSideMix: {},\n  topElemMix: {},\n  onAheadOfDragItemRemoveThreshold: function () {},\n  isLoading: false\n}, _temp), \"Component/SwipeToDelete/Component\");\nexport default SwipeToDelete;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/SwipeToDelete/SwipeToDelete.component.js"],"names":["PropTypes","createRef","PureComponent","Draggable","Loader","ChildrenType","CSS","ANIMATION_DURATION","ANIMATION_DURATION_ON_REMOVE","DRAG_ITEM_REMOVE_THRESHOLD","DRAG_RIGHT_OPEN_THRESHOLD","DRAG_RIGHT_OPEN_TRIGGER_THRESHOLD","state","isRightSideOpen","isAheadRemoveItemThreshold","draggableRef","handleDragStart","setAnimationSpeedStyle","handleDrag","translateX","dragRightOpenThreshold","props","draggableRemoveThreshold","nextIsAheadRemoveItemThreshold","Math","abs","setState","translate","setTranslateXStyle","handleDragEnd","dragRightOpenTriggerThreshold","onAheadOfDragItemRemoveThreshold","animationDurationOnRemove","draggableWidth","shouldOpen","componentDidMount","setRightSideContentWidth","setDraggableWidth","setDraggableRemoveThreshold","setVariable","width","current","getBoundingClientRect","dragItemRemoveThreshold","specAnimationDuration","animationDuration","duration","undefined","renderRightSideContent","rightSideMix","renderChildren","children","e","stopPropagation","render","topElemMix","isLoading","propTypes","isRequired","number","func","object","bool","defaultProps","SwipeToDelete"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\n\nimport Draggable from 'Component/Draggable';\nimport Loader from 'Component/Loader';\nimport { ChildrenType } from 'Type/Common';\nimport CSS from 'Util/CSS';\n\nimport {\n    ANIMATION_DURATION,\n    ANIMATION_DURATION_ON_REMOVE,\n    DRAG_ITEM_REMOVE_THRESHOLD,\n    DRAG_RIGHT_OPEN_THRESHOLD,\n    DRAG_RIGHT_OPEN_TRIGGER_THRESHOLD\n} from './SwipeToDelete.config';\n\nimport './SwipeToDelete.style';\n\n/** @namespace Component/SwipeToDelete/Component */\nexport class SwipeToDelete extends PureComponent {\n    static propTypes = {\n        children: ChildrenType.isRequired,\n        dragRightOpenTriggerThreshold: PropTypes.number,\n        dragRightOpenThreshold: PropTypes.number,\n        dragItemRemoveThreshold: PropTypes.number,\n        animationDuration: PropTypes.number,\n        animationDurationOnRemove: PropTypes.number,\n        renderRightSideContent: PropTypes.func,\n        rightSideMix: PropTypes.object,\n        topElemMix: PropTypes.object,\n        onAheadOfDragItemRemoveThreshold: PropTypes.func,\n        isLoading: PropTypes.bool\n    };\n\n    static defaultProps = {\n        // Threshold after we open right side\n        dragRightOpenTriggerThreshold: DRAG_RIGHT_OPEN_TRIGGER_THRESHOLD,\n        // Width of opened right side\n        dragRightOpenThreshold: DRAG_RIGHT_OPEN_THRESHOLD,\n        // Threshold after we remove item on touchend as percentage of item width\n        dragItemRemoveThreshold: DRAG_ITEM_REMOVE_THRESHOLD,\n        animationDuration: ANIMATION_DURATION,\n        animationDurationOnRemove: ANIMATION_DURATION_ON_REMOVE,\n        renderRightSideContent: () => {},\n        rightSideMix: {},\n        topElemMix: {},\n        onAheadOfDragItemRemoveThreshold: () => {},\n        isLoading: false\n    };\n\n    state = {\n        isRightSideOpen: false,\n        isAheadRemoveItemThreshold: false\n    };\n\n    draggableRef = createRef();\n\n    draggableRemoveThreshold;\n\n    draggableWidth;\n\n    componentDidMount() {\n        // Sets default style\n        this.setTranslateXStyle(0);\n        this.setRightSideContentWidth();\n        this.setDraggableWidth();\n        this.setDraggableRemoveThreshold();\n    }\n\n    setRightSideContentWidth() {\n        const { dragRightOpenThreshold } = this.props;\n        CSS.setVariable(this.draggableRef, 'right-side-content-width', `${ dragRightOpenThreshold }px`);\n    }\n\n    setTranslateXStyle(translate) {\n        CSS.setVariable(this.draggableRef, 'translateX', `${ translate }px`);\n    }\n\n    setDraggableWidth() {\n        const { draggableRef } = this;\n        const { width } = draggableRef.current.getBoundingClientRect();\n        this.draggableWidth = width;\n    }\n\n    setDraggableRemoveThreshold() {\n        const { draggableWidth } = this;\n        const {\n            dragRightOpenThreshold,\n            dragItemRemoveThreshold\n        } = this.props;\n\n        this.draggableRemoveThreshold = draggableWidth * dragItemRemoveThreshold - dragRightOpenThreshold;\n    }\n\n    setAnimationSpeedStyle(specAnimationDuration) {\n        const { animationDuration } = this.props;\n\n        const duration = specAnimationDuration === undefined\n            ? animationDuration\n            : specAnimationDuration;\n\n        CSS.setVariable(this.draggableRef, 'animation-speed', `${ duration }ms`);\n    }\n\n    handleDragStart = () => {\n        // Remove animation when drag starts\n        this.setAnimationSpeedStyle(0);\n    };\n\n    handleDrag = ({ translateX }) => {\n        const { dragRightOpenThreshold } = this.props;\n        const { isRightSideOpen, isAheadRemoveItemThreshold } = this.state;\n        const { draggableRemoveThreshold } = this;\n        const nextIsAheadRemoveItemThreshold = Math.abs(translateX) > draggableRemoveThreshold;\n\n        if (isAheadRemoveItemThreshold !== nextIsAheadRemoveItemThreshold) {\n            this.setState({\n                isAheadRemoveItemThreshold: nextIsAheadRemoveItemThreshold\n            });\n        }\n\n        // When dragging to left from current start point, going negative translateX\n        if (translateX <= 0) {\n            const translate = isRightSideOpen\n                // Add (remove to have minus value) opened content width, to have full -translateX value\n                ? translateX - dragRightOpenThreshold\n                : translateX;\n\n            this.setTranslateXStyle(translate);\n\n            return;\n        }\n\n        // When dragging to right from current start point, going positive translateX\n        if (translateX > 0) {\n            // When translate goes out of screen\n            if (!isRightSideOpen || (isRightSideOpen && translateX - dragRightOpenThreshold > 0)) {\n                this.setTranslateXStyle(0);\n\n                return;\n            }\n\n            // When content is opened and dragging to right side\n            if (translateX - dragRightOpenThreshold < 0 && isRightSideOpen) {\n                // Add (remove to have minus value) opened content width, to have full -translateX value\n                this.setTranslateXStyle(translateX - dragRightOpenThreshold);\n            }\n        }\n    };\n\n    handleDragEnd = ({ translateX }) => {\n        const {\n            dragRightOpenThreshold,\n            dragRightOpenTriggerThreshold,\n            onAheadOfDragItemRemoveThreshold,\n            animationDurationOnRemove\n        } = this.props;\n        const { isAheadRemoveItemThreshold } = this.state;\n        const { draggableWidth } = this;\n        const shouldOpen = translateX > -dragRightOpenTriggerThreshold;\n\n        if (isAheadRemoveItemThreshold) {\n            // swipe to the end\n            this.setAnimationSpeedStyle(animationDurationOnRemove);\n            this.setTranslateXStyle(-draggableWidth);\n            onAheadOfDragItemRemoveThreshold();\n            return;\n        }\n\n        this.setAnimationSpeedStyle();\n        this.setState({ isRightSideOpen: !shouldOpen });\n\n        if (shouldOpen) {\n            this.setTranslateXStyle(0);\n\n            return;\n        }\n\n        this.setTranslateXStyle(-dragRightOpenThreshold);\n    };\n\n    renderRightSideContent() {\n        const { renderRightSideContent, rightSideMix } = this.props;\n        const { isAheadRemoveItemThreshold } = this.state;\n\n        return (\n            <div\n              block=\"SwipeToDelete\"\n              elem=\"RightSideContentWrapper\"\n            >\n                <div\n                  block=\"SwipeToDelete\"\n                  elem=\"RightSideContent\"\n                  mods={ { isAheadRemoveItemThreshold } }\n                  mix={ rightSideMix }\n                >\n                    { renderRightSideContent() }\n                </div>\n            </div>\n        );\n    }\n\n    renderChildren() {\n        const { children } = this.props;\n\n        return (\n            <>\n                <div\n                  block=\"SwipeToDelete\"\n                  role=\"button\"\n                  tabIndex=\"0\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onMouseDown={ (e) => e.stopPropagation() }\n                >\n                    { children }\n                </div>\n                { this.renderRightSideContent() }\n            </>\n        );\n    }\n\n    render() {\n        const { topElemMix, isLoading } = this.props;\n        const { isAheadRemoveItemThreshold } = this.state;\n\n        return (\n            <Draggable\n              onDrag={ this.handleDrag }\n              draggableRef={ this.draggableRef }\n              onDragStart={ this.handleDragStart }\n              onDragEnd={ this.handleDragEnd }\n              mix={ topElemMix }\n            >\n                <Loader isLoading={ isLoading && isAheadRemoveItemThreshold } />\n                { this.renderChildren() }\n            </Draggable>\n        );\n    }\n}\n\nexport default SwipeToDelete;\n"]},"metadata":{},"sourceType":"module"}