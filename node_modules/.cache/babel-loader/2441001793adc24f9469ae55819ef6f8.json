{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ResetButton/ResetButton.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { MixType } from \"/home/arturs/scandiweb/extension/src/type/Common\";\nimport \"./ResetButton.style\";\n/** #namespace Component/ResetButton/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ResetButton = Mosaic.middleware((_temp = _class = class ResetButton_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.onClick = function () {\n      const {\n        onClick,\n        resetFilters\n      } = _this.props;\n      onClick();\n      resetFilters();\n    };\n  }\n\n  render() {\n    const {\n      mix,\n      isContentFiltered\n    } = this.props;\n\n    if (!isContentFiltered) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ResetButton\",\n      mix: mix,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"button\", {\n      onClick: this.onClick,\n      block: \"ResetButton\",\n      elem: \"Button\",\n      mix: {\n        block: 'Button',\n        mods: {\n          isHollow: true\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, __('Reset')));\n  }\n\n}, _class.propTypes = {\n  mix: MixType,\n  resetFilters: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  isContentFiltered: PropTypes.bool.isRequired\n}, _class.defaultProps = {\n  mix: {}\n}, _temp), \"Component/ResetButton/Component\");\nexport default ResetButton;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ResetButton/ResetButton.component.js"],"names":["PropTypes","PureComponent","MixType","onClick","resetFilters","props","render","mix","isContentFiltered","block","mods","isHollow","__","propTypes","func","isRequired","bool","defaultProps","ResetButton"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,SAASC,OAAT;AAEA;AAEA;;;;AACA,4GAAiCD,aAAjC,EAA+C;AAAA;AAAA;;AAAA;AAAA;;AAAA,SAY3CE,OAZ2C,GAYjC,YAAM;AACZ,YAAM;AAAEA,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAA4B,KAAI,CAACC,KAAvC;AAEAF,MAAAA,OAAO;AACPC,MAAAA,YAAY;AACf,KAjB0C;AAAA;;AAmB3CE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAA6B,KAAKH,KAAxC;;AAEA,QAAI,CAACG,iBAAL,EAAwB;AACpB,aAAO,IAAP;AACH;;AAED;AAEM,MAAA,KAAK,EAAC,aAFZ;AAGM,MAAA,GAAG,EAAGD,GAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMU,MAAA,OAAO,EAAG,KAAKJ,OANzB;AAOU,MAAA,KAAK,EAAC,aAPhB;AAQU,MAAA,IAAI,EAAC,QARf;AASU,MAAA,GAAG,EAAG;AACFM,QAAAA,KAAK,EAAE,QADL;AAEFC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAFJ,OAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAccC,EAAE,CAAC,OAAD,CAdhB;AAkBH;;AA5C0C,CAA/C,SACWC,SADX,GACuB;AACfN,EAAAA,GAAG,EAAEL,OADU;AAEfE,EAAAA,YAAY,EAAEJ,SAAS,CAACc,IAAV,CAAeC,UAFd;AAGfZ,EAAAA,OAAO,EAAEH,SAAS,CAACc,IAAV,CAAeC,UAHT;AAIfP,EAAAA,iBAAiB,EAAER,SAAS,CAACgB,IAAV,CAAeD;AAJnB,CADvB,SAQWE,YARX,GAQ0B;AAClBV,EAAAA,GAAG,EAAE;AADa,CAR1B;AA+CA,eAAeW,WAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { MixType } from 'Type/Common';\n\nimport './ResetButton.style';\n\n/** @namespace Component/ResetButton/Component */\nexport class ResetButton extends PureComponent {\n    static propTypes = {\n        mix: MixType,\n        resetFilters: PropTypes.func.isRequired,\n        onClick: PropTypes.func.isRequired,\n        isContentFiltered: PropTypes.bool.isRequired\n    };\n\n    static defaultProps = {\n        mix: {}\n    };\n\n    onClick = () => {\n        const { onClick, resetFilters } = this.props;\n\n        onClick();\n        resetFilters();\n    };\n\n    render() {\n        const { mix, isContentFiltered } = this.props;\n\n        if (!isContentFiltered) {\n            return null;\n        }\n\n        return (\n            <div\n              block=\"ResetButton\"\n              mix={ mix }\n            >\n                <button\n                  onClick={ this.onClick }\n                  block=\"ResetButton\"\n                  elem=\"Button\"\n                  mix={ {\n                      block: 'Button',\n                      mods: { isHollow: true }\n                  } }\n                >\n                    { __('Reset') }\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default ResetButton;\n"]},"metadata":{},"sourceType":"module"}