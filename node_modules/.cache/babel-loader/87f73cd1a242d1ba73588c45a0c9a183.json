{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressBook/MyAccountAddressBook.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport MyAccountAddressPopup from \"/home/arturs/scandiweb/extension/src/component/MyAccountAddressPopup\";\nimport MyAccountAddressTable from \"/home/arturs/scandiweb/extension/src/component/MyAccountAddressTable\";\nimport { customerType } from \"/home/arturs/scandiweb/extension/src/type/Account\";\nimport \"./MyAccountAddressBook.style\";\n/** #namespace Component/MyAccountAddressBook/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountAddressBook = Mosaic.middleware((_temp = _class = class MyAccountAddressBook_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.renderAddress = function (address, index) {\n      const {\n        getDefaultPostfix\n      } = _this.props;\n      const addressNumber = index + 1;\n      const postfix = getDefaultPostfix(address);\n      return /*#__PURE__*/_checkBEM(React, MyAccountAddressTable, {\n        title: __('Address #%s%s', addressNumber, postfix),\n        showActions: true,\n        address: address,\n        key: addressNumber,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      });\n    };\n  }\n\n  renderPopup() {\n    return /*#__PURE__*/_checkBEM(React, MyAccountAddressPopup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    });\n  }\n\n  renderNoAddresses() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, __('You have no configured addresses.')));\n  }\n\n  renderActions() {\n    const {\n      showCreateNewPopup\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"button\", {\n      block: \"MyAccountAddressBook\",\n      elem: \"Button\",\n      mix: {\n        block: 'Button'\n      },\n      onClick: showCreateNewPopup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, __('Add new address'));\n  }\n\n  renderAddressList() {\n    const {\n      customer: {\n        addresses = []\n      }\n    } = this.props;\n\n    if (!addresses.length) {\n      return this.renderNoAddresses();\n    }\n\n    return addresses.map(this.renderAddress);\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"MyAccountAddressBook\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, this.renderActions(), this.renderAddressList(), this.renderPopup());\n  }\n\n}, _class.propTypes = {\n  customer: customerType.isRequired,\n  getDefaultPostfix: PropTypes.func.isRequired,\n  showCreateNewPopup: PropTypes.func.isRequired\n}, _temp), \"Component/MyAccountAddressBook/Component\");\nexport default MyAccountAddressBook;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/MyAccountAddressBook/MyAccountAddressBook.component.js"],"names":["PropTypes","PureComponent","MyAccountAddressPopup","MyAccountAddressTable","customerType","renderAddress","address","index","getDefaultPostfix","props","addressNumber","postfix","__","renderPopup","renderNoAddresses","renderActions","showCreateNewPopup","block","renderAddressList","customer","addresses","length","map","render","propTypes","isRequired","func","MyAccountAddressBook"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,qBAAP;AACA,OAAOC,qBAAP;AACA,SAASC,YAAT;AAEA;AAEA;;;;AACA,8HAA0CH,aAA1C,EAAwD;AAAA;AAAA;;AAAA;AAAA;;AAAA,SAWpDI,aAXoD,GAWpC,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAChC,YAAM;AAAEC,QAAAA;AAAF,UAAwB,KAAI,CAACC,KAAnC;AACA,YAAMC,aAAa,GAAGH,KAAK,GAAG,CAA9B;AACA,YAAMI,OAAO,GAAGH,iBAAiB,CAACF,OAAD,CAAjC;AAEA,2CACK,qBADL;AAEM,QAAA,KAAK,EAAGM,EAAE,CAAC,eAAD,EAAkBF,aAAlB,EAAiCC,OAAjC,CAFhB;AAGM,QAAA,WAAW,MAHjB;AAIM,QAAA,OAAO,EAAGL,OAJhB;AAKM,QAAA,GAAG,EAAGI,aALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQH,KAxBmD;AAAA;;AAOpDG,EAAAA,WAAW,GAAG;AACV,yCAAQ,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AAiBDC,EAAAA,iBAAiB,GAAG;AAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEaF,EAAE,CAAC,mCAAD,CAFf;AAKH;;AAEDG,EAAAA,aAAa,GAAG;AACZ,UAAM;AAAEC,MAAAA;AAAF,QAAyB,KAAKP,KAApC;AAEA;AAEM,MAAA,KAAK,EAAC,sBAFZ;AAGM,MAAA,IAAI,EAAC,QAHX;AAIM,MAAA,GAAG,EAAG;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAJZ;AAKM,MAAA,OAAO,EAAGD,kBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOUJ,EAAE,CAAC,iBAAD,CAPZ;AAUH;;AAEDM,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,SAAS,GAAG;AAAd;AAAZ,QAAmC,KAAKX,KAA9C;;AACA,QAAI,CAACW,SAAS,CAACC,MAAf,EAAuB;AACnB,aAAO,KAAKP,iBAAL,EAAP;AACH;;AAED,WAAOM,SAAS,CAACE,GAAV,CAAc,KAAKjB,aAAnB,CAAP;AACH;;AAEDkB,EAAAA,MAAM,GAAG;AACL;AACS,MAAA,KAAK,EAAC,sBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEU,KAAKR,aAAL,EAFV,EAGU,KAAKG,iBAAL,EAHV,EAIU,KAAKL,WAAL,EAJV;AAOH;;AAlEmD,CAAxD,SACWW,SADX,GACuB;AACfL,EAAAA,QAAQ,EAAEf,YAAY,CAACqB,UADR;AAEfjB,EAAAA,iBAAiB,EAAER,SAAS,CAAC0B,IAAV,CAAeD,UAFnB;AAGfT,EAAAA,kBAAkB,EAAEhB,SAAS,CAAC0B,IAAV,CAAeD;AAHpB,CADvB;AAqEA,eAAeE,oBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport MyAccountAddressPopup from 'Component/MyAccountAddressPopup';\nimport MyAccountAddressTable from 'Component/MyAccountAddressTable';\nimport { customerType } from 'Type/Account';\n\nimport './MyAccountAddressBook.style';\n\n/** @namespace Component/MyAccountAddressBook/Component */\nexport class MyAccountAddressBook extends PureComponent {\n    static propTypes = {\n        customer: customerType.isRequired,\n        getDefaultPostfix: PropTypes.func.isRequired,\n        showCreateNewPopup: PropTypes.func.isRequired\n    };\n\n    renderPopup() {\n        return <MyAccountAddressPopup />;\n    }\n\n    renderAddress = (address, index) => {\n        const { getDefaultPostfix } = this.props;\n        const addressNumber = index + 1;\n        const postfix = getDefaultPostfix(address);\n\n        return (\n            <MyAccountAddressTable\n              title={ __('Address #%s%s', addressNumber, postfix) }\n              showActions\n              address={ address }\n              key={ addressNumber }\n            />\n        );\n    };\n\n    renderNoAddresses() {\n        return (\n            <div>\n                <p>{ __('You have no configured addresses.') }</p>\n            </div>\n        );\n    }\n\n    renderActions() {\n        const { showCreateNewPopup } = this.props;\n\n        return (\n            <button\n              block=\"MyAccountAddressBook\"\n              elem=\"Button\"\n              mix={ { block: 'Button' } }\n              onClick={ showCreateNewPopup }\n            >\n                { __('Add new address') }\n            </button>\n        );\n    }\n\n    renderAddressList() {\n        const { customer: { addresses = [] } } = this.props;\n        if (!addresses.length) {\n            return this.renderNoAddresses();\n        }\n\n        return addresses.map(this.renderAddress);\n    }\n\n    render() {\n        return (\n            <div block=\"MyAccountAddressBook\">\n                { this.renderActions() }\n                { this.renderAddressList() }\n                { this.renderPopup() }\n            </div>\n        );\n    }\n}\n\nexport default MyAccountAddressBook;\n"]},"metadata":{},"sourceType":"module"}