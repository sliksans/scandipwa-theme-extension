{"ast":null,"code":"import _asyncToGenerator from \"/home/arturs/scandiweb/extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport loadTranslation from \"./loadTranslation\";\nimport localeMap from \"./localeMap\";\n\nclass I18n {\n  constructor() {\n    var _this = this;\n\n    this.currentTranslation = {};\n\n    this.setLocale = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (locale) {\n        // Ignore same locale\n        if (locale === _this.currentLocale) {\n          return;\n        } // Set the new locale code\n\n\n        _this.currentLocale = locale; // Update the current translation map\n\n        _this.isLoading = true;\n        _this.currentTranslation = yield loadTranslation(locale);\n        _this.isLoading = false; // Rerender the app for changes to get applied\n\n        _this.rerenderApplication();\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    if (window.defaultLocale) {\n      this.setLocale(window.defaultLocale);\n    }\n  }\n\n  getLocaleList() {\n    return Object.keys(localeMap);\n  }\n\n  getCurrentLocale() {\n    return this.currentLocale;\n  }\n\n  /**\n   * This method should be called on app init\n   * @param {function} rerenderApplication\n   */\n  init(rerenderApplication) {\n    if (typeof rerenderApplication !== 'function') {\n      throw new Error(\"The root component's forceUpdate should be supplied to the i18n init sequence\");\n    }\n\n    this.rerenderApplication = rerenderApplication;\n  }\n\n}\n\nexport default new I18n();","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/webpack-i18n-runtime/src/util/i18n.js"],"names":["loadTranslation","localeMap","I18n","constructor","currentTranslation","setLocale","locale","currentLocale","isLoading","rerenderApplication","window","defaultLocale","getLocaleList","Object","keys","getCurrentLocale","init","Error"],"mappings":";AAAA,OAAOA,eAAP;AACA,OAAOC,SAAP;;AAEA,MAAMC,IAAN,CAAW;AACPC,EAAAA,WAAW,GAAG;AAAA;;AAAA,SAMdC,kBANc,GAMO,EANP;;AAAA,SAgBdC,SAhBc;AAAA,mCAgBF,WAAOC,MAAP,EAAkB;AAC1B;AACA,YAAIA,MAAM,KAAK,KAAI,CAACC,aAApB,EAAmC;AAC/B;AACH,SAJyB,CAM1B;;;AACA,QAAA,KAAI,CAACA,aAAL,GAAqBD,MAArB,CAP0B,CAS1B;;AACA,QAAA,KAAI,CAACE,SAAL,GAAiB,IAAjB;AACA,QAAA,KAAI,CAACJ,kBAAL,SAAgCJ,eAAe,CAACM,MAAD,CAA/C;AACA,QAAA,KAAI,CAACE,SAAL,GAAiB,KAAjB,CAZ0B,CAc1B;;AACA,QAAA,KAAI,CAACC,mBAAL;AACH,OAhCa;;AAAA;AAAA;AAAA;AAAA;;AACV,QAAIC,MAAM,CAACC,aAAX,EAA0B;AACtB,WAAKN,SAAL,CAAeK,MAAM,CAACC,aAAtB;AACH;AACJ;;AAIDC,EAAAA,aAAa,GAAG;AACZ,WAAOC,MAAM,CAACC,IAAP,CAAYb,SAAZ,CAAP;AACH;;AAEDc,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKR,aAAZ;AACH;;AAoBD;AACJ;AACA;AACA;AACIS,EAAAA,IAAI,CAACP,mBAAD,EAAsB;AACtB,QAAI,OAAOA,mBAAP,KAA+B,UAAnC,EAA+C;AAC3C,YAAM,IAAIQ,KAAJ,CAAU,+EAAV,CAAN;AACH;;AAED,SAAKR,mBAAL,GAA2BA,mBAA3B;AACH;;AA7CM;;AAgDX,eAAe,IAAIP,IAAJ,EAAf","sourcesContent":["import loadTranslation from './loadTranslation';\nimport localeMap from './localeMap';\n\nclass I18n {\n    constructor() {\n        if (window.defaultLocale) {\n            this.setLocale(window.defaultLocale);\n        }\n    }\n\n    currentTranslation = {};\n\n    getLocaleList() {\n        return Object.keys(localeMap);\n    }\n\n    getCurrentLocale() {\n        return this.currentLocale;\n    }\n\n    setLocale = async (locale) => {\n        // Ignore same locale\n        if (locale === this.currentLocale) {\n            return;\n        }\n\n        // Set the new locale code\n        this.currentLocale = locale;\n\n        // Update the current translation map\n        this.isLoading = true;\n        this.currentTranslation = await loadTranslation(locale);\n        this.isLoading = false;\n\n        // Rerender the app for changes to get applied\n        this.rerenderApplication();\n    };\n\n    /**\n     * This method should be called on app init\n     * @param {function} rerenderApplication\n     */\n    init(rerenderApplication) {\n        if (typeof rerenderApplication !== 'function') {\n            throw new Error(\"The root component's forceUpdate should be supplied to the i18n init sequence\");\n        }\n\n        this.rerenderApplication = rerenderApplication;\n    }\n}\n\nexport default new I18n();\n"]},"metadata":{},"sourceType":"module"}