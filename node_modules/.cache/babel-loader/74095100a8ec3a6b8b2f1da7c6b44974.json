{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/CategorySort/CategorySort.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport Field from \"/home/arturs/scandiweb/extension/src/component/Field\";\nimport TextPlaceholder from \"/home/arturs/scandiweb/extension/src/component/TextPlaceholder\";\nimport \"./CategorySort.style\";\n/**\n * Product Sort\n * @class ProductSort\n * #namespace Component/CategorySort/Component\n */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CategorySort = Mosaic.middleware((_temp = _class = class CategorySort_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.onChange = function (value) {\n      const {\n        onSortChange\n      } = _this.props;\n      const [direction, ...key] = value.split(' ');\n      onSortChange(direction, key);\n    };\n  }\n\n  renderPlaceholder() {\n    return /*#__PURE__*/_checkBEM(React, \"p\", {\n      block: \"CategorySort\",\n      elem: \"Placeholder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, TextPlaceholder, {\n      length: \"short\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderSortField() {\n    const {\n      sortKey,\n      sortDirection,\n      selectOptions,\n      isMatchingInfoFilter\n    } = this.props;\n\n    if (!isMatchingInfoFilter) {\n      return this.renderPlaceholder();\n    }\n\n    return /*#__PURE__*/_checkBEM(React, Field, {\n      id: \"category-sort\",\n      name: \"category-sort\",\n      type: \"select\",\n      label: __('SORT'),\n      mix: {\n        block: 'CategorySort',\n        elem: 'Select'\n      },\n      selectOptions: selectOptions,\n      value: `${sortDirection} ${sortKey}`,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"CategorySort\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, this.renderSortField());\n  }\n\n}, _class.propTypes = {\n  onSortChange: PropTypes.func.isRequired,\n  sortKey: PropTypes.string.isRequired,\n  sortDirection: PropTypes.string.isRequired,\n  selectOptions: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n  })).isRequired,\n  isMatchingInfoFilter: PropTypes.bool\n}, _class.defaultProps = {\n  isMatchingInfoFilter: false\n}, _temp), \"Component/CategorySort/Component\");\nexport default CategorySort;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/CategorySort/CategorySort.component.js"],"names":["PropTypes","PureComponent","Field","TextPlaceholder","onChange","value","onSortChange","props","direction","key","split","renderPlaceholder","renderSortField","sortKey","sortDirection","selectOptions","isMatchingInfoFilter","__","block","elem","render","propTypes","func","isRequired","string","arrayOf","shape","id","oneOfType","number","disabled","bool","label","defaultProps","CategorySort"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Field from 'Component/Field';\nimport TextPlaceholder from 'Component/TextPlaceholder';\n\nimport './CategorySort.style';\n\n/**\n * Product Sort\n * @class ProductSort\n * @namespace Component/CategorySort/Component\n */\nexport class CategorySort extends PureComponent {\n    static propTypes = {\n        onSortChange: PropTypes.func.isRequired,\n        sortKey: PropTypes.string.isRequired,\n        sortDirection: PropTypes.string.isRequired,\n        selectOptions: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.number\n            ]),\n            value: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.number\n            ]),\n            disabled: PropTypes.bool,\n            label: PropTypes.string\n        })).isRequired,\n        isMatchingInfoFilter: PropTypes.bool\n    };\n\n    static defaultProps = {\n        isMatchingInfoFilter: false\n    };\n\n    onChange = (value) => {\n        const { onSortChange } = this.props;\n        const [direction, ...key] = value.split(' ');\n\n        onSortChange(direction, key);\n    };\n\n    renderPlaceholder() {\n        return (\n            <p block=\"CategorySort\" elem=\"Placeholder\">\n                <TextPlaceholder length=\"short\" />\n            </p>\n        );\n    }\n\n    renderSortField() {\n        const {\n            sortKey,\n            sortDirection,\n            selectOptions,\n            isMatchingInfoFilter\n        } = this.props;\n\n        if (!isMatchingInfoFilter) {\n            return this.renderPlaceholder();\n        }\n\n        return (\n            <Field\n              id=\"category-sort\"\n              name=\"category-sort\"\n              type=\"select\"\n              label={ __('SORT') }\n              mix={ { block: 'CategorySort', elem: 'Select' } }\n              selectOptions={ selectOptions }\n              value={ `${sortDirection} ${sortKey}` }\n              onChange={ this.onChange }\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div block=\"CategorySort\">\n                { this.renderSortField() }\n            </div>\n        );\n    }\n}\n\nexport default CategorySort;\n"]},"metadata":{},"sourceType":"module"}