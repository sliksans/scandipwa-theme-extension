{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/MyAccountCustomerTable/MyAccountCustomerTable.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport KeyValueTable from \"/home/arturs/scandiweb/extension/src/component/KeyValueTable\";\nimport { customerType } from \"/home/arturs/scandiweb/extension/src/type/Account\";\n/** #namespace Component/MyAccountCustomerTable/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountCustomerTable = Mosaic.middleware((_temp = _class = class MyAccountCustomerTable_ extends Mosaic.Extensible(KeyValueTable) {\n  get dataPairArray() {\n    const {\n      customer\n    } = this.props;\n    return [{\n      key: 'firstname',\n      label: __('First name'),\n      source: customer\n    }, {\n      key: 'lastname',\n      label: __('Last name'),\n      source: customer\n    }, {\n      key: 'email',\n      label: __('Email'),\n      source: customer\n    }];\n  }\n\n  renderActions() {\n    const {\n      showChangePasswordPopup,\n      showEditPopup\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, /*#__PURE__*/_checkBEM(React, \"button\", {\n      block: \"Button\",\n      onClick: showEditPopup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, __('Edit details')), /*#__PURE__*/_checkBEM(React, \"button\", {\n      block: \"Button\",\n      mods: {\n        isHollow: true\n      },\n      onClick: showChangePasswordPopup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, __('Change password')));\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"MyAccountCustomerTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, this.renderTable(), this.renderActions());\n  }\n\n}, _class.propTypes = {\n  customer: customerType.isRequired,\n  showEditPopup: PropTypes.func.isRequired,\n  showChangePasswordPopup: PropTypes.func.isRequired\n}, _temp), \"Component/MyAccountCustomerTable/Component\");\nexport default MyAccountCustomerTable;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/MyAccountCustomerTable/MyAccountCustomerTable.component.js"],"names":["PropTypes","KeyValueTable","customerType","dataPairArray","customer","props","key","label","__","source","renderActions","showChangePasswordPopup","showEditPopup","isHollow","render","renderTable","propTypes","isRequired","func","MyAccountCustomerTable"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAOC,aAAP;AACA,SAASC,YAAT;AAEA;;;;AACA,kIAA4CD,aAA5C,EAA0D;AAOrC,MAAbE,aAAa,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AAEA,WAAO,CACH;AACIC,MAAAA,GAAG,EAAE,WADT;AAEIC,MAAAA,KAAK,EAAEC,EAAE,CAAC,YAAD,CAFb;AAGIC,MAAAA,MAAM,EAAEL;AAHZ,KADG,EAMH;AACIE,MAAAA,GAAG,EAAE,UADT;AAEIC,MAAAA,KAAK,EAAEC,EAAE,CAAC,WAAD,CAFb;AAGIC,MAAAA,MAAM,EAAEL;AAHZ,KANG,EAWH;AACIE,MAAAA,GAAG,EAAE,OADT;AAEIC,MAAAA,KAAK,EAAEC,EAAE,CAAC,OAAD,CAFb;AAGIC,MAAAA,MAAM,EAAEL;AAHZ,KAXG,CAAP;AAiBH;;AAEDM,EAAAA,aAAa,GAAG;AACZ,UAAM;AAAEC,MAAAA,uBAAF;AAA2BC,MAAAA;AAA3B,QAA6C,KAAKP,KAAxD;AAEA;AAGU,MAAA,KAAK,EAAC,QAHhB;AAIU,MAAA,OAAO,EAAGO,aAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMcJ,EAAE,CAAC,cAAD,CANhB;AASU,MAAA,KAAK,EAAC,QAThB;AAUU,MAAA,IAAI,EAAG;AAAEK,QAAAA,QAAQ,EAAE;AAAZ,OAVjB;AAWU,MAAA,OAAO,EAAGF,uBAXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAacH,EAAE,CAAC,iBAAD,CAbhB;AAiBH;;AAEDM,EAAAA,MAAM,GAAG;AACL;AACS,MAAA,KAAK,EAAC,wBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEU,KAAKC,WAAL,EAFV,EAGU,KAAKL,aAAL,EAHV;AAMH;;AA1DqD,CAA1D,SACWM,SADX,GACuB;AACfZ,EAAAA,QAAQ,EAAEF,YAAY,CAACe,UADR;AAEfL,EAAAA,aAAa,EAAEZ,SAAS,CAACkB,IAAV,CAAeD,UAFf;AAGfN,EAAAA,uBAAuB,EAAEX,SAAS,CAACkB,IAAV,CAAeD;AAHzB,CADvB;AA6DA,eAAeE,sBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport KeyValueTable from 'Component/KeyValueTable';\nimport { customerType } from 'Type/Account';\n\n/** @namespace Component/MyAccountCustomerTable/Component */\nexport class MyAccountCustomerTable extends KeyValueTable {\n    static propTypes = {\n        customer: customerType.isRequired,\n        showEditPopup: PropTypes.func.isRequired,\n        showChangePasswordPopup: PropTypes.func.isRequired\n    };\n\n    get dataPairArray() {\n        const { customer } = this.props;\n\n        return [\n            {\n                key: 'firstname',\n                label: __('First name'),\n                source: customer\n            },\n            {\n                key: 'lastname',\n                label: __('Last name'),\n                source: customer\n            },\n            {\n                key: 'email',\n                label: __('Email'),\n                source: customer\n            }\n        ];\n    }\n\n    renderActions() {\n        const { showChangePasswordPopup, showEditPopup } = this.props;\n\n        return (\n            <>\n                <button\n                  block=\"Button\"\n                  onClick={ showEditPopup }\n                >\n                    { __('Edit details') }\n                </button>\n                <button\n                  block=\"Button\"\n                  mods={ { isHollow: true } }\n                  onClick={ showChangePasswordPopup }\n                >\n                    { __('Change password') }\n                </button>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <div block=\"MyAccountCustomerTable\">\n                { this.renderTable() }\n                { this.renderActions() }\n            </div>\n        );\n    }\n}\n\nexport default MyAccountCustomerTable;\n"]},"metadata":{},"sourceType":"module"}