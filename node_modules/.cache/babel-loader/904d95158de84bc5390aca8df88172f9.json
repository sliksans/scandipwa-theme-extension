{"ast":null,"code":"import _asyncToGenerator from \"/home/arturs/scandiweb/extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/Router/Router.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { updateConfigDevice } from \"/home/arturs/scandiweb/extension/src/store/Config/Config.action\";\nimport { updateMeta } from \"/home/arturs/scandiweb/extension/src/store/Meta/Meta.action\";\nimport { isMobile, isMobileClientHints, isUsingClientHints } from \"/home/arturs/scandiweb/extension/src/util/Mobile\";\nimport Router from \"./Router.component\";\nexport const CartDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/extension/src/store/Cart/Cart.dispatcher\");\nexport const ConfigDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/extension/src/store/Config/Config.dispatcher\");\nexport const WishlistDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/extension/src/store/Wishlist/Wishlist.dispatcher\");\nexport const ProductCompareDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/extension/src/store/ProductCompare/ProductCompare.dispatcher\");\nexport const MyAccountDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/extension/src/store/MyAccount/MyAccount.dispatcher\");\n/** #namespace Component/Router/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    isLoading: state.ConfigReducer.isLoading,\n    default_description: state.ConfigReducer.default_description,\n    default_keywords: state.ConfigReducer.default_keywords,\n    default_title: state.ConfigReducer.default_title,\n    title_prefix: state.ConfigReducer.title_prefix,\n    title_suffix: state.ConfigReducer.title_suffix,\n    meta_title: state.MetaReducer.title,\n    device: state.ConfigReducer.device,\n    isOffline: state.OfflineReducer.isOffline,\n    isBigOffline: state.OfflineReducer.isBig,\n    status_code: state.MetaReducer.status_code\n  };\n}, \"Component/Router/Container/mapStateToProps\");\n/** #namespace Component/Router/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    updateMeta: function (meta) {\n      return dispatch(updateMeta(meta));\n    },\n    updateConfigDevice: function (device) {\n      return dispatch(updateConfigDevice(device));\n    },\n    init: function () {\n      ConfigDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.handleData(dispatch);\n      });\n      MyAccountDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.handleCustomerDataOnInit(dispatch);\n      });\n      WishlistDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.updateInitialWishlistData(dispatch);\n      });\n      CartDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.updateInitialCartData(dispatch);\n      });\n      ProductCompareDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.updateInitialProductCompareData(dispatch);\n      });\n    }\n  };\n}, \"Component/Router/Container/mapDispatchToProps\");\n/** #namespace Component/Router/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const RouterContainer = Mosaic.middleware((_temp = _class = class RouterContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.handleResize = /*#__PURE__*/_asyncToGenerator(function* () {\n      const {\n        updateConfigDevice\n      } = _this.props;\n\n      if (isUsingClientHints) {\n        const {\n          platform,\n          model\n        } = yield isMobileClientHints.getDeviceData();\n        updateConfigDevice({\n          isMobile: isMobile.any(),\n          android: isMobile.android(platform),\n          ios: isMobile.iOS(platform),\n          blackberry: isMobile.blackBerry(model),\n          opera: isMobile.opera(model),\n          safari: isMobile.safari(model),\n          windows: isMobile.windows(model)\n        });\n      } else {\n        updateConfigDevice({\n          isMobile: isMobile.any(),\n          android: isMobile.android(),\n          ios: isMobile.iOS(),\n          blackberry: isMobile.blackBerry(),\n          opera: isMobile.opera(),\n          safari: isMobile.safari(),\n          windows: isMobile.windows()\n        });\n      }\n    });\n\n    this.containerProps = function () {\n      const {\n        isBigOffline\n      } = _this.props;\n      return {\n        isBigOffline\n      };\n    };\n  }\n\n  __construct(props) {\n    super.__construct(props);\n\n    this.state = {\n      currentUrl: window.location.pathname\n    };\n    this.initializeApplication();\n    this.redirectFromPartialUrl();\n    this.handleResize();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      isLoading,\n      updateMeta\n    } = this.props;\n    const {\n      isLoading: prevIsLoading\n    } = prevProps;\n\n    if (!isLoading && isLoading !== prevIsLoading) {\n      const {\n        default_description,\n        default_keywords,\n        default_title,\n        title_prefix,\n        title_suffix,\n        meta_title,\n        status_code\n      } = this.props;\n      updateMeta({\n        default_title,\n        title: meta_title || default_title,\n        default_description,\n        description: default_description,\n        default_keywords,\n        keywords: default_keywords,\n        title_prefix,\n        title_suffix,\n        status_code\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  initializeApplication() {\n    const {\n      init\n    } = this.props;\n    init();\n  }\n\n  redirectFromPartialUrl() {\n    const {\n      base_link_url\n    } = this.props;\n    const {\n      pathname: storePrefix\n    } = new URL(base_link_url || window.location.origin);\n    const {\n      pathname\n    } = location;\n\n    if (storePrefix === '/') {\n      return;\n    }\n\n    if (storePrefix.slice(0, -1) === pathname) {\n      history.replace(storePrefix);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, Router, Object.assign({}, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  init: PropTypes.func.isRequired,\n  updateMeta: PropTypes.func.isRequired,\n  updateConfigDevice: PropTypes.func.isRequired,\n  base_link_url: PropTypes.string,\n  default_description: PropTypes.string,\n  default_keywords: PropTypes.string,\n  default_title: PropTypes.string,\n  title_prefix: PropTypes.string,\n  title_suffix: PropTypes.string,\n  isLoading: PropTypes.bool,\n  isBigOffline: PropTypes.bool,\n  meta_title: PropTypes.string,\n  status_code: PropTypes.string\n}, _class.defaultProps = {\n  base_link_url: '',\n  default_description: '',\n  default_keywords: '',\n  default_title: '',\n  title_prefix: '',\n  title_suffix: '',\n  isLoading: true,\n  isBigOffline: false,\n  meta_title: '',\n  status_code: ''\n}, _temp), \"Component/Router/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(RouterContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/Router/Router.container.js"],"names":["PropTypes","PureComponent","connect","updateConfigDevice","updateMeta","isMobile","isMobileClientHints","isUsingClientHints","Router","CartDispatcher","ConfigDispatcher","WishlistDispatcher","ProductCompareDispatcher","MyAccountDispatcher","mapStateToProps","state","isLoading","ConfigReducer","default_description","default_keywords","default_title","title_prefix","title_suffix","meta_title","MetaReducer","title","device","isOffline","OfflineReducer","isBigOffline","isBig","status_code","mapDispatchToProps","dispatch","meta","init","then","default","dispatcher","handleData","handleCustomerDataOnInit","updateInitialWishlistData","updateInitialCartData","updateInitialProductCompareData","handleResize","props","platform","model","getDeviceData","any","android","ios","iOS","blackberry","blackBerry","opera","safari","windows","containerProps","__construct","currentUrl","window","location","pathname","initializeApplication","redirectFromPartialUrl","componentDidMount","addEventListener","componentDidUpdate","prevProps","prevIsLoading","description","keywords","componentWillUnmount","removeEventListener","base_link_url","storePrefix","URL","origin","slice","history","replace","render","propTypes","func","isRequired","string","bool","defaultProps","RouterContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { updateConfigDevice } from 'Store/Config/Config.action';\nimport { updateMeta } from 'Store/Meta/Meta.action';\nimport {\n    isMobile,\n    isMobileClientHints,\n    isUsingClientHints\n} from 'Util/Mobile';\n\nimport Router from './Router.component';\n\nexport const CartDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Cart/Cart.dispatcher'\n);\nexport const ConfigDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Config/Config.dispatcher'\n);\nexport const WishlistDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Wishlist/Wishlist.dispatcher'\n);\nexport const ProductCompareDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/ProductCompare/ProductCompare.dispatcher'\n);\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Component/Router/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    isLoading: state.ConfigReducer.isLoading,\n    default_description: state.ConfigReducer.default_description,\n    default_keywords: state.ConfigReducer.default_keywords,\n    default_title: state.ConfigReducer.default_title,\n    title_prefix: state.ConfigReducer.title_prefix,\n    title_suffix: state.ConfigReducer.title_suffix,\n    meta_title: state.MetaReducer.title,\n    device: state.ConfigReducer.device,\n    isOffline: state.OfflineReducer.isOffline,\n    isBigOffline: state.OfflineReducer.isBig,\n    status_code: state.MetaReducer.status_code\n});\n\n/** @namespace Component/Router/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    updateMeta: (meta) => dispatch(updateMeta(meta)),\n    updateConfigDevice: (device) => dispatch(updateConfigDevice(device)),\n    init: () => {\n        ConfigDispatcher.then(\n            ({ default: dispatcher }) => dispatcher.handleData(dispatch)\n        );\n        MyAccountDispatcher.then(\n            ({ default: dispatcher }) => dispatcher.handleCustomerDataOnInit(dispatch)\n        );\n        WishlistDispatcher.then(\n            ({ default: dispatcher }) => dispatcher.updateInitialWishlistData(dispatch)\n        );\n        CartDispatcher.then(\n            ({ default: dispatcher }) => dispatcher.updateInitialCartData(dispatch)\n        );\n        ProductCompareDispatcher.then(\n            ({ default: dispatcher }) => dispatcher.updateInitialProductCompareData(dispatch)\n        );\n    }\n});\n\n/** @namespace Component/Router/Container */\nexport class RouterContainer extends PureComponent {\n    static propTypes = {\n        init: PropTypes.func.isRequired,\n        updateMeta: PropTypes.func.isRequired,\n        updateConfigDevice: PropTypes.func.isRequired,\n        base_link_url: PropTypes.string,\n        default_description: PropTypes.string,\n        default_keywords: PropTypes.string,\n        default_title: PropTypes.string,\n        title_prefix: PropTypes.string,\n        title_suffix: PropTypes.string,\n        isLoading: PropTypes.bool,\n        isBigOffline: PropTypes.bool,\n        meta_title: PropTypes.string,\n        status_code: PropTypes.string\n    };\n\n    static defaultProps = {\n        base_link_url: '',\n        default_description: '',\n        default_keywords: '',\n        default_title: '',\n        title_prefix: '',\n        title_suffix: '',\n        isLoading: true,\n        isBigOffline: false,\n        meta_title: '',\n        status_code: ''\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        this.state = ({\n            currentUrl: window.location.pathname\n        });\n\n        this.initializeApplication();\n        this.redirectFromPartialUrl();\n        this.handleResize();\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isLoading, updateMeta } = this.props;\n        const { isLoading: prevIsLoading } = prevProps;\n\n        if (!isLoading && isLoading !== prevIsLoading) {\n            const {\n                default_description,\n                default_keywords,\n                default_title,\n                title_prefix,\n                title_suffix,\n                meta_title,\n                status_code\n            } = this.props;\n\n            updateMeta({\n                default_title,\n                title: meta_title || default_title,\n                default_description,\n                description: default_description,\n                default_keywords,\n                keywords: default_keywords,\n                title_prefix,\n                title_suffix,\n                status_code\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    handleResize = async () => {\n        const { updateConfigDevice } = this.props;\n        if (isUsingClientHints) {\n            const { platform, model } = await isMobileClientHints.getDeviceData();\n            updateConfigDevice({\n                isMobile: isMobile.any(),\n                android: isMobile.android(platform),\n                ios: isMobile.iOS(platform),\n                blackberry: isMobile.blackBerry(model),\n                opera: isMobile.opera(model),\n                safari: isMobile.safari(model),\n                windows: isMobile.windows(model)\n            });\n        } else {\n            updateConfigDevice({\n                isMobile: isMobile.any(),\n                android: isMobile.android(),\n                ios: isMobile.iOS(),\n                blackberry: isMobile.blackBerry(),\n                opera: isMobile.opera(),\n                safari: isMobile.safari(),\n                windows: isMobile.windows()\n            });\n        }\n    };\n\n    containerProps = () => {\n        const { isBigOffline } = this.props;\n\n        return { isBigOffline };\n    };\n\n    initializeApplication() {\n        const { init } = this.props;\n        init();\n    }\n\n    redirectFromPartialUrl() {\n        const { base_link_url } = this.props;\n        const { pathname: storePrefix } = new URL(base_link_url || window.location.origin);\n        const { pathname } = location;\n\n        if (storePrefix === '/') {\n            return;\n        }\n\n        if (storePrefix.slice(0, -1) === pathname) {\n            history.replace(storePrefix);\n        }\n    }\n\n    render() {\n        return (\n            <Router\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RouterContainer);\n"]},"metadata":{},"sourceType":"module"}