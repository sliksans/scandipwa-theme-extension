{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/route/MyAccount/MyAccount.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport ContentWrapper from \"/home/arturs/scandiweb/extension/src/component/ContentWrapper\";\nimport MyAccountAddressBook from \"/home/arturs/scandiweb/extension/src/component/MyAccountAddressBook\";\nimport MyAccountDashboard from \"/home/arturs/scandiweb/extension/src/component/MyAccountDashboard\";\nimport MyAccountDownloadable from \"/home/arturs/scandiweb/extension/src/component/MyAccountDownloadable\";\nimport MyAccountMyOrders from \"/home/arturs/scandiweb/extension/src/component/MyAccountMyOrders\";\nimport MyAccountMyWishlist from \"/home/arturs/scandiweb/extension/src/component/MyAccountMyWishlist\";\nimport MyAccountNewsletterSubscription from \"/home/arturs/scandiweb/extension/src/component/MyAccountNewsletterSubscription\";\nimport MyAccountOverlay from \"/home/arturs/scandiweb/extension/src/component/MyAccountOverlay\";\nimport MyAccountTabList from \"/home/arturs/scandiweb/extension/src/component/MyAccountTabList\";\nimport { activeTabType, ADDRESS_BOOK, DASHBOARD, MY_DOWNLOADABLE, MY_ORDERS, MY_WISHLIST, NEWSLETTER_SUBSCRIPTION, tabMapType } from \"/home/arturs/scandiweb/extension/src/type/Account\";\nimport { isSignedIn } from \"/home/arturs/scandiweb/extension/src/util/Auth\";\nimport \"./MyAccount.style\";\n/** #namespace Route/MyAccount/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccount = Mosaic.middleware((_temp = _class = class MyAccount_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.renderMap = {\n      [DASHBOARD]: MyAccountDashboard,\n      [MY_ORDERS]: MyAccountMyOrders,\n      [MY_WISHLIST]: MyAccountMyWishlist,\n      [ADDRESS_BOOK]: MyAccountAddressBook,\n      [NEWSLETTER_SUBSCRIPTION]: MyAccountNewsletterSubscription,\n      [MY_DOWNLOADABLE]: MyAccountDownloadable\n    };\n  }\n\n  renderLoginOverlay() {\n    const {\n      onSignIn\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountOverlay, {\n      onSignIn: onSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderContent() {\n    const {\n      activeTab,\n      tabMap,\n      changeActiveTab,\n      onSignOut,\n      isEditingActive\n    } = this.props;\n\n    if (!isSignedIn()) {\n      return this.renderLoginOverlay();\n    }\n\n    const TabContent = this.renderMap[activeTab];\n    const {\n      name\n    } = tabMap[activeTab];\n    return /*#__PURE__*/_checkBEM(React, ContentWrapper, {\n      label: __('My Account page'),\n      wrapperMix: {\n        block: 'MyAccount',\n        elem: 'Wrapper'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, MyAccountTabList, {\n      tabMap: tabMap,\n      activeTab: activeTab,\n      changeActiveTab: changeActiveTab,\n      onSignOut: onSignOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"MyAccount\",\n      elem: \"TabContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"h2\", {\n      block: \"MyAccount\",\n      elem: \"Heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/_checkBEM(React, TabContent, {\n      isEditingActive: isEditingActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, \"main\", {\n      block: \"MyAccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, this.renderContent());\n  }\n\n}, _class.propTypes = {\n  activeTab: activeTabType.isRequired,\n  tabMap: tabMapType.isRequired,\n  changeActiveTab: PropTypes.func.isRequired,\n  onSignIn: PropTypes.func.isRequired,\n  onSignOut: PropTypes.func.isRequired,\n  isEditingActive: PropTypes.bool.isRequired\n}, _temp), \"Route/MyAccount/Component\");\nexport default MyAccount;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/route/MyAccount/MyAccount.component.js"],"names":["PropTypes","PureComponent","ContentWrapper","MyAccountAddressBook","MyAccountDashboard","MyAccountDownloadable","MyAccountMyOrders","MyAccountMyWishlist","MyAccountNewsletterSubscription","MyAccountOverlay","MyAccountTabList","activeTabType","ADDRESS_BOOK","DASHBOARD","MY_DOWNLOADABLE","MY_ORDERS","MY_WISHLIST","NEWSLETTER_SUBSCRIPTION","tabMapType","isSignedIn","renderMap","renderLoginOverlay","onSignIn","props","renderContent","activeTab","tabMap","changeActiveTab","onSignOut","isEditingActive","TabContent","name","__","block","elem","render","propTypes","isRequired","func","bool","MyAccount"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport ContentWrapper from 'Component/ContentWrapper';\nimport MyAccountAddressBook from 'Component/MyAccountAddressBook';\nimport MyAccountDashboard from 'Component/MyAccountDashboard';\nimport MyAccountDownloadable from 'Component/MyAccountDownloadable';\nimport MyAccountMyOrders from 'Component/MyAccountMyOrders';\nimport MyAccountMyWishlist from 'Component/MyAccountMyWishlist';\nimport MyAccountNewsletterSubscription from 'Component/MyAccountNewsletterSubscription';\nimport MyAccountOverlay from 'Component/MyAccountOverlay';\nimport MyAccountTabList from 'Component/MyAccountTabList';\nimport {\n    activeTabType,\n    ADDRESS_BOOK,\n    DASHBOARD,\n    MY_DOWNLOADABLE,\n    MY_ORDERS,\n    MY_WISHLIST,\n    NEWSLETTER_SUBSCRIPTION,\n    tabMapType\n} from 'Type/Account';\nimport { isSignedIn } from 'Util/Auth';\n\nimport './MyAccount.style';\n\n/** @namespace Route/MyAccount/Component */\nexport class MyAccount extends PureComponent {\n    static propTypes = {\n        activeTab: activeTabType.isRequired,\n        tabMap: tabMapType.isRequired,\n        changeActiveTab: PropTypes.func.isRequired,\n        onSignIn: PropTypes.func.isRequired,\n        onSignOut: PropTypes.func.isRequired,\n        isEditingActive: PropTypes.bool.isRequired\n    };\n\n    renderMap = {\n        [DASHBOARD]: MyAccountDashboard,\n        [MY_ORDERS]: MyAccountMyOrders,\n        [MY_WISHLIST]: MyAccountMyWishlist,\n        [ADDRESS_BOOK]: MyAccountAddressBook,\n        [NEWSLETTER_SUBSCRIPTION]: MyAccountNewsletterSubscription,\n        [MY_DOWNLOADABLE]: MyAccountDownloadable\n    };\n\n    renderLoginOverlay() {\n        const { onSignIn } = this.props;\n\n        return (\n            <MyAccountOverlay\n              onSignIn={ onSignIn }\n            />\n        );\n    }\n\n    renderContent() {\n        const {\n            activeTab,\n            tabMap,\n            changeActiveTab,\n            onSignOut,\n            isEditingActive\n        } = this.props;\n\n        if (!isSignedIn()) {\n            return this.renderLoginOverlay();\n        }\n\n        const TabContent = this.renderMap[activeTab];\n        const { name } = tabMap[activeTab];\n\n        return (\n            <ContentWrapper\n              label={ __('My Account page') }\n              wrapperMix={ { block: 'MyAccount', elem: 'Wrapper' } }\n            >\n                <MyAccountTabList\n                  tabMap={ tabMap }\n                  activeTab={ activeTab }\n                  changeActiveTab={ changeActiveTab }\n                  onSignOut={ onSignOut }\n                />\n                <div block=\"MyAccount\" elem=\"TabContent\">\n                    <h2 block=\"MyAccount\" elem=\"Heading\">{ name }</h2>\n                    <TabContent isEditingActive={ isEditingActive } />\n                </div>\n            </ContentWrapper>\n        );\n    }\n\n    render() {\n        return (\n            <main block=\"MyAccount\">\n                { this.renderContent() }\n            </main>\n        );\n    }\n}\n\nexport default MyAccount;\n"]},"metadata":{},"sourceType":"module"}