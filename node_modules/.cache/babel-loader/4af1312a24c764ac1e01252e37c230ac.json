{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CategoryFilterOverlay/CategoryFilterOverlay.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport CategoryConfigurableAttributes from \"/home/arturs/scandiweb/scandipwa/src/component/CategoryConfigurableAttributes\";\nimport Loader from \"/home/arturs/scandiweb/scandipwa/src/component/Loader\";\nimport Overlay from \"/home/arturs/scandiweb/scandipwa/src/component/Overlay\";\nimport ResetButton from \"/home/arturs/scandiweb/scandipwa/src/component/ResetButton\";\nimport { CATEGORY_FILTER_OVERLAY_ID } from \"./CategoryFilterOverlay.config\";\nimport \"./CategoryFilterOverlay.style\";\n/** #namespace Component/CategoryFilterOverlay/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CategoryFilterOverlay = Mosaic.middleware((_temp = _class = class CategoryFilterOverlay_ extends Mosaic.Extensible(PureComponent) {\n  renderFilters() {\n    const {\n      availableFilters,\n      customFiltersValues,\n      toggleCustomFilter,\n      isMatchingInfoFilter,\n      getFilterUrl\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, CategoryConfigurableAttributes, {\n      mix: {\n        block: 'CategoryFilterOverlay',\n        elem: 'Attributes'\n      },\n      isReady: isMatchingInfoFilter,\n      configurable_options: availableFilters,\n      getLink: getFilterUrl,\n      parameters: customFiltersValues,\n      updateConfigurableVariant: toggleCustomFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderSeeResults() {\n    const {\n      onSeeResultsClick\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"CategoryFilterOverlay\",\n      elem: \"SeeResults\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"button\", {\n      block: \"CategoryFilterOverlay\",\n      elem: \"Button\",\n      mix: {\n        block: 'Button'\n      },\n      onClick: onSeeResultsClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, __('SEE RESULTS')));\n  }\n\n  renderResetButton() {\n    const {\n      onSeeResultsClick\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, ResetButton, {\n      onClick: onSeeResultsClick,\n      mix: {\n        block: 'CategoryFilterOverlay',\n        elem: 'ResetButton'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderHeading() {\n    return /*#__PURE__*/_checkBEM(React, \"h3\", {\n      block: \"CategoryFilterOverlay\",\n      elem: \"Heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, __('Shopping Options'));\n  }\n\n  renderNoResults() {\n    return /*#__PURE__*/_checkBEM(React, \"p\", {\n      block: \"CategoryFilterOverlay\",\n      elem: \"NoResults\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, __(`The selected filter combination returned no results.\n                Please try again, using a different set of filters.`));\n  }\n\n  renderEmptyFilters() {\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, this.renderNoResults(), this.renderResetButton(), this.renderSeeResults());\n  }\n\n  renderMinimalFilters() {\n    return this.renderSeeResults();\n  }\n\n  renderDefaultFilters() {\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, this.renderHeading(), this.renderResetButton(), this.renderFilters(), this.renderSeeResults());\n  }\n\n  renderContent() {\n    const {\n      totalPages,\n      areFiltersEmpty,\n      isProductsLoading\n    } = this.props;\n\n    if (!isProductsLoading && totalPages === 0) {\n      return this.renderEmptyFilters();\n    }\n\n    if (areFiltersEmpty) {\n      return this.renderMinimalFilters();\n    }\n\n    return this.renderDefaultFilters();\n  }\n\n  renderLoader() {\n    const {\n      isInfoLoading,\n      availableFilters\n    } = this.props;\n    const isLoaded = availableFilters && !!Object.keys(availableFilters).length;\n\n    if (!isLoaded) {\n      // hide loader if filters were not yet loaded (even once!)\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, Loader, {\n      isLoading: isInfoLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    const {\n      onVisible,\n      onHide,\n      totalPages,\n      isProductsLoading,\n      isContentFiltered,\n      isCategoryAnchor\n    } = this.props;\n\n    if (!isProductsLoading && totalPages === 0 && !isContentFiltered || !isCategoryAnchor) {\n      return /*#__PURE__*/_checkBEM(React, \"div\", {\n        block: \"CategoryFilterOverlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/_checkBEM(React, Overlay, {\n      onVisible: onVisible,\n      onHide: onHide,\n      mix: {\n        block: 'CategoryFilterOverlay'\n      },\n      id: CATEGORY_FILTER_OVERLAY_ID,\n      isRenderInPortal: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, this.renderContent(), this.renderLoader()));\n  }\n\n}, _class.propTypes = {\n  availableFilters: PropTypes.objectOf(PropTypes.shape).isRequired,\n  areFiltersEmpty: PropTypes.bool.isRequired,\n  isContentFiltered: PropTypes.bool.isRequired,\n  isMatchingInfoFilter: PropTypes.bool,\n  isInfoLoading: PropTypes.bool.isRequired,\n  isProductsLoading: PropTypes.bool.isRequired,\n  onSeeResultsClick: PropTypes.func.isRequired,\n  onVisible: PropTypes.func.isRequired,\n  onHide: PropTypes.func.isRequired,\n  customFiltersValues: PropTypes.objectOf(PropTypes.array).isRequired,\n  toggleCustomFilter: PropTypes.func.isRequired,\n  getFilterUrl: PropTypes.func.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  isCategoryAnchor: PropTypes.bool\n}, _class.defaultProps = {\n  isCategoryAnchor: true,\n  isMatchingInfoFilter: false\n}, _temp), \"Component/CategoryFilterOverlay/Component\");\nexport default CategoryFilterOverlay;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CategoryFilterOverlay/CategoryFilterOverlay.component.js"],"names":["PropTypes","PureComponent","CategoryConfigurableAttributes","Loader","Overlay","ResetButton","CATEGORY_FILTER_OVERLAY_ID","renderFilters","availableFilters","customFiltersValues","toggleCustomFilter","isMatchingInfoFilter","getFilterUrl","props","block","elem","renderSeeResults","onSeeResultsClick","__","renderResetButton","renderHeading","renderNoResults","renderEmptyFilters","renderMinimalFilters","renderDefaultFilters","renderContent","totalPages","areFiltersEmpty","isProductsLoading","renderLoader","isInfoLoading","isLoaded","Object","keys","length","render","onVisible","onHide","isContentFiltered","isCategoryAnchor","propTypes","objectOf","shape","isRequired","bool","func","array","number","defaultProps","CategoryFilterOverlay"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,8BAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,WAAP;AAEA,SAASC,0BAAT;AAEA;AAEA;;;;AACA,gIAA2CL,aAA3C,EAAyD;AAuBrDM,EAAAA,aAAa,GAAG;AACZ,UAAM;AACFC,MAAAA,gBADE;AAEFC,MAAAA,mBAFE;AAGFC,MAAAA,kBAHE;AAIFC,MAAAA,oBAJE;AAKFC,MAAAA;AALE,QAMF,KAAKC,KANT;AAQA,yCACK,8BADL;AAEM,MAAA,GAAG,EAAG;AAAEC,QAAAA,KAAK,EAAE,uBAAT;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OAFZ;AAGM,MAAA,OAAO,EAAGJ,oBAHhB;AAIM,MAAA,oBAAoB,EAAGH,gBAJ7B;AAKM,MAAA,OAAO,EAAGI,YALhB;AAMM,MAAA,UAAU,EAAGH,mBANnB;AAOM,MAAA,yBAAyB,EAAGC,kBAPlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUH;;AAEDM,EAAAA,gBAAgB,GAAG;AACf,UAAM;AAAEC,MAAAA;AAAF,QAAwB,KAAKJ,KAAnC;AAEA;AAEM,MAAA,KAAK,EAAC,uBAFZ;AAGM,MAAA,IAAI,EAAC,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMU,MAAA,KAAK,EAAC,uBANhB;AAOU,MAAA,IAAI,EAAC,QAPf;AAQU,MAAA,GAAG,EAAG;AAAEC,QAAAA,KAAK,EAAE;AAAT,OARhB;AASU,MAAA,OAAO,EAAGG,iBATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWcC,EAAE,CAAC,aAAD,CAXhB;AAeH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEF,MAAAA;AAAF,QAAwB,KAAKJ,KAAnC;AAEA,yCACK,WADL;AAEM,MAAA,OAAO,EAAGI,iBAFhB;AAGM,MAAA,GAAG,EAAG;AAAEH,QAAAA,KAAK,EAAE,uBAAT;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;;AAEDK,EAAAA,aAAa,GAAG;AACZ;AACQ,MAAA,KAAK,EAAC,uBADd;AACsC,MAAA,IAAI,EAAC,SAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEUF,EAAE,CAAC,kBAAD,CAFZ;AAKH;;AAEDG,EAAAA,eAAe,GAAG;AACd;AACO,MAAA,KAAK,EAAC,uBADb;AACqC,MAAA,IAAI,EAAC,WAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEUH,EAAE,CAAE;AACtB,oEADoB,CAFZ;AAMH;;AAEDI,EAAAA,kBAAkB,GAAG;AACjB,+DAEU,KAAKD,eAAL,EAFV,EAGU,KAAKF,iBAAL,EAHV,EAIU,KAAKH,gBAAL,EAJV;AAOH;;AAEDO,EAAAA,oBAAoB,GAAG;AACnB,WAAO,KAAKP,gBAAL,EAAP;AACH;;AAEDQ,EAAAA,oBAAoB,GAAG;AACnB,+DAEU,KAAKJ,aAAL,EAFV,EAGU,KAAKD,iBAAL,EAHV,EAIU,KAAKZ,aAAL,EAJV,EAKU,KAAKS,gBAAL,EALV;AAQH;;AAEDS,EAAAA,aAAa,GAAG;AACZ,UAAM;AACFC,MAAAA,UADE;AAEFC,MAAAA,eAFE;AAGFC,MAAAA;AAHE,QAIF,KAAKf,KAJT;;AAMA,QAAI,CAACe,iBAAD,IAAsBF,UAAU,KAAK,CAAzC,EAA4C;AACxC,aAAO,KAAKJ,kBAAL,EAAP;AACH;;AAED,QAAIK,eAAJ,EAAqB;AACjB,aAAO,KAAKJ,oBAAL,EAAP;AACH;;AAED,WAAO,KAAKC,oBAAL,EAAP;AACH;;AAEDK,EAAAA,YAAY,GAAG;AACX,UAAM;AACFC,MAAAA,aADE;AAEFtB,MAAAA;AAFE,QAGF,KAAKK,KAHT;AAKA,UAAMkB,QAAQ,GAAGvB,gBAAgB,IAAI,CAAC,CAACwB,MAAM,CAACC,IAAP,CAAYzB,gBAAZ,EAA8B0B,MAArE;;AAEA,QAAI,CAACH,QAAL,EAAe;AAAE;AACb,aAAO,IAAP;AACH;;AAED,yCACK,MADL;AACY,MAAA,SAAS,EAAGD,aADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,SADE;AAEFC,MAAAA,MAFE;AAGFX,MAAAA,UAHE;AAIFE,MAAAA,iBAJE;AAKFU,MAAAA,iBALE;AAMFC,MAAAA;AANE,QAOF,KAAK1B,KAPT;;AASA,QAAK,CAACe,iBAAD,IAAsBF,UAAU,KAAK,CAArC,IAA0C,CAACY,iBAA5C,IAAkE,CAACC,gBAAvE,EAAyF;AACrF;AACS,QAAA,KAAK,EAAC,uBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGH;;AAED,yCACK,OADL;AAEM,MAAA,SAAS,EAAGH,SAFlB;AAGM,MAAA,MAAM,EAAGC,MAHf;AAIM,MAAA,GAAG,EAAG;AAAEvB,QAAAA,KAAK,EAAE;AAAT,OAJZ;AAKM,MAAA,EAAE,EAAGR,0BALX;AAMM,MAAA,gBAAgB,EAAG,KANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASc,KAAKmB,aAAL,EATd,EAUc,KAAKI,YAAL,EAVd;AAcH;;AAtLoD,CAAzD,SACWW,SADX,GACuB;AACfhC,EAAAA,gBAAgB,EAAER,SAAS,CAACyC,QAAV,CAAmBzC,SAAS,CAAC0C,KAA7B,EAAoCC,UADvC;AAEfhB,EAAAA,eAAe,EAAE3B,SAAS,CAAC4C,IAAV,CAAeD,UAFjB;AAGfL,EAAAA,iBAAiB,EAAEtC,SAAS,CAAC4C,IAAV,CAAeD,UAHnB;AAIfhC,EAAAA,oBAAoB,EAAEX,SAAS,CAAC4C,IAJjB;AAKfd,EAAAA,aAAa,EAAE9B,SAAS,CAAC4C,IAAV,CAAeD,UALf;AAMff,EAAAA,iBAAiB,EAAE5B,SAAS,CAAC4C,IAAV,CAAeD,UANnB;AAOf1B,EAAAA,iBAAiB,EAAEjB,SAAS,CAAC6C,IAAV,CAAeF,UAPnB;AAQfP,EAAAA,SAAS,EAAEpC,SAAS,CAAC6C,IAAV,CAAeF,UARX;AASfN,EAAAA,MAAM,EAAErC,SAAS,CAAC6C,IAAV,CAAeF,UATR;AAUflC,EAAAA,mBAAmB,EAAET,SAAS,CAACyC,QAAV,CAAmBzC,SAAS,CAAC8C,KAA7B,EAAoCH,UAV1C;AAWfjC,EAAAA,kBAAkB,EAAEV,SAAS,CAAC6C,IAAV,CAAeF,UAXpB;AAYf/B,EAAAA,YAAY,EAAEZ,SAAS,CAAC6C,IAAV,CAAeF,UAZd;AAafjB,EAAAA,UAAU,EAAE1B,SAAS,CAAC+C,MAAV,CAAiBJ,UAbd;AAcfJ,EAAAA,gBAAgB,EAAEvC,SAAS,CAAC4C;AAdb,CADvB,SAkBWI,YAlBX,GAkB0B;AAClBT,EAAAA,gBAAgB,EAAE,IADA;AAElB5B,EAAAA,oBAAoB,EAAE;AAFJ,CAlB1B;AAyLA,eAAesC,qBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CategoryConfigurableAttributes from 'Component/CategoryConfigurableAttributes';\nimport Loader from 'Component/Loader';\nimport Overlay from 'Component/Overlay';\nimport ResetButton from 'Component/ResetButton';\n\nimport { CATEGORY_FILTER_OVERLAY_ID } from './CategoryFilterOverlay.config';\n\nimport './CategoryFilterOverlay.style';\n\n/** @namespace Component/CategoryFilterOverlay/Component */\nexport class CategoryFilterOverlay extends PureComponent {\n    static propTypes = {\n        availableFilters: PropTypes.objectOf(PropTypes.shape).isRequired,\n        areFiltersEmpty: PropTypes.bool.isRequired,\n        isContentFiltered: PropTypes.bool.isRequired,\n        isMatchingInfoFilter: PropTypes.bool,\n        isInfoLoading: PropTypes.bool.isRequired,\n        isProductsLoading: PropTypes.bool.isRequired,\n        onSeeResultsClick: PropTypes.func.isRequired,\n        onVisible: PropTypes.func.isRequired,\n        onHide: PropTypes.func.isRequired,\n        customFiltersValues: PropTypes.objectOf(PropTypes.array).isRequired,\n        toggleCustomFilter: PropTypes.func.isRequired,\n        getFilterUrl: PropTypes.func.isRequired,\n        totalPages: PropTypes.number.isRequired,\n        isCategoryAnchor: PropTypes.bool\n    };\n\n    static defaultProps = {\n        isCategoryAnchor: true,\n        isMatchingInfoFilter: false\n    };\n\n    renderFilters() {\n        const {\n            availableFilters,\n            customFiltersValues,\n            toggleCustomFilter,\n            isMatchingInfoFilter,\n            getFilterUrl\n        } = this.props;\n\n        return (\n            <CategoryConfigurableAttributes\n              mix={ { block: 'CategoryFilterOverlay', elem: 'Attributes' } }\n              isReady={ isMatchingInfoFilter }\n              configurable_options={ availableFilters }\n              getLink={ getFilterUrl }\n              parameters={ customFiltersValues }\n              updateConfigurableVariant={ toggleCustomFilter }\n            />\n        );\n    }\n\n    renderSeeResults() {\n        const { onSeeResultsClick } = this.props;\n\n        return (\n            <div\n              block=\"CategoryFilterOverlay\"\n              elem=\"SeeResults\"\n            >\n                <button\n                  block=\"CategoryFilterOverlay\"\n                  elem=\"Button\"\n                  mix={ { block: 'Button' } }\n                  onClick={ onSeeResultsClick }\n                >\n                    { __('SEE RESULTS') }\n                </button>\n            </div>\n        );\n    }\n\n    renderResetButton() {\n        const { onSeeResultsClick } = this.props;\n\n        return (\n            <ResetButton\n              onClick={ onSeeResultsClick }\n              mix={ { block: 'CategoryFilterOverlay', elem: 'ResetButton' } }\n            />\n        );\n    }\n\n    renderHeading() {\n        return (\n            <h3 block=\"CategoryFilterOverlay\" elem=\"Heading\">\n                { __('Shopping Options') }\n            </h3>\n        );\n    }\n\n    renderNoResults() {\n        return (\n            <p block=\"CategoryFilterOverlay\" elem=\"NoResults\">\n                { __(`The selected filter combination returned no results.\n                Please try again, using a different set of filters.`) }\n            </p>\n        );\n    }\n\n    renderEmptyFilters() {\n        return (\n            <>\n                { this.renderNoResults() }\n                { this.renderResetButton() }\n                { this.renderSeeResults() }\n            </>\n        );\n    }\n\n    renderMinimalFilters() {\n        return this.renderSeeResults();\n    }\n\n    renderDefaultFilters() {\n        return (\n            <>\n                { this.renderHeading() }\n                { this.renderResetButton() }\n                { this.renderFilters() }\n                { this.renderSeeResults() }\n            </>\n        );\n    }\n\n    renderContent() {\n        const {\n            totalPages,\n            areFiltersEmpty,\n            isProductsLoading\n        } = this.props;\n\n        if (!isProductsLoading && totalPages === 0) {\n            return this.renderEmptyFilters();\n        }\n\n        if (areFiltersEmpty) {\n            return this.renderMinimalFilters();\n        }\n\n        return this.renderDefaultFilters();\n    }\n\n    renderLoader() {\n        const {\n            isInfoLoading,\n            availableFilters\n        } = this.props;\n\n        const isLoaded = availableFilters && !!Object.keys(availableFilters).length;\n\n        if (!isLoaded) { // hide loader if filters were not yet loaded (even once!)\n            return null;\n        }\n\n        return (\n            <Loader isLoading={ isInfoLoading } />\n        );\n    }\n\n    render() {\n        const {\n            onVisible,\n            onHide,\n            totalPages,\n            isProductsLoading,\n            isContentFiltered,\n            isCategoryAnchor\n        } = this.props;\n\n        if ((!isProductsLoading && totalPages === 0 && !isContentFiltered) || !isCategoryAnchor) {\n            return (\n                <div block=\"CategoryFilterOverlay\" />\n            );\n        }\n\n        return (\n            <Overlay\n              onVisible={ onVisible }\n              onHide={ onHide }\n              mix={ { block: 'CategoryFilterOverlay' } }\n              id={ CATEGORY_FILTER_OVERLAY_ID }\n              isRenderInPortal={ false }\n            >\n                <div>\n                    { this.renderContent() }\n                    { this.renderLoader() }\n                </div>\n            </Overlay>\n        );\n    }\n}\n\nexport default CategoryFilterOverlay;\n"]},"metadata":{},"sourceType":"module"}