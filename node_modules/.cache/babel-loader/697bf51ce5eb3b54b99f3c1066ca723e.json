{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport NewsletterSubscriptionQuery from \"/home/arturs/scandiweb/scandipwa/src/query/NewsletterSubscription.query\";\nimport { showNotification } from \"/home/arturs/scandiweb/scandipwa/src/store/Notification/Notification.action\";\nimport { fetchMutation, getErrorMessage } from \"/home/arturs/scandiweb/scandipwa/src/util/Request\";\nexport const NOT_ACTIVE = 'NOT_ACTIVE';\n/**\n * Product Cart Dispatcher\n * @class NewsletterSubscriptionDispatcher\n * #namespace Store/NewsletterSubscription/Dispatcher\n */\n\nexport const NewsletterSubscriptionDispatcher = Mosaic.middleware(class NewsletterSubscriptionDispatcher_ extends Mosaic.Extensible() {\n  subscribeToNewsletter(dispatch, email) {\n    return fetchMutation(NewsletterSubscriptionQuery.getSubscribeToNewsletterMutation(email)).then(\n    /** #namespace Store/NewsletterSubscription/Dispatcher/fetchMutationThen */\n    Mosaic.middleware(function ({\n      subscribeEmailToNewsletter: {\n        status\n      }\n    }) {\n      // `NOT_ACTIVE` response status corresponds to `newsletter_subscription_confirm` magento setting\n      const message = status === NOT_ACTIVE ? __('Confirmation request has been sent.') : __('Thank you for your subscription.');\n      return dispatch(showNotification('success', message));\n    }, \"Store/NewsletterSubscription/Dispatcher/fetchMutationThen\"),\n    /** #namespace Store/NewsletterSubscription/Dispatcher/fetchMutationSuccess */\n    Mosaic.middleware(function (error) {\n      return dispatch(showNotification('error', getErrorMessage(error)));\n    }, \"Store/NewsletterSubscription/Dispatcher/fetchMutationSuccess\"));\n  }\n\n}, \"Store/NewsletterSubscription/Dispatcher\");\nexport default new NewsletterSubscriptionDispatcher();","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/store/NewsletterSubscription/NewsletterSubscription.dispatcher.js"],"names":["NewsletterSubscriptionQuery","showNotification","fetchMutation","getErrorMessage","NOT_ACTIVE","subscribeToNewsletter","dispatch","email","getSubscribeToNewsletterMutation","then","subscribeEmailToNewsletter","status","message","__","error","NewsletterSubscriptionDispatcher"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,2BAAP;AACA,SAASC,gBAAT;AACA,SAASC,aAAT,EAAwBC,eAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AAEP;AACA;AACA;AACA;AACA;;AACA,sIAA8C;AAC1CC,EAAAA,qBAAqB,CAACC,QAAD,EAAWC,KAAX,EAAkB;AACnC,WAAOL,aAAa,CAACF,2BAA2B,CAACQ,gCAA5B,CAA6DD,KAA7D,CAAD,CAAb,CAAmFE,IAAnF;AACH;AADG,sBAEH,UAAC;AAAEC,MAAAA,0BAA0B,EAAE;AAAEC,QAAAA;AAAF;AAA9B,KAAD,EAAgD;AAC5C;AACA,YAAMC,OAAO,GAAGD,MAAM,KAAKP,UAAX,GACVS,EAAE,CAAC,qCAAD,CADQ,GAEVA,EAAE,CAAC,kCAAD,CAFR;AAIA,aAAOP,QAAQ,CAACL,gBAAgB,CAAC,SAAD,EAAYW,OAAZ,CAAjB,CAAf;AACH,KATE;AAUH;AAVG,sBAWH,UAACE,KAAD;AAAA,aAAWR,QAAQ,CAACL,gBAAgB,CAAC,OAAD,EAAUE,eAAe,CAACW,KAAD,CAAzB,CAAjB,CAAnB;AAAA,KAXG,kEAAP;AAaH;;AAfyC,CAA9C;AAkBA,eAAe,IAAIC,gCAAJ,EAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport NewsletterSubscriptionQuery from 'Query/NewsletterSubscription.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { fetchMutation, getErrorMessage } from 'Util/Request';\n\nexport const NOT_ACTIVE = 'NOT_ACTIVE';\n\n/**\n * Product Cart Dispatcher\n * @class NewsletterSubscriptionDispatcher\n * @namespace Store/NewsletterSubscription/Dispatcher\n */\nexport class NewsletterSubscriptionDispatcher {\n    subscribeToNewsletter(dispatch, email) {\n        return fetchMutation(NewsletterSubscriptionQuery.getSubscribeToNewsletterMutation(email)).then(\n            /** @namespace Store/NewsletterSubscription/Dispatcher/fetchMutationThen */\n            ({ subscribeEmailToNewsletter: { status } }) => {\n                // `NOT_ACTIVE` response status corresponds to `newsletter_subscription_confirm` magento setting\n                const message = status === NOT_ACTIVE\n                    ? __('Confirmation request has been sent.')\n                    : __('Thank you for your subscription.');\n\n                return dispatch(showNotification('success', message));\n            },\n            /** @namespace Store/NewsletterSubscription/Dispatcher/fetchMutationSuccess */\n            (error) => dispatch(showNotification('error', getErrorMessage(error)))\n        );\n    }\n}\n\nexport default new NewsletterSubscriptionDispatcher();\n"]},"metadata":{},"sourceType":"module"}