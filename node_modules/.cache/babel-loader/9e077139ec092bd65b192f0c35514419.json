{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CheckoutDeliveryOptions/CheckoutDeliveryOptions.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { STORE_IN_PICK_UP_METHOD_CODE, STORE_IN_PICK_UP_POPUP_ID } from \"/home/arturs/scandiweb/scandipwa/src/component/StoreInPickUp/StoreInPickUp.config\";\nimport { SHIPPING_STEP } from \"/home/arturs/scandiweb/scandipwa/src/route/Checkout/Checkout.config\";\nimport { showPopup } from \"/home/arturs/scandiweb/scandipwa/src/store/Popup/Popup.action\";\nimport { shippingMethodsType } from \"/home/arturs/scandiweb/scandipwa/src/type/Checkout\";\nimport CheckoutDeliveryOptions from \"./CheckoutDeliveryOptions.component\";\n/** #namespace Component/CheckoutDeliveryOptions/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    shippingMethod: state.CartReducer.cartTotals.shipping_method\n  };\n}, \"Component/CheckoutDeliveryOptions/Container/mapStateToProps\");\n/** #namespace Component/CheckoutDeliveryOptions/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    showPopup: function (popupId) {\n      return dispatch(showPopup(popupId));\n    }\n  };\n}, \"Component/CheckoutDeliveryOptions/Container/mapDispatchToProps\");\n/** #namespace Component/CheckoutDeliveryOptions/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CheckoutDeliveryOptionsContainer = Mosaic.middleware((_temp = _class = class CheckoutDeliveryOptionsContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.containerFunctions = {\n      selectShippingMethod: this.selectShippingMethod.bind(this),\n      setSelectedShippingMethodCode: this.setSelectedShippingMethodCode.bind(this)\n    };\n    this.dataMap = {};\n\n    this.collectAdditionalData = function () {\n      const {\n        selectedShippingMethodCode\n      } = _this.state;\n      const additionalDataGetter = _this.dataMap[selectedShippingMethodCode];\n\n      if (!additionalDataGetter) {\n        return {};\n      }\n\n      return additionalDataGetter();\n    };\n  }\n\n  static _getDefaultMethod(props) {\n    const {\n      shippingMethods = [],\n      shippingMethod\n    } = props;\n    const items = shippingMethods.filter(function ({\n      available\n    }) {\n      return available;\n    });\n    /**\n     * Code bellow checking the first selected shipping method.\n     *\n     * In the case of PICK UP IN STORE, code will not select it, as we need customer to select it manually,\n     * to open popup and select actual store where order will be shipped.\n     */\n\n    const result = items.find(function ({\n      method_code,\n      carrier_code\n    }) {\n      return `${carrier_code}_${method_code}` === shippingMethod && method_code !== STORE_IN_PICK_UP_METHOD_CODE;\n    }) || (items[0] && items[0].method_code !== STORE_IN_PICK_UP_METHOD_CODE ? items[0] : {});\n    return result.method_code;\n  }\n\n  __construct(props) {\n    super.__construct(props);\n\n    const {\n      shippingMethods\n    } = props;\n    this.state = {\n      prevShippingMethods: shippingMethods\n    };\n\n    const selectedShippingMethodCode = CheckoutDeliveryOptionsContainer._getDefaultMethod(props);\n\n    if (selectedShippingMethodCode) {\n      this.state = { ...this.state,\n        selectedShippingMethodCode\n      };\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      shippingMethods\n    } = props;\n    const {\n      prevShippingMethods\n    } = state;\n\n    if (shippingMethods.length !== prevShippingMethods.length) {\n      const selectedShippingMethodCode = CheckoutDeliveryOptionsContainer._getDefaultMethod(props);\n\n      return {\n        selectedShippingMethodCode,\n        prevShippingMethods: shippingMethods\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (window.formPortalCollector) {\n      window.formPortalCollector.subscribe(SHIPPING_STEP, this.collectAdditionalData, 'CheckoutDeliveryOptions');\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const {\n      onShippingMethodSelect,\n      shippingMethods\n    } = this.props;\n    const {\n      selectedShippingMethodCode\n    } = this.state;\n    const {\n      selectedShippingMethodCode: prevSelectedShippingMethodCode\n    } = prevState;\n\n    if (selectedShippingMethodCode !== prevSelectedShippingMethodCode) {\n      const shippingMethod = shippingMethods.find(function ({\n        method_code\n      }) {\n        return method_code === selectedShippingMethodCode;\n      });\n      onShippingMethodSelect(shippingMethod);\n    }\n  }\n\n  componentWillUnmount() {\n    if (window.formPortalCollector) {\n      window.formPortalCollector.unsubscribe(SHIPPING_STEP, 'CheckoutDeliveryOptions');\n    }\n  }\n\n  setSelectedShippingMethodCode(code) {\n    this.setState({\n      selectedShippingMethodCode: code\n    });\n  }\n\n  selectShippingMethod(shippingMethod) {\n    const {\n      onShippingMethodSelect,\n      showPopup,\n      onStoreSelect\n    } = this.props;\n    const {\n      method_code\n    } = shippingMethod;\n\n    if (method_code === STORE_IN_PICK_UP_METHOD_CODE) {\n      showPopup(STORE_IN_PICK_UP_POPUP_ID);\n    }\n\n    this.setSelectedShippingMethodCode(method_code);\n    onShippingMethodSelect(shippingMethod);\n    onStoreSelect();\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, CheckoutDeliveryOptions, Object.assign({}, this.props, this.containerFunctions, this.state, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  onShippingMethodSelect: PropTypes.func.isRequired,\n  showPopup: PropTypes.func.isRequired,\n  onStoreSelect: PropTypes.func.isRequired,\n  shippingMethods: shippingMethodsType.isRequired\n}, _temp), \"Component/CheckoutDeliveryOptions/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutDeliveryOptionsContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CheckoutDeliveryOptions/CheckoutDeliveryOptions.container.js"],"names":["PropTypes","PureComponent","connect","STORE_IN_PICK_UP_METHOD_CODE","STORE_IN_PICK_UP_POPUP_ID","SHIPPING_STEP","showPopup","shippingMethodsType","CheckoutDeliveryOptions","mapStateToProps","state","shippingMethod","CartReducer","cartTotals","shipping_method","mapDispatchToProps","dispatch","popupId","containerFunctions","selectShippingMethod","bind","setSelectedShippingMethodCode","dataMap","collectAdditionalData","selectedShippingMethodCode","additionalDataGetter","_getDefaultMethod","props","shippingMethods","items","filter","available","result","find","method_code","carrier_code","__construct","prevShippingMethods","CheckoutDeliveryOptionsContainer","getDerivedStateFromProps","length","componentDidMount","window","formPortalCollector","subscribe","componentDidUpdate","_","prevState","onShippingMethodSelect","prevSelectedShippingMethodCode","componentWillUnmount","unsubscribe","code","setState","onStoreSelect","render","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { STORE_IN_PICK_UP_METHOD_CODE, STORE_IN_PICK_UP_POPUP_ID } from 'Component/StoreInPickUp/StoreInPickUp.config';\nimport { SHIPPING_STEP } from 'Route/Checkout/Checkout.config';\nimport { showPopup } from 'Store/Popup/Popup.action';\nimport { shippingMethodsType } from 'Type/Checkout';\n\nimport CheckoutDeliveryOptions from './CheckoutDeliveryOptions.component';\n\n/** @namespace Component/CheckoutDeliveryOptions/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    shippingMethod: state.CartReducer.cartTotals.shipping_method\n});\n\n/** @namespace Component/CheckoutDeliveryOptions/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showPopup: (popupId) => dispatch(showPopup(popupId))\n});\n\n/** @namespace Component/CheckoutDeliveryOptions/Container */\nexport class CheckoutDeliveryOptionsContainer extends PureComponent {\n    static propTypes = {\n        onShippingMethodSelect: PropTypes.func.isRequired,\n        showPopup: PropTypes.func.isRequired,\n        onStoreSelect: PropTypes.func.isRequired,\n        shippingMethods: shippingMethodsType.isRequired\n    };\n\n    static _getDefaultMethod(props) {\n        const {\n            shippingMethods = [],\n            shippingMethod\n        } = props;\n\n        const items = shippingMethods.filter(({ available }) => available);\n\n        /**\n         * Code bellow checking the first selected shipping method.\n         *\n         * In the case of PICK UP IN STORE, code will not select it, as we need customer to select it manually,\n         * to open popup and select actual store where order will be shipped.\n         */\n        const result = items.find(\n            ({ method_code, carrier_code }) => (`${carrier_code}_${method_code}` === shippingMethod\n            ) && method_code !== STORE_IN_PICK_UP_METHOD_CODE\n        ) || (\n            items[0] && items[0].method_code !== STORE_IN_PICK_UP_METHOD_CODE\n                ? items[0]\n                : {}\n        );\n\n        return result.method_code;\n    }\n\n    containerFunctions = {\n        selectShippingMethod: this.selectShippingMethod.bind(this),\n        setSelectedShippingMethodCode: this.setSelectedShippingMethodCode.bind(this)\n    };\n\n    dataMap = {};\n\n    __construct(props) {\n        super.__construct(props);\n\n        const { shippingMethods } = props;\n        this.state = { prevShippingMethods: shippingMethods };\n\n        const selectedShippingMethodCode = CheckoutDeliveryOptionsContainer._getDefaultMethod(props);\n\n        if (selectedShippingMethodCode) {\n            this.state = {\n                ...this.state,\n                selectedShippingMethodCode\n            };\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { shippingMethods } = props;\n        const { prevShippingMethods } = state;\n\n        if (shippingMethods.length !== prevShippingMethods.length) {\n            const selectedShippingMethodCode = CheckoutDeliveryOptionsContainer._getDefaultMethod(props);\n\n            return {\n                selectedShippingMethodCode,\n                prevShippingMethods: shippingMethods\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        if (window.formPortalCollector) {\n            window.formPortalCollector.subscribe(SHIPPING_STEP, this.collectAdditionalData, 'CheckoutDeliveryOptions');\n        }\n    }\n\n    componentDidUpdate(_, prevState) {\n        const { onShippingMethodSelect, shippingMethods } = this.props;\n        const { selectedShippingMethodCode } = this.state;\n        const { selectedShippingMethodCode: prevSelectedShippingMethodCode } = prevState;\n\n        if (selectedShippingMethodCode !== prevSelectedShippingMethodCode) {\n            const shippingMethod = shippingMethods.find(\n                ({ method_code }) => method_code === selectedShippingMethodCode\n            );\n\n            onShippingMethodSelect(shippingMethod);\n        }\n    }\n\n    componentWillUnmount() {\n        if (window.formPortalCollector) {\n            window.formPortalCollector.unsubscribe(SHIPPING_STEP, 'CheckoutDeliveryOptions');\n        }\n    }\n\n    collectAdditionalData = () => {\n        const { selectedShippingMethodCode } = this.state;\n        const additionalDataGetter = this.dataMap[selectedShippingMethodCode];\n        if (!additionalDataGetter) {\n            return {};\n        }\n\n        return additionalDataGetter();\n    };\n\n    setSelectedShippingMethodCode(code) {\n        this.setState({ selectedShippingMethodCode: code });\n    }\n\n    selectShippingMethod(shippingMethod) {\n        const { onShippingMethodSelect, showPopup, onStoreSelect } = this.props;\n        const { method_code } = shippingMethod;\n\n        if (method_code === STORE_IN_PICK_UP_METHOD_CODE) {\n            showPopup(STORE_IN_PICK_UP_POPUP_ID);\n        }\n\n        this.setSelectedShippingMethodCode(method_code);\n        onShippingMethodSelect(shippingMethod);\n        onStoreSelect();\n    }\n\n    render() {\n        return (\n            <CheckoutDeliveryOptions\n              { ...this.props }\n              { ...this.containerFunctions }\n              { ...this.state }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutDeliveryOptionsContainer);\n"]},"metadata":{},"sourceType":"module"}