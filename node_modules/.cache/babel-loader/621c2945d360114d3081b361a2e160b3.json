{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Breadcrumbs/Breadcrumbs.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport Breadcrumb from \"/home/arturs/scandiweb/scandipwa/src/component/Breadcrumb\";\nimport ContentWrapper from \"/home/arturs/scandiweb/scandipwa/src/component/ContentWrapper\";\nimport { BreadcrumbsType } from \"/home/arturs/scandiweb/scandipwa/src/type/Breadcrumbs\";\nimport { appendWithStoreCode } from \"/home/arturs/scandiweb/scandipwa/src/util/Url\";\nimport \"./Breadcrumbs.style\";\n/**\n * Breadcrumbs\n * @class Breadcrumbs\n * #namespace Component/Breadcrumbs/Component\n */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const Breadcrumbs = Mosaic.middleware((_temp = _class = class Breadcrumbs_ extends Mosaic.Extensible(PureComponent) {\n  renderBreadcrumb({\n    url,\n    name\n  }, i) {\n    const {\n      breadcrumbs\n    } = this.props;\n    const isDisabled = !url || breadcrumbs.length - 1 === i;\n    return /*#__PURE__*/_checkBEM(React, Breadcrumb, {\n      name: name,\n      url: url,\n      index: i + 1,\n      key: i,\n      isDisabled: isDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderBreadcrumbList(breadcrumbs) {\n    var _this = this;\n\n    const breadcrumbsWithHome = [...breadcrumbs, // Looks like a browser bug, temporary fixed with .toString()\n    {\n      url: '/',\n      name: __('Home').toString()\n    }];\n    return breadcrumbsWithHome.map(function (_, i) {\n      return _this.renderBreadcrumb(breadcrumbsWithHome[breadcrumbsWithHome.length - 1 - i], i);\n    });\n  }\n\n  render() {\n    const {\n      breadcrumbs,\n      areBreadcrumbsVisible\n    } = this.props;\n\n    if (!areBreadcrumbsVisible || location.pathname === appendWithStoreCode('/') || location.pathname.match(appendWithStoreCode('/account')) || location.pathname === '/') {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, ContentWrapper, {\n      mix: {\n        block: 'Breadcrumbs'\n      },\n      label: __('Breadcrumbs (current location)...'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"nav\", {\n      \"aria-label\": \"Breadcrumbs navigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"ul\", {\n      block: \"Breadcrumbs\",\n      elem: \"List\",\n      itemScope: true,\n      itemType: \"http://schema.org/BreadcrumbList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, breadcrumbs.length ? this.renderBreadcrumbList(breadcrumbs) : this.renderBreadcrumb({}, 0))));\n  }\n\n}, _class.propTypes = {\n  breadcrumbs: BreadcrumbsType.isRequired,\n  areBreadcrumbsVisible: PropTypes.bool.isRequired\n}, _temp), \"Component/Breadcrumbs/Component\");\nexport default Breadcrumbs;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Breadcrumbs/Breadcrumbs.component.js"],"names":["PropTypes","PureComponent","Breadcrumb","ContentWrapper","BreadcrumbsType","appendWithStoreCode","renderBreadcrumb","url","name","i","breadcrumbs","props","isDisabled","length","renderBreadcrumbList","breadcrumbsWithHome","__","toString","map","_","render","areBreadcrumbsVisible","location","pathname","match","block","propTypes","isRequired","bool","Breadcrumbs"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,UAAP;AACA,OAAOC,cAAP;AACA,SAASC,eAAT;AACA,SAASC,mBAAT;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;AACA,4GAAiCJ,aAAjC,EAA+C;AAM3CK,EAAAA,gBAAgB,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,EAAgBC,CAAhB,EAAmB;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKC,KAA7B;AACA,UAAMC,UAAU,GAAG,CAACL,GAAD,IAAQG,WAAW,CAACG,MAAZ,GAAqB,CAArB,KAA2BJ,CAAtD;AAEA,yCACK,UADL;AAEM,MAAA,IAAI,EAAGD,IAFb;AAGM,MAAA,GAAG,EAAGD,GAHZ;AAIM,MAAA,KAAK,EAAGE,CAAC,GAAG,CAJlB;AAKM,MAAA,GAAG,EAAGA,CALZ;AAMM,MAAA,UAAU,EAAGG,UANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASH;;AAEDE,EAAAA,oBAAoB,CAACJ,WAAD,EAAc;AAAA;;AAC9B,UAAMK,mBAAmB,GAAG,CACxB,GAAGL,WADqB,EAExB;AACA;AAAEH,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,IAAI,EAAEQ,EAAE,CAAC,MAAD,CAAF,CAAWC,QAAX;AAAlB,KAHwB,CAA5B;AAMA,WAAOF,mBAAmB,CAACG,GAApB,CAAwB,UAACC,CAAD,EAAIV,CAAJ;AAAA,aAAU,KAAI,CAACH,gBAAL,CACrCS,mBAAmB,CAACA,mBAAmB,CAACF,MAApB,GAA6B,CAA7B,GAAiCJ,CAAlC,CADkB,EACoBA,CADpB,CAAV;AAAA,KAAxB,CAAP;AAGH;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA,WAAF;AAAeW,MAAAA;AAAf,QAAyC,KAAKV,KAApD;;AAEA,QACI,CAACU,qBAAD,IACGC,QAAQ,CAACC,QAAT,KAAsBlB,mBAAmB,CAAC,GAAD,CAD5C,IAEGiB,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwBnB,mBAAmB,CAAC,UAAD,CAA3C,CAFH,IAGGiB,QAAQ,CAACC,QAAT,KAAsB,GAJ7B,EAKE;AACE,aAAO,IAAP;AACH;;AAED,yCACK,cADL;AACoB,MAAA,GAAG,EAAG;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAD1B;AACqD,MAAA,KAAK,EAAGT,EAAE,CAAC,mCAAD,CAD/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEa,oBAAW,wBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIc,MAAA,KAAK,EAAC,aAJpB;AAKc,MAAA,IAAI,EAAC,MALnB;AAMc,MAAA,SAAS,MANvB;AAOc,MAAA,QAAQ,EAAC,kCAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUoBN,WAAW,CAACG,MAAZ,GACM,KAAKC,oBAAL,CAA0BJ,WAA1B,CADN,GAEM,KAAKJ,gBAAL,CAAsB,EAAtB,EAA0B,CAA1B,CAZ1B;AAkBH;;AA/D0C,CAA/C,SACWoB,SADX,GACuB;AACfhB,EAAAA,WAAW,EAAEN,eAAe,CAACuB,UADd;AAEfN,EAAAA,qBAAqB,EAAErB,SAAS,CAAC4B,IAAV,CAAeD;AAFvB,CADvB;AAkEA,eAAeE,WAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Breadcrumb from 'Component/Breadcrumb';\nimport ContentWrapper from 'Component/ContentWrapper';\nimport { BreadcrumbsType } from 'Type/Breadcrumbs';\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport './Breadcrumbs.style';\n\n/**\n * Breadcrumbs\n * @class Breadcrumbs\n * @namespace Component/Breadcrumbs/Component\n */\nexport class Breadcrumbs extends PureComponent {\n    static propTypes = {\n        breadcrumbs: BreadcrumbsType.isRequired,\n        areBreadcrumbsVisible: PropTypes.bool.isRequired\n    };\n\n    renderBreadcrumb({ url, name }, i) {\n        const { breadcrumbs } = this.props;\n        const isDisabled = !url || breadcrumbs.length - 1 === i;\n\n        return (\n            <Breadcrumb\n              name={ name }\n              url={ url }\n              index={ i + 1 }\n              key={ i }\n              isDisabled={ isDisabled }\n            />\n        );\n    }\n\n    renderBreadcrumbList(breadcrumbs) {\n        const breadcrumbsWithHome = [\n            ...breadcrumbs,\n            // Looks like a browser bug, temporary fixed with .toString()\n            { url: '/', name: __('Home').toString() }\n        ];\n\n        return breadcrumbsWithHome.map((_, i) => this.renderBreadcrumb(\n            breadcrumbsWithHome[breadcrumbsWithHome.length - 1 - i], i\n        ));\n    }\n\n    render() {\n        const { breadcrumbs, areBreadcrumbsVisible } = this.props;\n\n        if (\n            !areBreadcrumbsVisible\n            || location.pathname === appendWithStoreCode('/')\n            || location.pathname.match(appendWithStoreCode('/account'))\n            || location.pathname === '/'\n        ) {\n            return null;\n        }\n\n        return (\n            <ContentWrapper mix={ { block: 'Breadcrumbs' } } label={ __('Breadcrumbs (current location)...') }>\n                <nav aria-label=\"Breadcrumbs navigation\">\n                    <ul\n                      block=\"Breadcrumbs\"\n                      elem=\"List\"\n                      itemScope\n                      itemType=\"http://schema.org/BreadcrumbList\"\n                    >\n                        { (\n                            breadcrumbs.length\n                                ? this.renderBreadcrumbList(breadcrumbs)\n                                : this.renderBreadcrumb({}, 0)\n                        ) }\n                    </ul>\n                </nav>\n            </ContentWrapper>\n        );\n    }\n}\n\nexport default Breadcrumbs;\n"]},"metadata":{},"sourceType":"module"}