{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CheckoutAddressBook/CheckoutAddressBook.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { customerType } from \"/home/arturs/scandiweb/scandipwa/src/type/Account\";\nimport { isSignedIn } from \"/home/arturs/scandiweb/scandipwa/src/util/Auth\";\nimport CheckoutAddressBook from \"./CheckoutAddressBook.component\";\nexport const MyAccountDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/scandipwa/src/store/MyAccount/MyAccount.dispatcher\");\n/** #namespace Component/CheckoutAddressBook/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    customer: state.MyAccountReducer.customer\n  };\n}, \"Component/CheckoutAddressBook/Container/mapStateToProps\");\n/** #namespace Component/CheckoutAddressBook/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    requestCustomerData: function () {\n      return MyAccountDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.requestCustomerData(dispatch);\n      });\n    }\n  };\n}, \"Component/CheckoutAddressBook/Container/mapDispatchToProps\");\n/** #namespace Component/CheckoutAddressBook/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CheckoutAddressBookContainer = Mosaic.middleware((_temp = _class = class CheckoutAddressBookContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.containerFunctions = {\n      onAddressSelect: this.onAddressSelect.bind(this)\n    };\n  }\n\n  static _getDefaultAddressId(props) {\n    const {\n      customer,\n      isBilling\n    } = props;\n    const defaultKey = isBilling ? 'default_billing' : 'default_shipping';\n    const {\n      [defaultKey]: defaultAddressId,\n      addresses\n    } = customer;\n\n    if (defaultAddressId) {\n      return +defaultAddressId;\n    }\n\n    if (addresses && addresses.length) {\n      return addresses[0].id;\n    }\n\n    return 0;\n  }\n\n  __construct(props) {\n    super.__construct(props);\n\n    const {\n      requestCustomerData,\n      customer,\n      onAddressSelect\n    } = props;\n\n    if (isSignedIn() && !Object.keys(customer).length) {\n      requestCustomerData();\n    }\n\n    const defaultAddressId = CheckoutAddressBookContainer._getDefaultAddressId(props);\n\n    if (defaultAddressId) {\n      onAddressSelect(defaultAddressId);\n      this.estimateShipping(defaultAddressId);\n    }\n\n    this.state = {\n      prevDefaultAddressId: defaultAddressId,\n      selectedAddressId: defaultAddressId\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      prevDefaultAddressId\n    } = state;\n\n    const defaultAddressId = CheckoutAddressBookContainer._getDefaultAddressId(props);\n\n    if (defaultAddressId !== prevDefaultAddressId) {\n      return {\n        selectedAddressId: defaultAddressId,\n        prevDefaultAddressId: defaultAddressId\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(_, prevState) {\n    const {\n      onAddressSelect,\n      requestCustomerData,\n      customer\n    } = this.props;\n    const {\n      selectedAddressId: prevSelectedAddressId\n    } = prevState;\n    const {\n      selectedAddressId\n    } = this.state;\n\n    if (isSignedIn() && !Object.keys(customer).length) {\n      requestCustomerData();\n    }\n\n    if (selectedAddressId !== prevSelectedAddressId) {\n      onAddressSelect(selectedAddressId);\n      this.estimateShipping(selectedAddressId);\n    }\n  }\n\n  onAddressSelect(address) {\n    const {\n      id = 0\n    } = address;\n    this.setState({\n      selectedAddressId: id\n    });\n  }\n\n  estimateShipping(addressId) {\n    const {\n      onShippingEstimationFieldsChange,\n      customer: {\n        addresses = []\n      }\n    } = this.props;\n    const address = addresses.find(function ({\n      id\n    }) {\n      return id === addressId;\n    });\n\n    if (!address) {\n      return;\n    }\n\n    const {\n      city,\n      country_id,\n      postcode,\n      region: {\n        region_id,\n        region\n      } = {}\n    } = address;\n\n    if (!country_id) {\n      return;\n    }\n\n    onShippingEstimationFieldsChange({\n      city,\n      country_id,\n      region_id,\n      region,\n      postcode\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, CheckoutAddressBook, Object.assign({}, this.props, this.state, this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  requestCustomerData: PropTypes.func.isRequired,\n  onShippingEstimationFieldsChange: PropTypes.func,\n  onAddressSelect: PropTypes.func,\n  customer: customerType.isRequired,\n  isBilling: PropTypes.bool\n}, _class.defaultProps = {\n  isBilling: false,\n  onAddressSelect: function () {},\n  onShippingEstimationFieldsChange: function () {}\n}, _temp), \"Component/CheckoutAddressBook/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutAddressBookContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CheckoutAddressBook/CheckoutAddressBook.container.js"],"names":["PropTypes","PureComponent","connect","customerType","isSignedIn","CheckoutAddressBook","MyAccountDispatcher","mapStateToProps","state","customer","MyAccountReducer","mapDispatchToProps","dispatch","requestCustomerData","then","default","dispatcher","containerFunctions","onAddressSelect","bind","_getDefaultAddressId","props","isBilling","defaultKey","defaultAddressId","addresses","length","id","__construct","Object","keys","CheckoutAddressBookContainer","estimateShipping","prevDefaultAddressId","selectedAddressId","getDerivedStateFromProps","componentDidUpdate","_","prevState","prevSelectedAddressId","address","setState","addressId","onShippingEstimationFieldsChange","find","city","country_id","postcode","region","region_id","render","propTypes","func","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { customerType } from 'Type/Account';\nimport { isSignedIn } from 'Util/Auth';\n\nimport CheckoutAddressBook from './CheckoutAddressBook.component';\n\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Component/CheckoutAddressBook/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    customer: state.MyAccountReducer.customer\n});\n\n/** @namespace Component/CheckoutAddressBook/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    requestCustomerData: () => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.requestCustomerData(dispatch)\n    )\n});\n\n/** @namespace Component/CheckoutAddressBook/Container */\nexport class CheckoutAddressBookContainer extends PureComponent {\n    static propTypes = {\n        requestCustomerData: PropTypes.func.isRequired,\n        onShippingEstimationFieldsChange: PropTypes.func,\n        onAddressSelect: PropTypes.func,\n        customer: customerType.isRequired,\n        isBilling: PropTypes.bool\n    };\n\n    static defaultProps = {\n        isBilling: false,\n        onAddressSelect: () => {},\n        onShippingEstimationFieldsChange: () => {}\n    };\n\n    static _getDefaultAddressId(props) {\n        const { customer, isBilling } = props;\n        const defaultKey = isBilling ? 'default_billing' : 'default_shipping';\n        const { [defaultKey]: defaultAddressId, addresses } = customer;\n\n        if (defaultAddressId) {\n            return +defaultAddressId;\n        }\n        if (addresses && addresses.length) {\n            return addresses[0].id;\n        }\n\n        return 0;\n    }\n\n    containerFunctions = ({\n        onAddressSelect: this.onAddressSelect.bind(this)\n    });\n\n    __construct(props) {\n        super.__construct(props);\n\n        const {\n            requestCustomerData,\n            customer,\n            onAddressSelect\n        } = props;\n\n        if (isSignedIn() && !Object.keys(customer).length) {\n            requestCustomerData();\n        }\n\n        const defaultAddressId = CheckoutAddressBookContainer._getDefaultAddressId(props);\n\n        if (defaultAddressId) {\n            onAddressSelect(defaultAddressId);\n            this.estimateShipping(defaultAddressId);\n        }\n\n        this.state = {\n            prevDefaultAddressId: defaultAddressId,\n            selectedAddressId: defaultAddressId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevDefaultAddressId } = state;\n        const defaultAddressId = CheckoutAddressBookContainer._getDefaultAddressId(props);\n\n        if (defaultAddressId !== prevDefaultAddressId) {\n            return {\n                selectedAddressId: defaultAddressId,\n                prevDefaultAddressId: defaultAddressId\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(_, prevState) {\n        const {\n            onAddressSelect,\n            requestCustomerData,\n            customer\n        } = this.props;\n        const { selectedAddressId: prevSelectedAddressId } = prevState;\n        const { selectedAddressId } = this.state;\n\n        if (isSignedIn() && !Object.keys(customer).length) {\n            requestCustomerData();\n        }\n\n        if (selectedAddressId !== prevSelectedAddressId) {\n            onAddressSelect(selectedAddressId);\n            this.estimateShipping(selectedAddressId);\n        }\n    }\n\n    onAddressSelect(address) {\n        const { id = 0 } = address;\n        this.setState({ selectedAddressId: id });\n    }\n\n    estimateShipping(addressId) {\n        const {\n            onShippingEstimationFieldsChange,\n            customer: { addresses = [] }\n        } = this.props;\n\n        const address = addresses.find(({ id }) => id === addressId);\n\n        if (!address) {\n            return;\n        }\n\n        const {\n            city,\n            country_id,\n            postcode,\n            region: {\n                region_id,\n                region\n            } = {}\n        } = address;\n\n        if (!country_id) {\n            return;\n        }\n\n        onShippingEstimationFieldsChange({\n            city,\n            country_id,\n            region_id,\n            region,\n            postcode\n        });\n    }\n\n    render() {\n        return (\n            <CheckoutAddressBook\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutAddressBookContainer);\n"]},"metadata":{},"sourceType":"module"}