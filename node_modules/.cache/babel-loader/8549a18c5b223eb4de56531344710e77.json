{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CheckoutGuestForm/CheckoutGuestForm.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport FieldForm from \"/home/arturs/scandiweb/scandipwa/src/component/FieldForm/FieldForm.component\";\nimport FormPortal from \"/home/arturs/scandiweb/scandipwa/src/component/FormPortal\";\nimport MyAccountConfirmEmail from \"/home/arturs/scandiweb/scandipwa/src/component/MyAccountConfirmEmail\";\nimport MyAccountForgotPassword from \"/home/arturs/scandiweb/scandipwa/src/component/MyAccountForgotPassword\";\nimport MyAccountForgotPasswordSuccess from \"/home/arturs/scandiweb/scandipwa/src/component/MyAccountForgotPasswordSuccess\";\nimport { STATE_CONFIRM_EMAIL, STATE_FORGOT_PASSWORD, STATE_FORGOT_PASSWORD_SUCCESS, STATE_LOGGED_IN, STATE_SIGN_IN } from \"/home/arturs/scandiweb/scandipwa/src/component/MyAccountOverlay/MyAccountOverlay.config\";\nimport MyAccountSignIn from \"/home/arturs/scandiweb/scandipwa/src/component/MyAccountSignIn\";\nimport \"./CheckoutGuestForm.style\";\n/** #namespace Component/CheckoutGuestForm/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CheckoutGuestForm = Mosaic.middleware((_temp = _class = class CheckoutGuestForm_ extends Mosaic.Extensible(FieldForm) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.renderMap = {\n      [STATE_SIGN_IN]: {\n        render: function () {\n          return _this.renderSignIn();\n        },\n        title: __('Sign in to your account')\n      },\n      [STATE_FORGOT_PASSWORD]: {\n        render: function () {\n          return _this.renderForgotPassword();\n        },\n        title: __('Get password link')\n      },\n      [STATE_FORGOT_PASSWORD_SUCCESS]: {\n        render: function () {\n          return _this.renderForgotPasswordSuccess();\n        }\n      },\n      [STATE_LOGGED_IN]: {\n        render: function () {}\n      },\n      [STATE_CONFIRM_EMAIL]: {\n        render: function () {\n          return _this.renderConfirmEmail();\n        },\n        title: __('Confirm the email')\n      },\n      '': {\n        render: function () {\n          return _this.renderGuestForm();\n        },\n        title: __('Enter personal information')\n      }\n    };\n  }\n\n  // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n  componentDidUpdate(prevProps) {\n    const {\n      isEmailAvailable,\n      setSignInState,\n      signInState\n    } = this.props;\n    const {\n      isEmailAvailable: prevIsEmailAvailable\n    } = prevProps;\n\n    if (!isEmailAvailable && prevIsEmailAvailable && signInState !== STATE_SIGN_IN) {\n      setSignInState(STATE_SIGN_IN);\n    }\n  }\n\n  // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n  get fieldMap() {\n    const {\n      handleEmailInput,\n      handlePasswordInput,\n      formId,\n      isCreateUser,\n      emailValue\n    } = this.props;\n    const fields = {\n      guest_email: {\n        form: formId,\n        label: __('Email'),\n        validation: ['notEmpty', 'email'],\n        onChange: handleEmailInput,\n        skipValue: true,\n        value: emailValue\n      }\n    };\n\n    if (isCreateUser) {\n      fields.guest_password = {\n        form: formId,\n        label: __('Create Password'),\n        onChange: handlePasswordInput,\n        validation: ['notEmpty', 'password'],\n        type: 'password',\n        skipValue: true\n      };\n    }\n\n    return fields;\n  }\n\n  renderHeading() {\n    return /*#__PURE__*/_checkBEM(React, \"h2\", {\n      block: \"Checkout\",\n      elem: \"Heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, __('Enter personal information'));\n  }\n\n  renderSignIn() {\n    const {\n      signInState,\n      onFormError,\n      handleForgotPassword,\n      handleCreateAccount,\n      setLoadingState,\n      onSignIn,\n      emailValue,\n      handleEmailInput,\n      setSignInState\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountSignIn, {\n      state: signInState,\n      onFormError: onFormError,\n      handleForgotPassword: handleForgotPassword,\n      handleCreateAccount: handleCreateAccount,\n      isCheckout: true,\n      handleEmailInput: handleEmailInput,\n      setSignInState: setSignInState,\n      emailValue: emailValue,\n      setLoadingState: setLoadingState,\n      onSignIn: onSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderConfirmEmail() {\n    const {\n      signInState,\n      handleSignIn\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountConfirmEmail, {\n      state: signInState,\n      handleSignIn: handleSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderForgotPassword() {\n    const {\n      signInState,\n      onFormError,\n      handleSignIn,\n      handleCreateAccount,\n      setSignInState,\n      setLoadingState\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountForgotPassword, {\n      state: signInState,\n      onFormError: onFormError,\n      handleSignIn: handleSignIn,\n      handleCreateAccount: handleCreateAccount,\n      setLoadingState: setLoadingState,\n      setSignInState: setSignInState,\n      isCheckout: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderForgotPasswordSuccess() {\n    const {\n      signInState,\n      handleSignIn\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountForgotPasswordSuccess, {\n      state: signInState,\n      handleSignIn: handleSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderSignInForm() {\n    const {\n      signInState,\n      onFormError,\n      handleForgotPassword,\n      handleCreateAccount,\n      isCheckout,\n      setLoadingState,\n      onSignIn\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, MyAccountSignIn, {\n      state: signInState,\n      onFormError: onFormError,\n      handleForgotPassword: handleForgotPassword,\n      handleCreateAccount: handleCreateAccount,\n      isCheckout: isCheckout,\n      setLoadingState: setLoadingState,\n      onSignIn: onSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderGuestForm() {\n    const {\n      formId\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, this.renderHeading(), /*#__PURE__*/_checkBEM(React, FormPortal, {\n      id: formId,\n      name: \"CheckoutGuestForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, this.renderFields(), /*#__PURE__*/_checkBEM(React, \"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, __('You can create an account after checkout'))));\n  }\n\n  renderForm() {\n    const {\n      signInState\n    } = this.props;\n    const {\n      render\n    } = this.renderMap[signInState];\n    return render();\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"CheckoutGuestForm\",\n      mix: {\n        block: 'FieldForm'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, this.renderForm());\n  }\n\n}, _class.propTypes = {\n  formId: PropTypes.string.isRequired,\n  handleEmailInput: PropTypes.func.isRequired,\n  handleCreateUser: PropTypes.func.isRequired,\n  isEmailAvailable: PropTypes.bool.isRequired,\n  emailValue: PropTypes.string.isRequired,\n  signInState: PropTypes.string.isRequired,\n  setSignInState: PropTypes.func.isRequired\n}, _temp), \"Component/CheckoutGuestForm/Component\");\nexport default CheckoutGuestForm;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CheckoutGuestForm/CheckoutGuestForm.component.js"],"names":["PropTypes","FieldForm","FormPortal","MyAccountConfirmEmail","MyAccountForgotPassword","MyAccountForgotPasswordSuccess","STATE_CONFIRM_EMAIL","STATE_FORGOT_PASSWORD","STATE_FORGOT_PASSWORD_SUCCESS","STATE_LOGGED_IN","STATE_SIGN_IN","MyAccountSignIn","renderMap","render","renderSignIn","title","__","renderForgotPassword","renderForgotPasswordSuccess","renderConfirmEmail","renderGuestForm","componentDidUpdate","prevProps","isEmailAvailable","setSignInState","signInState","props","prevIsEmailAvailable","fieldMap","handleEmailInput","handlePasswordInput","formId","isCreateUser","emailValue","fields","guest_email","form","label","validation","onChange","skipValue","value","guest_password","type","renderHeading","onFormError","handleForgotPassword","handleCreateAccount","setLoadingState","onSignIn","handleSignIn","renderSignInForm","isCheckout","renderFields","renderForm","block","propTypes","string","isRequired","func","handleCreateUser","bool","CheckoutGuestForm"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport FieldForm from 'Component/FieldForm/FieldForm.component';\nimport FormPortal from 'Component/FormPortal';\nimport MyAccountConfirmEmail from 'Component/MyAccountConfirmEmail';\nimport MyAccountForgotPassword from 'Component/MyAccountForgotPassword';\nimport MyAccountForgotPasswordSuccess from 'Component/MyAccountForgotPasswordSuccess';\nimport {\n    STATE_CONFIRM_EMAIL,\n    STATE_FORGOT_PASSWORD,\n    STATE_FORGOT_PASSWORD_SUCCESS,\n    STATE_LOGGED_IN,\n    STATE_SIGN_IN\n} from 'Component/MyAccountOverlay/MyAccountOverlay.config';\nimport MyAccountSignIn from 'Component/MyAccountSignIn';\n\nimport './CheckoutGuestForm.style';\n\n/** @namespace Component/CheckoutGuestForm/Component */\nexport class CheckoutGuestForm extends FieldForm {\n    static propTypes = {\n        formId: PropTypes.string.isRequired,\n        handleEmailInput: PropTypes.func.isRequired,\n        handleCreateUser: PropTypes.func.isRequired,\n        isEmailAvailable: PropTypes.bool.isRequired,\n        emailValue: PropTypes.string.isRequired,\n        signInState: PropTypes.string.isRequired,\n        setSignInState: PropTypes.func.isRequired\n    };\n\n    // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n    componentDidUpdate(prevProps) {\n        const { isEmailAvailable, setSignInState, signInState } = this.props;\n        const { isEmailAvailable: prevIsEmailAvailable } = prevProps;\n\n        if (!isEmailAvailable && prevIsEmailAvailable && signInState !== STATE_SIGN_IN) {\n            setSignInState(STATE_SIGN_IN);\n        }\n    }\n\n    renderMap = {\n        [STATE_SIGN_IN]: {\n            render: () => this.renderSignIn(),\n            title: __('Sign in to your account')\n        },\n        [STATE_FORGOT_PASSWORD]: {\n            render: () => this.renderForgotPassword(),\n            title: __('Get password link')\n        },\n        [STATE_FORGOT_PASSWORD_SUCCESS]: {\n            render: () => this.renderForgotPasswordSuccess()\n        },\n        [STATE_LOGGED_IN]: {\n            render: () => {}\n        },\n        [STATE_CONFIRM_EMAIL]: {\n            render: () => this.renderConfirmEmail(),\n            title: __('Confirm the email')\n        },\n        '': {\n            render: () => this.renderGuestForm(),\n            title: __('Enter personal information')\n        }\n    };\n\n    // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n    get fieldMap() {\n        const {\n            handleEmailInput,\n            handlePasswordInput,\n            formId,\n            isCreateUser,\n            emailValue\n        } = this.props;\n\n        const fields = {\n            guest_email: {\n                form: formId,\n                label: __('Email'),\n                validation: ['notEmpty', 'email'],\n                onChange: handleEmailInput,\n                skipValue: true,\n                value: emailValue\n            }\n        };\n\n        if (isCreateUser) {\n            fields.guest_password = {\n                form: formId,\n                label: __('Create Password'),\n                onChange: handlePasswordInput,\n                validation: ['notEmpty', 'password'],\n                type: 'password',\n                skipValue: true\n            };\n        }\n\n        return fields;\n    }\n\n    renderHeading() {\n        return (\n            <h2 block=\"Checkout\" elem=\"Heading\">\n                { __('Enter personal information') }\n            </h2>\n        );\n    }\n\n    renderSignIn() {\n        const {\n            signInState,\n            onFormError,\n            handleForgotPassword,\n            handleCreateAccount,\n            setLoadingState,\n            onSignIn,\n            emailValue,\n            handleEmailInput,\n            setSignInState\n        } = this.props;\n\n        return (\n            <MyAccountSignIn\n              state={ signInState }\n              onFormError={ onFormError }\n              handleForgotPassword={ handleForgotPassword }\n              handleCreateAccount={ handleCreateAccount }\n              isCheckout\n              handleEmailInput={ handleEmailInput }\n              setSignInState={ setSignInState }\n              emailValue={ emailValue }\n              setLoadingState={ setLoadingState }\n              onSignIn={ onSignIn }\n            />\n        );\n    }\n\n    renderConfirmEmail() {\n        const { signInState, handleSignIn } = this.props;\n\n        return (\n            <MyAccountConfirmEmail\n              state={ signInState }\n              handleSignIn={ handleSignIn }\n            />\n        );\n    }\n\n    renderForgotPassword() {\n        const {\n            signInState,\n            onFormError,\n            handleSignIn,\n            handleCreateAccount,\n            setSignInState,\n            setLoadingState\n        } = this.props;\n\n        return (\n            <MyAccountForgotPassword\n              state={ signInState }\n              onFormError={ onFormError }\n              handleSignIn={ handleSignIn }\n              handleCreateAccount={ handleCreateAccount }\n              setLoadingState={ setLoadingState }\n              setSignInState={ setSignInState }\n              isCheckout\n            />\n        );\n    }\n\n    renderForgotPasswordSuccess() {\n        const { signInState, handleSignIn } = this.props;\n\n        return (\n            <MyAccountForgotPasswordSuccess\n              state={ signInState }\n              handleSignIn={ handleSignIn }\n            />\n        );\n    }\n\n    renderSignInForm() {\n        const {\n            signInState,\n            onFormError,\n            handleForgotPassword,\n            handleCreateAccount,\n            isCheckout,\n            setLoadingState,\n            onSignIn\n        } = this.props;\n\n        return (\n            <MyAccountSignIn\n              state={ signInState }\n              onFormError={ onFormError }\n              handleForgotPassword={ handleForgotPassword }\n              handleCreateAccount={ handleCreateAccount }\n              isCheckout={ isCheckout }\n              setLoadingState={ setLoadingState }\n              onSignIn={ onSignIn }\n            />\n        );\n    }\n\n    renderGuestForm() {\n        const { formId } = this.props;\n        return (\n            <>\n                { this.renderHeading() }\n                <FormPortal\n                  id={ formId }\n                  name=\"CheckoutGuestForm\"\n                >\n                    { this.renderFields() }\n                    <span>{ __('You can create an account after checkout') }</span>\n                </FormPortal>\n            </>\n        );\n    }\n\n    renderForm() {\n        const { signInState } = this.props;\n        const { render } = this.renderMap[signInState];\n\n        return render();\n    }\n\n    render() {\n        return (\n            <div\n              block=\"CheckoutGuestForm\"\n              mix={ { block: 'FieldForm' } }\n            >\n                { this.renderForm() }\n            </div>\n        );\n    }\n}\n\nexport default CheckoutGuestForm;\n"]},"metadata":{},"sourceType":"module"}