{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport BrowserDatabase from \"/home/arturs/scandiweb/extension/src/util/BrowserDatabase\";\nimport { getIndexedProduct } from \"/home/arturs/scandiweb/extension/src/util/Product\";\nimport { UPDATE_SHIPPING_PRICE, UPDATE_TOTALS } from \"./Cart.action\";\nexport const CART_TOTALS = 'cart_totals';\n/** #namespace Store/Cart/Reducer/updateCartTotals */\n\nexport const updateCartTotals = Mosaic.middleware(function (action) {\n  const {\n    cartData: cartTotals\n  } = action;\n\n  if (Object.hasOwnProperty.call(cartTotals, 'items')) {\n    const normalizedItemsProduct = cartTotals.items.map(function (item) {\n      const {\n        variants,\n        ...normalizedItem\n      } = item;\n      normalizedItem.product = getIndexedProduct(item.product, item.sku);\n      return normalizedItem;\n    });\n    cartTotals.items = normalizedItemsProduct;\n  }\n\n  BrowserDatabase.setItem(cartTotals, CART_TOTALS);\n  return {\n    cartTotals\n  };\n}, \"Store/Cart/Reducer/updateCartTotals\");\n/** #namespace Store/Cart/Reducer/updateShippingPrice */\n\nexport const updateShippingPrice = Mosaic.middleware(function (action, state) {\n  const {\n    data: {\n      items,\n      ...rest\n    } = {}\n  } = action;\n  return {\n    cartTotals: { ...state.cartTotals,\n      ...rest\n    }\n  };\n}, \"Store/Cart/Reducer/updateShippingPrice\");\n/** #namespace Store/Cart/Reducer/getInitialState */\n\nexport const getInitialState = Mosaic.middleware(function () {\n  return {\n    cartTotals: BrowserDatabase.getItem(CART_TOTALS) || {}\n  };\n}, \"Store/Cart/Reducer/getInitialState\");\n/** #namespace Store/Cart/Reducer */\n\nexport const CartReducer = Mosaic.middleware(_c = function (state = getInitialState(), action) {\n  const {\n    type\n  } = action;\n\n  switch (type) {\n    case UPDATE_TOTALS:\n      return updateCartTotals(action, state);\n\n    case UPDATE_SHIPPING_PRICE:\n      return updateShippingPrice(action, state);\n\n    default:\n      return state;\n  }\n}, \"Store/Cart/Reducer\");\n_c2 = CartReducer;\nexport default CartReducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartReducer$\");\n$RefreshReg$(_c2, \"CartReducer\");","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/store/Cart/Cart.reducer.js"],"names":["BrowserDatabase","getIndexedProduct","UPDATE_SHIPPING_PRICE","UPDATE_TOTALS","CART_TOTALS","updateCartTotals","action","cartData","cartTotals","Object","hasOwnProperty","call","normalizedItemsProduct","items","map","item","variants","normalizedItem","product","sku","setItem","updateShippingPrice","state","data","rest","getInitialState","getItem","CartReducer","type"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,eAAP;AACA,SAASC,iBAAT;AAEA,SAASC,qBAAT,EAAgCC,aAAhC;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP;;AACA,OAAO,MAAMC,gBAAgB,qBAAG,UAACC,MAAD,EAAY;AACxC,QAAM;AAAEC,IAAAA,QAAQ,EAAEC;AAAZ,MAA2BF,MAAjC;;AAEA,MAAIG,MAAM,CAACC,cAAP,CAAsBC,IAAtB,CAA2BH,UAA3B,EAAuC,OAAvC,CAAJ,EAAqD;AACjD,UAAMI,sBAAsB,GAAGJ,UAAU,CAACK,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAU;AAC1D,YAAM;AAAEC,QAAAA,QAAF;AAAY,WAAGC;AAAf,UAAkCF,IAAxC;AACAE,MAAAA,cAAc,CAACC,OAAf,GAAyBjB,iBAAiB,CAACc,IAAI,CAACG,OAAN,EAAeH,IAAI,CAACI,GAApB,CAA1C;AAEA,aAAOF,cAAP;AACH,KAL8B,CAA/B;AAOAT,IAAAA,UAAU,CAACK,KAAX,GAAmBD,sBAAnB;AACH;;AAEDZ,EAAAA,eAAe,CAACoB,OAAhB,CACIZ,UADJ,EAEIJ,WAFJ;AAKA,SAAO;AAAEI,IAAAA;AAAF,GAAP;AACH,CApB4B,wCAAtB;AAsBP;;AACA,OAAO,MAAMa,mBAAmB,qBAAG,UAACf,MAAD,EAASgB,KAAT,EAAmB;AAClD,QAAM;AACFC,IAAAA,IAAI,EAAE;AACFV,MAAAA,KADE;AAEF,SAAGW;AAFD,QAGF;AAJF,MAKFlB,MALJ;AAOA,SAAO;AACHE,IAAAA,UAAU,EAAE,EACR,GAAGc,KAAK,CAACd,UADD;AAER,SAAGgB;AAFK;AADT,GAAP;AAMH,CAd+B,2CAAzB;AAgBP;;AACA,OAAO,MAAMC,eAAe,qBAAG;AAAA,SAAO;AAClCjB,IAAAA,UAAU,EAAER,eAAe,CAAC0B,OAAhB,CAAwBtB,WAAxB,KAAwC;AADlB,GAAP;AAAA,CAAH,uCAArB;AAIP;;AACA,OAAO,MAAMuB,WAAW,0BAAG,UACvBL,KAAK,GAAGG,eAAe,EADA,EAEvBnB,MAFuB,EAGtB;AACD,QAAM;AAAEsB,IAAAA;AAAF,MAAWtB,MAAjB;;AAEA,UAAQsB,IAAR;AACA,SAAKzB,aAAL;AACI,aAAOE,gBAAgB,CAACC,MAAD,EAASgB,KAAT,CAAvB;;AACJ,SAAKpB,qBAAL;AACI,aAAOmB,mBAAmB,CAACf,MAAD,EAASgB,KAAT,CAA1B;;AACJ;AACI,aAAOA,KAAP;AANJ;AAQH,CAduB,uBAAjB;MAAMK,W;AAgBb,eAAeA,WAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport BrowserDatabase from 'Util/BrowserDatabase';\nimport { getIndexedProduct } from 'Util/Product';\n\nimport { UPDATE_SHIPPING_PRICE, UPDATE_TOTALS } from './Cart.action';\n\nexport const CART_TOTALS = 'cart_totals';\n\n/** @namespace Store/Cart/Reducer/updateCartTotals */\nexport const updateCartTotals = (action) => {\n    const { cartData: cartTotals } = action;\n\n    if (Object.hasOwnProperty.call(cartTotals, 'items')) {\n        const normalizedItemsProduct = cartTotals.items.map((item) => {\n            const { variants, ...normalizedItem } = item;\n            normalizedItem.product = getIndexedProduct(item.product, item.sku);\n\n            return normalizedItem;\n        });\n\n        cartTotals.items = normalizedItemsProduct;\n    }\n\n    BrowserDatabase.setItem(\n        cartTotals,\n        CART_TOTALS\n    );\n\n    return { cartTotals };\n};\n\n/** @namespace Store/Cart/Reducer/updateShippingPrice */\nexport const updateShippingPrice = (action, state) => {\n    const {\n        data: {\n            items,\n            ...rest\n        } = {}\n    } = action;\n\n    return {\n        cartTotals: {\n            ...state.cartTotals,\n            ...rest\n        }\n    };\n};\n\n/** @namespace Store/Cart/Reducer/getInitialState */\nexport const getInitialState = () => ({\n    cartTotals: BrowserDatabase.getItem(CART_TOTALS) || {}\n});\n\n/** @namespace Store/Cart/Reducer */\nexport const CartReducer = (\n    state = getInitialState(),\n    action\n) => {\n    const { type } = action;\n\n    switch (type) {\n    case UPDATE_TOTALS:\n        return updateCartTotals(action, state);\n    case UPDATE_SHIPPING_PRICE:\n        return updateShippingPrice(action, state);\n    default:\n        return state;\n    }\n};\n\nexport default CartReducer;\n"]},"metadata":{},"sourceType":"module"}