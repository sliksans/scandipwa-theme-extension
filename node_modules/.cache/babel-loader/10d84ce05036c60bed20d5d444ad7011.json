{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Breadcrumb/Breadcrumb.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport Link from \"/home/arturs/scandiweb/scandipwa/src/component/Link\";\nimport TextPlaceholder from \"/home/arturs/scandiweb/scandipwa/src/component/TextPlaceholder\";\nimport \"./Breadcrumb.style\";\n/** #namespace Component/Breadcrumb/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const Breadcrumb = Mosaic.middleware((_temp = _class = class Breadcrumb_ extends Mosaic.Extensible(PureComponent) {\n  getLinkUrl() {\n    const {\n      url = ''\n    } = this.props;\n\n    if (typeof url === 'string' || !url) {\n      return {\n        pathname: url || '',\n        search: '',\n        state: { ...this.state\n        }\n      };\n    }\n\n    return url;\n  }\n\n  renderLink() {\n    const {\n      index,\n      isDisabled\n    } = this.props;\n    const url = this.getLinkUrl() || {};\n    return /*#__PURE__*/_checkBEM(React, Link, {\n      block: \"Breadcrumb\",\n      elem: \"Link\",\n      to: url,\n      tabIndex: isDisabled ? '-1' : '0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"meta\", {\n      itemProp: \"item\",\n      content: window.location.origin + url.pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"span\", {\n      itemProp: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, this.renderName()), /*#__PURE__*/_checkBEM(React, \"meta\", {\n      itemProp: \"position\",\n      content: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderName() {\n    const {\n      name\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, TextPlaceholder, {\n      content: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    const {\n      index\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"li\", {\n      block: \"Breadcrumb\",\n      key: index,\n      itemProp: \"itemListElement\",\n      itemScope: true,\n      itemType: \"http://schema.org/ListItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, this.renderLink());\n  }\n\n}, _class.propTypes = {\n  index: PropTypes.number.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  url: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]),\n  name: PropTypes.string\n}, _class.defaultProps = {\n  url: '',\n  name: ''\n}, _temp), \"Component/Breadcrumb/Component\");\nexport default Breadcrumb;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Breadcrumb/Breadcrumb.component.js"],"names":["PropTypes","PureComponent","Link","TextPlaceholder","getLinkUrl","url","props","pathname","search","state","renderLink","index","isDisabled","window","location","origin","renderName","name","render","propTypes","number","isRequired","bool","oneOfType","string","shape","defaultProps","Breadcrumb"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,IAAP;AACA,OAAOC,eAAP;AAEA;AAEA;;;;AACA,0GAAgCF,aAAhC,EAA8C;AAgB1CG,EAAAA,UAAU,GAAG;AACT,UAAM;AACFC,MAAAA,GAAG,GAAG;AADJ,QAEF,KAAKC,KAFT;;AAIA,QAAI,OAAOD,GAAP,KAAe,QAAf,IAA2B,CAACA,GAAhC,EAAqC;AACjC,aAAO;AACHE,QAAAA,QAAQ,EAAEF,GAAG,IAAI,EADd;AAEHG,QAAAA,MAAM,EAAE,EAFL;AAGHC,QAAAA,KAAK,EAAE,EACH,GAAG,KAAKA;AADL;AAHJ,OAAP;AAOH;;AAED,WAAOJ,GAAP;AACH;;AAEDK,EAAAA,UAAU,GAAG;AACT,UAAM;AACFC,MAAAA,KADE;AAEFC,MAAAA;AAFE,QAGF,KAAKN,KAHT;AAKA,UAAMD,GAAG,GAAG,KAAKD,UAAL,MAAqB,EAAjC;AAEA,yCACK,IADL;AAEM,MAAA,KAAK,EAAC,YAFZ;AAGM,MAAA,IAAI,EAAC,MAHX;AAIM,MAAA,EAAE,EAAGC,GAJX;AAKM,MAAA,QAAQ,EAAGO,UAAU,GAAG,IAAH,GAAU,GALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOc,MAAA,QAAQ,EAAC,MAPvB;AAO8B,MAAA,OAAO,EAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyBV,GAAG,CAACE,QAPrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQc,MAAA,QAAQ,EAAC,MARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASc,KAAKS,UAAL,EATd;AAWc,MAAA,QAAQ,EAAC,UAXvB;AAWkC,MAAA,OAAO,EAAGL,KAX5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcH;;AAEDK,EAAAA,UAAU,GAAG;AACT,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKX,KAAtB;AAEA,yCACK,eADL;AACqB,MAAA,OAAO,EAAGW,IAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEP,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AAEA;AAEM,MAAA,KAAK,EAAC,YAFZ;AAGM,MAAA,GAAG,EAAGK,KAHZ;AAIM,MAAA,QAAQ,EAAC,iBAJf;AAKM,MAAA,SAAS,MALf;AAMM,MAAA,QAAQ,EAAC,4BANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQU,KAAKD,UAAL,EARV;AAWH;;AAhFyC,CAA9C,SACWS,SADX,GACuB;AACfR,EAAAA,KAAK,EAAEX,SAAS,CAACoB,MAAV,CAAiBC,UADT;AAEfT,EAAAA,UAAU,EAAEZ,SAAS,CAACsB,IAAV,CAAeD,UAFZ;AAGfhB,EAAAA,GAAG,EAAEL,SAAS,CAACuB,SAAV,CAAoB,CACrBvB,SAAS,CAACwB,MADW,EAErBxB,SAAS,CAACyB,KAAV,CAAgB,EAAhB,CAFqB,CAApB,CAHU;AAOfR,EAAAA,IAAI,EAAEjB,SAAS,CAACwB;AAPD,CADvB,SAWWE,YAXX,GAW0B;AAClBrB,EAAAA,GAAG,EAAE,EADa;AAElBY,EAAAA,IAAI,EAAE;AAFY,CAX1B;AAmFA,eAAeU,UAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Link from 'Component/Link';\nimport TextPlaceholder from 'Component/TextPlaceholder';\n\nimport './Breadcrumb.style';\n\n/** @namespace Component/Breadcrumb/Component */\nexport class Breadcrumb extends PureComponent {\n    static propTypes = {\n        index: PropTypes.number.isRequired,\n        isDisabled: PropTypes.bool.isRequired,\n        url: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.shape({})\n        ]),\n        name: PropTypes.string\n    };\n\n    static defaultProps = {\n        url: '',\n        name: ''\n    };\n\n    getLinkUrl() {\n        const {\n            url = ''\n        } = this.props;\n\n        if (typeof url === 'string' || !url) {\n            return {\n                pathname: url || '',\n                search: '',\n                state: {\n                    ...this.state\n                }\n            };\n        }\n\n        return url;\n    }\n\n    renderLink() {\n        const {\n            index,\n            isDisabled\n        } = this.props;\n\n        const url = this.getLinkUrl() || {};\n\n        return (\n            <Link\n              block=\"Breadcrumb\"\n              elem=\"Link\"\n              to={ url }\n              tabIndex={ isDisabled ? '-1' : '0' }\n            >\n                <meta itemProp=\"item\" content={ window.location.origin + url.pathname } />\n                <span itemProp=\"name\">\n                    { this.renderName() }\n                </span>\n                <meta itemProp=\"position\" content={ index } />\n            </Link>\n        );\n    }\n\n    renderName() {\n        const { name } = this.props;\n\n        return (\n            <TextPlaceholder content={ name } />\n        );\n    }\n\n    render() {\n        const { index } = this.props;\n\n        return (\n            <li\n              block=\"Breadcrumb\"\n              key={ index }\n              itemProp=\"itemListElement\"\n              itemScope\n              itemType=\"http://schema.org/ListItem\"\n            >\n                { this.renderLink() }\n            </li>\n        );\n    }\n}\n\nexport default Breadcrumb;\n"]},"metadata":{},"sourceType":"module"}