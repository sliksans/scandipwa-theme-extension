{"ast":null,"code":"import _asyncToGenerator from \"/home/arturs/scandiweb/extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport mergeTranslations from \"../../shared/mergeTranslations\";\nimport localeMap from \"./localeMap\"; // Strategy pattern ensures proper chunk splitting\n\nexport default function loadTranslation(_x) {\n  return _loadTranslation.apply(this, arguments);\n}\n\nfunction _loadTranslation() {\n  _loadTranslation = _asyncToGenerator(function* (locale) {\n    // Get the translation fetcher from the locale map\n    const loadTranslationFiles = localeMap[locale];\n\n    if (!loadTranslationFiles) {\n      throw new Error('Unknown locale!');\n    } // Import the translations\n\n\n    const translations = yield Promise.all(loadTranslationFiles());\n    return mergeTranslations(translations);\n  });\n  return _loadTranslation.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/webpack-i18n-runtime/src/util/loadTranslation.js"],"names":["mergeTranslations","localeMap","loadTranslation","locale","loadTranslationFiles","Error","translations","Promise","all"],"mappings":";AAAA,OAAOA,iBAAP;AACA,OAAOC,SAAP,oB,CAEA;;AACA,wBAA8BC,eAA9B;AAAA;AAAA;;;uCAAe,WAA+BC,MAA/B,EAAuC;AAClD;AACA,UAAMC,oBAAoB,GAAGH,SAAS,CAACE,MAAD,CAAtC;;AACA,QAAI,CAACC,oBAAL,EAA2B;AACvB,YAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH,KALiD,CAOlD;;;AACA,UAAMC,YAAY,SAASC,OAAO,CAACC,GAAR,CAAYJ,oBAAoB,EAAhC,CAA3B;AAEA,WAAOJ,iBAAiB,CAACM,YAAD,CAAxB;AACH,G","sourcesContent":["import mergeTranslations from '../../shared/mergeTranslations';\nimport localeMap from './localeMap';\n\n// Strategy pattern ensures proper chunk splitting\nexport default async function loadTranslation(locale) {\n    // Get the translation fetcher from the locale map\n    const loadTranslationFiles = localeMap[locale];\n    if (!loadTranslationFiles) {\n        throw new Error('Unknown locale!');\n    }\n\n    // Import the translations\n    const translations = await Promise.all(loadTranslationFiles());\n\n    return mergeTranslations(translations);\n}\n"]},"metadata":{},"sourceType":"module"}