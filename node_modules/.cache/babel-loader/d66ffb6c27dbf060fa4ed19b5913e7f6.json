{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountOrderTableRow/MyAccountOrderTableRow.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { ORDER_POPUP_ID } from \"/home/arturs/scandiweb/scandipwa/src/component/MyAccountOrderPopup/MyAccountOrderPopup.config\";\nimport { showPopup } from \"/home/arturs/scandiweb/scandipwa/src/store/Popup/Popup.action\";\nimport { orderType } from \"/home/arturs/scandiweb/scandipwa/src/type/Account\";\nimport MyAccountOrderTableRow from \"./MyAccountOrderTableRow.component\";\n/** #namespace Component/MyAccountOrderTableRow/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    showPopup: function (payload) {\n      return dispatch(showPopup(ORDER_POPUP_ID, payload));\n    }\n  };\n}, \"Component/MyAccountOrderTableRow/Container/mapDispatchToProps\");\n/** #namespace Component/MyAccountOrderTableRow/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountOrderTableRowContainer = Mosaic.middleware((_temp = _class = class MyAccountOrderTableRowContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.containerFunctions = {\n      onViewClick: this.onViewClick.bind(this)\n    };\n\n    this.containerProps = function () {\n      const {\n        order: {\n          base_order_info,\n          base_order_info: {\n            currency_code = ''\n          }\n        }\n      } = _this.props;\n      return {\n        base_order_info,\n        currency_code\n      };\n    };\n  }\n\n  onViewClick() {\n    const {\n      showPopup,\n      order\n    } = this.props;\n    const {\n      base_order_info: {\n        increment_id\n      }\n    } = order;\n    showPopup({\n      title: __('Order #%s', increment_id),\n      increment_id,\n      order\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, MyAccountOrderTableRow, Object.assign({}, this.containerProps(), this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  showPopup: PropTypes.func.isRequired,\n  order: orderType.isRequired\n}, _temp), \"Component/MyAccountOrderTableRow/Container\");\n/** #namespace Component/MyAccountOrderTableRow/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {};\n}, \"Component/MyAccountOrderTableRow/Container/mapStateToProps\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountOrderTableRowContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountOrderTableRow/MyAccountOrderTableRow.container.js"],"names":["PropTypes","PureComponent","connect","ORDER_POPUP_ID","showPopup","orderType","MyAccountOrderTableRow","mapDispatchToProps","dispatch","payload","containerFunctions","onViewClick","bind","containerProps","order","base_order_info","currency_code","props","increment_id","title","__","render","propTypes","func","isRequired","mapStateToProps","state","MyAccountOrderTableRowContainer"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,cAAT;AACA,SAASC,SAAT;AACA,SAASC,SAAT;AAEA,OAAOC,sBAAP;AAEA;;AACA,OAAO,MAAMC,kBAAkB,qBAAG,UAACC,QAAD;AAAA,SAAe;AAC7CJ,IAAAA,SAAS,EAAE,UAACK,OAAD;AAAA,aAAaD,QAAQ,CAACJ,SAAS,CAACD,cAAD,EAAiBM,OAAjB,CAAV,CAArB;AAAA;AADkC,GAAf;AAAA,CAAH,kEAAxB;AAIP;;;;AACA,oJAAqDR,aAArD,EAAmE;AAAA;AAAA;;AAAA;AAAA;AAAA,SAM/DS,kBAN+D,GAM1C;AACjBC,MAAAA,WAAW,EAAE,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB;AADI,KAN0C;;AAAA,SAqB/DC,cArB+D,GAqB9C,YAAM;AACnB,YAAM;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,eAAF;AAAmBA,UAAAA,eAAe,EAAE;AAAEC,YAAAA,aAAa,GAAG;AAAlB;AAApC;AAAT,UAA0E,KAAI,CAACC,KAArF;AACA,aAAO;AAAEF,QAAAA,eAAF;AAAmBC,QAAAA;AAAnB,OAAP;AACH,KAxB8D;AAAA;;AAU/DL,EAAAA,WAAW,GAAG;AACV,UAAM;AAAEP,MAAAA,SAAF;AAAaU,MAAAA;AAAb,QAAuB,KAAKG,KAAlC;AACA,UAAM;AAAEF,MAAAA,eAAe,EAAE;AAAEG,QAAAA;AAAF;AAAnB,QAAwCJ,KAA9C;AAEAV,IAAAA,SAAS,CAAC;AACNe,MAAAA,KAAK,EAAEC,EAAE,CAAC,WAAD,EAAcF,YAAd,CADH;AAENA,MAAAA,YAFM;AAGNJ,MAAAA;AAHM,KAAD,CAAT;AAKH;;AAODO,EAAAA,MAAM,GAAG;AACL,yCACK,sBADL,oBAEW,KAAKR,cAAL,EAFX,EAGW,KAAKH,kBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;;AAjC8D,CAAnE,SACWY,SADX,GACuB;AACflB,EAAAA,SAAS,EAAEJ,SAAS,CAACuB,IAAV,CAAeC,UADX;AAEfV,EAAAA,KAAK,EAAET,SAAS,CAACmB;AAFF,CADvB;AAoCA;AACA;;AACA,OAAO,MAAMC,eAAe,qBAAG,UAACC,KAAD;AAAA,SAAY,EAAZ;AAAA,CAAH,+DAArB;AAEP,eAAexB,OAAO,CAACuB,eAAD,EAAkBlB,kBAAlB,CAAP,CAA6CoB,+BAA7C,CAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { ORDER_POPUP_ID } from 'Component/MyAccountOrderPopup/MyAccountOrderPopup.config';\nimport { showPopup } from 'Store/Popup/Popup.action';\nimport { orderType } from 'Type/Account';\n\nimport MyAccountOrderTableRow from './MyAccountOrderTableRow.component';\n\n/** @namespace Component/MyAccountOrderTableRow/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showPopup: (payload) => dispatch(showPopup(ORDER_POPUP_ID, payload))\n});\n\n/** @namespace Component/MyAccountOrderTableRow/Container */\nexport class MyAccountOrderTableRowContainer extends PureComponent {\n    static propTypes = {\n        showPopup: PropTypes.func.isRequired,\n        order: orderType.isRequired\n    };\n\n    containerFunctions = {\n        onViewClick: this.onViewClick.bind(this)\n    };\n\n    onViewClick() {\n        const { showPopup, order } = this.props;\n        const { base_order_info: { increment_id } } = order;\n\n        showPopup({\n            title: __('Order #%s', increment_id),\n            increment_id,\n            order\n        });\n    }\n\n    containerProps = () => {\n        const { order: { base_order_info, base_order_info: { currency_code = '' } } } = this.props;\n        return { base_order_info, currency_code };\n    };\n\n    render() {\n        return (\n            <MyAccountOrderTableRow\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\n/** @namespace Component/MyAccountOrderTableRow/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountOrderTableRowContainer);\n"]},"metadata":{},"sourceType":"module"}