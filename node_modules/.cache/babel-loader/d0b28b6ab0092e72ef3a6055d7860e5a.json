{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/SliderWidget/SliderWidget.component.js\";\n\n/* eslint-disable react/no-array-index-key */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport Html from \"/home/arturs/scandiweb/extension/src/component/Html\";\nimport Image from \"/home/arturs/scandiweb/extension/src/component/Image\";\nimport Slider from \"/home/arturs/scandiweb/extension/src/component/Slider\";\nimport { DeviceType } from \"/home/arturs/scandiweb/extension/src/type/Device\";\nimport \"./SliderWidget.style\";\n/**\n * Homepage slider\n * @class SliderWidget\n * #namespace Component/SliderWidget/Component\n */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const SliderWidget = Mosaic.middleware((_temp = _class = class SliderWidget_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      activeImage: 0,\n      carouselDirection: 'right',\n      imageToShow: 0\n    };\n\n    this.onActiveImageChange = function (activeImage) {\n      _this.setState({\n        activeImage\n      });\n    };\n\n    this.startCarousel = function (interval) {\n      _this.carouselInterval = setInterval(function () {\n        _this.getImageToShow();\n\n        const {\n          imageToShow\n        } = _this.state;\n\n        _this.onActiveImageChange(imageToShow);\n      }, interval);\n    };\n\n    this.renderSlide = function (slide, i) {\n      const {\n        slide_text,\n        isPlaceholder,\n        title: block\n      } = slide;\n      return /*#__PURE__*/_checkBEM(React, \"figure\", {\n        block: \"SliderWidget\",\n        elem: \"Figure\",\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/_checkBEM(React, Image, {\n        mix: {\n          block: 'SliderWidget',\n          elem: 'FigureImage'\n        },\n        ratio: \"custom\",\n        src: _this.getSlideImage(slide),\n        isPlaceholder: isPlaceholder,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/_checkBEM(React, \"figcaption\", {\n        block: \"SliderWidget\",\n        elem: \"Figcaption\",\n        mix: {\n          block\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/_checkBEM(React, Html, {\n        content: slide_text || '',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      })));\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      slider: {\n        slideSpeed,\n        slides\n      }\n    } = this.props;\n    const {\n      slider: {\n        slideSpeed: prevSlideSpeed\n      }\n    } = prevProps;\n\n    if (slideSpeed !== prevSlideSpeed && slides.length !== 1) {\n      this.startCarousel(slideSpeed);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.carouselInterval);\n  }\n\n  getImageToShow() {\n    const {\n      activeImage,\n      carouselDirection\n    } = this.state;\n    const {\n      slider: {\n        slides\n      }\n    } = this.props;\n\n    if (activeImage === 0) {\n      this.setState({\n        carouselDirection: 'right',\n        imageToShow: activeImage + 1\n      });\n    } else if (activeImage === slides.length - 1) {\n      this.setState({\n        carouselDirection: 'left',\n        imageToShow: activeImage - 1\n      });\n    } else {\n      this.setState({\n        imageToShow: carouselDirection === 'right' ? activeImage + 1 : activeImage - 1\n      });\n    }\n  }\n\n  getSlideImage(slide) {\n    const {\n      desktop_image,\n      mobile_image\n    } = slide;\n    const {\n      device\n    } = this.props;\n\n    if (device.isMobile && mobile_image) {\n      return `/${mobile_image}`;\n    }\n\n    if (!desktop_image) {\n      return '';\n    }\n\n    return `/${desktop_image}`;\n  }\n\n  render() {\n    const {\n      activeImage\n    } = this.state;\n    const {\n      slider: {\n        slides,\n        title: block\n      }\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, Slider, {\n      mix: {\n        block: 'SliderWidget',\n        mix: {\n          block\n        }\n      },\n      showCrumbs: true,\n      activeImage: activeImage,\n      onActiveImageChange: this.onActiveImageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, slides.map(this.renderSlide));\n  }\n\n}, _class.propTypes = {\n  slider: PropTypes.shape({\n    title: PropTypes.string,\n    slideSpeed: PropTypes.number,\n    slides: PropTypes.arrayOf(PropTypes.shape({\n      desktop_image: PropTypes.string,\n      mobile_image: PropTypes.string,\n      slide_text: PropTypes.string,\n      isPlaceholder: PropTypes.bool\n    }))\n  }),\n  device: DeviceType.isRequired\n}, _class.defaultProps = {\n  slider: [{}]\n}, _temp), \"Component/SliderWidget/Component\");\nexport default SliderWidget;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/SliderWidget/SliderWidget.component.js"],"names":["PropTypes","PureComponent","Html","Image","Slider","DeviceType","state","activeImage","carouselDirection","imageToShow","onActiveImageChange","setState","startCarousel","interval","carouselInterval","setInterval","getImageToShow","renderSlide","slide","i","slide_text","isPlaceholder","title","block","elem","getSlideImage","componentDidUpdate","prevProps","slider","slideSpeed","slides","props","prevSlideSpeed","length","componentWillUnmount","clearInterval","desktop_image","mobile_image","device","isMobile","render","mix","map","propTypes","shape","string","number","arrayOf","bool","isRequired","defaultProps","SliderWidget"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Html from 'Component/Html';\nimport Image from 'Component/Image';\nimport Slider from 'Component/Slider';\nimport { DeviceType } from 'Type/Device';\n\nimport './SliderWidget.style';\n\n/**\n * Homepage slider\n * @class SliderWidget\n * @namespace Component/SliderWidget/Component\n */\nexport class SliderWidget extends PureComponent {\n    static propTypes = {\n        slider: PropTypes.shape({\n            title: PropTypes.string,\n            slideSpeed: PropTypes.number,\n            slides: PropTypes.arrayOf(\n                PropTypes.shape({\n                    desktop_image: PropTypes.string,\n                    mobile_image: PropTypes.string,\n                    slide_text: PropTypes.string,\n                    isPlaceholder: PropTypes.bool\n                })\n            )\n        }),\n        device: DeviceType.isRequired\n    };\n\n    static defaultProps = {\n        slider: [{}]\n    };\n\n    state = {\n        activeImage: 0,\n        carouselDirection: 'right',\n        imageToShow: 0\n    };\n\n    componentDidUpdate(prevProps) {\n        const { slider: { slideSpeed, slides } } = this.props;\n        const { slider: { slideSpeed: prevSlideSpeed } } = prevProps;\n\n        if (slideSpeed !== prevSlideSpeed && slides.length !== 1) {\n            this.startCarousel(slideSpeed);\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.carouselInterval);\n    }\n\n    onActiveImageChange = (activeImage) => {\n        this.setState({ activeImage });\n    };\n\n    startCarousel = (interval) => {\n        this.carouselInterval = setInterval(() => {\n            this.getImageToShow();\n\n            const { imageToShow } = this.state;\n\n            this.onActiveImageChange(imageToShow);\n        }, interval);\n    };\n\n    getImageToShow() {\n        const { activeImage, carouselDirection } = this.state;\n        const { slider: { slides } } = this.props;\n\n        if (activeImage === 0) {\n            this.setState({\n                carouselDirection: 'right',\n                imageToShow: activeImage + 1\n            });\n        } else if (activeImage === slides.length - 1) {\n            this.setState({\n                carouselDirection: 'left',\n                imageToShow: activeImage - 1\n            });\n        } else {\n            this.setState({ imageToShow: carouselDirection === 'right' ? activeImage + 1 : activeImage - 1 });\n        }\n    }\n\n    getSlideImage(slide) {\n        const {\n            desktop_image,\n            mobile_image\n        } = slide;\n        const { device } = this.props;\n\n        if (device.isMobile && mobile_image) {\n            return `/${mobile_image}`;\n        }\n\n        if (!desktop_image) {\n            return '';\n        }\n\n        return `/${desktop_image}`;\n    }\n\n    renderSlide = (slide, i) => {\n        const {\n            slide_text,\n            isPlaceholder,\n            title: block\n        } = slide;\n\n        return (\n            <figure\n              block=\"SliderWidget\"\n              elem=\"Figure\"\n              key={ i }\n            >\n                <Image\n                  mix={ { block: 'SliderWidget', elem: 'FigureImage' } }\n                  ratio=\"custom\"\n                  src={ this.getSlideImage(slide) }\n                  isPlaceholder={ isPlaceholder }\n                />\n                <figcaption\n                  block=\"SliderWidget\"\n                  elem=\"Figcaption\"\n                  mix={ { block } }\n                >\n                    <Html content={ slide_text || '' } />\n                </figcaption>\n            </figure>\n        );\n    };\n\n    render() {\n        const { activeImage } = this.state;\n        const { slider: { slides, title: block } } = this.props;\n\n        return (\n            <Slider\n              mix={ { block: 'SliderWidget', mix: { block } } }\n              showCrumbs\n              activeImage={ activeImage }\n              onActiveImageChange={ this.onActiveImageChange }\n            >\n                { slides.map(this.renderSlide) }\n            </Slider>\n        );\n    }\n}\n\nexport default SliderWidget;\n"]},"metadata":{},"sourceType":"module"}