{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountCreateAccount/MyAccountCreateAccount.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport Field from \"/home/arturs/scandiweb/scandipwa/src/component/Field\";\nimport Form from \"/home/arturs/scandiweb/scandipwa/src/component/Form\";\nimport { signInStateType } from \"/home/arturs/scandiweb/scandipwa/src/type/Account\";\nimport history from \"/home/arturs/scandiweb/scandipwa/src/util/History\";\nimport \"./MyAccountCreateAccount.style.scss\";\n/** #namespace Component/MyAccountCreateAccount/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountCreateAccount = Mosaic.middleware((_temp = _class = class MyAccountCreateAccount_ extends Mosaic.Extensible(PureComponent) {\n  renderVatNumberField() {\n    const {\n      showTaxVatNumber,\n      vatNumberValidation\n    } = this.props;\n\n    if (!showTaxVatNumber) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, Field, {\n      type: \"text\",\n      label: __('Tax/VAT Number'),\n      id: \"taxvat\",\n      name: \"taxvat\",\n      validation: vatNumberValidation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderSubscribeToNewsletter() {\n    return /*#__PURE__*/_checkBEM(React, Field, {\n      type: \"checkbox\",\n      value: \"is_subscribed\",\n      label: __('Subscribe to newsletter'),\n      id: \"is_subscribed\",\n      mix: {\n        block: 'MyAccountOverlay',\n        elem: 'Checkbox'\n      },\n      name: \"is_subscribed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderCreateAccountPersonalInfoFields() {\n    const {\n      newsletterActive\n    } = this.props;\n    const {\n      location: {\n        state: {\n          firstName = '',\n          lastName = ''\n        } = {}\n      }\n    } = history;\n    return /*#__PURE__*/_checkBEM(React, \"fieldset\", {\n      block: \"MyAccountOverlay\",\n      elem: \"Legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, __('Personal Information')), /*#__PURE__*/_checkBEM(React, Field, {\n      type: \"text\",\n      label: __('First Name'),\n      id: \"firstname\",\n      name: \"firstname\",\n      value: firstName,\n      autocomplete: \"given-name\",\n      validation: ['notEmpty'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, Field, {\n      type: \"text\",\n      label: __('Last Name'),\n      id: \"lastname\",\n      name: \"lastname\",\n      value: lastName,\n      autocomplete: \"family-name\",\n      validation: ['notEmpty'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), this.renderVatNumberField(), newsletterActive ? this.renderSubscribeToNewsletter() : null);\n  }\n\n  renderCreateAccountSignUpInfoFields() {\n    const {\n      location: {\n        state: {\n          email = ''\n        } = {}\n      }\n    } = history;\n    return /*#__PURE__*/_checkBEM(React, \"fieldset\", {\n      block: \"MyAccountOverlay\",\n      elem: \"Legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, __('Sign-Up Information')), /*#__PURE__*/_checkBEM(React, Field, {\n      type: \"text\",\n      label: __('Email'),\n      id: \"email\",\n      name: \"email\",\n      value: email,\n      autocomplete: \"email\",\n      validation: ['notEmpty', 'email'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, Field, {\n      type: \"password\",\n      label: __('Password'),\n      id: \"password\",\n      name: \"password\",\n      autocomplete: \"new-password\",\n      validation: ['notEmpty', 'password'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, Field, {\n      type: \"password\",\n      label: __('Confirm password'),\n      id: \"confirm_password\",\n      name: \"confirm_password\",\n      autocomplete: \"new-password\",\n      validation: ['notEmpty', 'password', 'password_match'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderSubmitButton() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"MyAccountOverlay\",\n      elem: \"Buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"button\", {\n      block: \"Button\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, __('Sign up')));\n  }\n\n  renderCreateAccountForm() {\n    const {\n      onCreateAccountAttempt,\n      onCreateAccountSuccess\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, Form, {\n      key: \"create-account\",\n      onSubmit: onCreateAccountAttempt,\n      onSubmitSuccess: onCreateAccountSuccess,\n      onSubmitError: onCreateAccountAttempt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, this.renderCreateAccountPersonalInfoFields(), this.renderCreateAccountSignUpInfoFields(), this.renderSubmitButton());\n  }\n\n  renderAdditionalField() {\n    const {\n      state,\n      handleSignIn\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"article\", {\n      block: \"MyAccountOverlay\",\n      elem: \"Additional\",\n      mods: {\n        state\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, __('Already have an account?')), /*#__PURE__*/_checkBEM(React, \"button\", {\n      block: \"Button\",\n      mods: {\n        likeLink: true\n      },\n      onClick: handleSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, __('Sign in here'))));\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, this.renderCreateAccountForm(), this.renderAdditionalField());\n  }\n\n}, _class.propTypes = {\n  state: signInStateType.isRequired,\n  onCreateAccountAttempt: PropTypes.func.isRequired,\n  onCreateAccountSuccess: PropTypes.func.isRequired,\n  handleSignIn: PropTypes.func.isRequired,\n  showTaxVatNumber: PropTypes.string.isRequired,\n  vatNumberValidation: PropTypes.array.isRequired,\n  newsletterActive: PropTypes.bool.isRequired\n}, _temp), \"Component/MyAccountCreateAccount/Component\");\nexport default MyAccountCreateAccount;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountCreateAccount/MyAccountCreateAccount.component.js"],"names":["PropTypes","PureComponent","Field","Form","signInStateType","history","renderVatNumberField","showTaxVatNumber","vatNumberValidation","props","__","renderSubscribeToNewsletter","block","elem","renderCreateAccountPersonalInfoFields","newsletterActive","location","state","firstName","lastName","renderCreateAccountSignUpInfoFields","email","renderSubmitButton","renderCreateAccountForm","onCreateAccountAttempt","onCreateAccountSuccess","renderAdditionalField","handleSignIn","likeLink","render","propTypes","isRequired","func","string","array","bool","MyAccountCreateAccount"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Field from 'Component/Field';\nimport Form from 'Component/Form';\nimport { signInStateType } from 'Type/Account';\nimport history from 'Util/History';\n\nimport './MyAccountCreateAccount.style.scss';\n\n/** @namespace Component/MyAccountCreateAccount/Component */\nexport class MyAccountCreateAccount extends PureComponent {\n    static propTypes = {\n        state: signInStateType.isRequired,\n        onCreateAccountAttempt: PropTypes.func.isRequired,\n        onCreateAccountSuccess: PropTypes.func.isRequired,\n        handleSignIn: PropTypes.func.isRequired,\n        showTaxVatNumber: PropTypes.string.isRequired,\n        vatNumberValidation: PropTypes.array.isRequired,\n        newsletterActive: PropTypes.bool.isRequired\n    };\n\n    renderVatNumberField() {\n        const { showTaxVatNumber, vatNumberValidation } = this.props;\n\n        if (!showTaxVatNumber) {\n            return null;\n        }\n\n        return (\n            <Field\n              type=\"text\"\n              label={ __('Tax/VAT Number') }\n              id=\"taxvat\"\n              name=\"taxvat\"\n              validation={ vatNumberValidation }\n            />\n        );\n    }\n\n    renderSubscribeToNewsletter() {\n        return (\n            <Field\n              type=\"checkbox\"\n              value=\"is_subscribed\"\n              label={ __('Subscribe to newsletter') }\n              id=\"is_subscribed\"\n              mix={ { block: 'MyAccountOverlay', elem: 'Checkbox' } }\n              name=\"is_subscribed\"\n            />\n        );\n    }\n\n    renderCreateAccountPersonalInfoFields() {\n        const { newsletterActive } = this.props;\n        const { location: { state: { firstName = '', lastName = '' } = {} } } = history;\n\n        return (\n            <fieldset block=\"MyAccountOverlay\" elem=\"Legend\">\n                <legend>{ __('Personal Information') }</legend>\n                <Field\n                  type=\"text\"\n                  label={ __('First Name') }\n                  id=\"firstname\"\n                  name=\"firstname\"\n                  value={ firstName }\n                  autocomplete=\"given-name\"\n                  validation={ ['notEmpty'] }\n                />\n                <Field\n                  type=\"text\"\n                  label={ __('Last Name') }\n                  id=\"lastname\"\n                  name=\"lastname\"\n                  value={ lastName }\n                  autocomplete=\"family-name\"\n                  validation={ ['notEmpty'] }\n                />\n                { this.renderVatNumberField() }\n                { newsletterActive ? this.renderSubscribeToNewsletter() : null }\n            </fieldset>\n        );\n    }\n\n    renderCreateAccountSignUpInfoFields() {\n        const { location: { state: { email = '' } = {} } } = history;\n\n        return (\n            <fieldset block=\"MyAccountOverlay\" elem=\"Legend\">\n                <legend>{ __('Sign-Up Information') }</legend>\n                <Field\n                  type=\"text\"\n                  label={ __('Email') }\n                  id=\"email\"\n                  name=\"email\"\n                  value={ email }\n                  autocomplete=\"email\"\n                  validation={ ['notEmpty', 'email'] }\n                />\n                <Field\n                  type=\"password\"\n                  label={ __('Password') }\n                  id=\"password\"\n                  name=\"password\"\n                  autocomplete=\"new-password\"\n                  validation={ ['notEmpty', 'password'] }\n                />\n                <Field\n                  type=\"password\"\n                  label={ __('Confirm password') }\n                  id=\"confirm_password\"\n                  name=\"confirm_password\"\n                  autocomplete=\"new-password\"\n                  validation={ ['notEmpty', 'password', 'password_match'] }\n                />\n            </fieldset>\n        );\n    }\n\n    renderSubmitButton() {\n        return (\n            <div block=\"MyAccountOverlay\" elem=\"Buttons\">\n                <button\n                  block=\"Button\"\n                  type=\"submit\"\n                >\n                    { __('Sign up') }\n                </button>\n            </div>\n        );\n    }\n\n    renderCreateAccountForm() {\n        const { onCreateAccountAttempt, onCreateAccountSuccess } = this.props;\n        return (\n            <Form\n              key=\"create-account\"\n              onSubmit={ onCreateAccountAttempt }\n              onSubmitSuccess={ onCreateAccountSuccess }\n              onSubmitError={ onCreateAccountAttempt }\n            >\n                { this.renderCreateAccountPersonalInfoFields() }\n                { this.renderCreateAccountSignUpInfoFields() }\n                { this.renderSubmitButton() }\n            </Form>\n        );\n    }\n\n    renderAdditionalField() {\n        const { state, handleSignIn } = this.props;\n\n        return (\n            <article block=\"MyAccountOverlay\" elem=\"Additional\" mods={ { state } }>\n                <section>\n                    <h4>{ __('Already have an account?') }</h4>\n                    <button\n                      block=\"Button\"\n                      mods={ { likeLink: true } }\n                      onClick={ handleSignIn }\n                    >\n                        { __('Sign in here') }\n                    </button>\n                </section>\n            </article>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                { this.renderCreateAccountForm() }\n                { this.renderAdditionalField() }\n            </>\n        );\n    }\n}\n\nexport default MyAccountCreateAccount;\n"]},"metadata":{},"sourceType":"module"}