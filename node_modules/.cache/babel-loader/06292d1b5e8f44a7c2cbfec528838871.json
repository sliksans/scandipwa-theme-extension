{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ShareWishlistPopup/ShareWishlistPopup.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport WishlistQuery from \"/home/arturs/scandiweb/extension/src/query/Wishlist.query\";\nimport { showNotification } from \"/home/arturs/scandiweb/extension/src/store/Notification/Notification.action\";\nimport { showPopup } from \"/home/arturs/scandiweb/extension/src/store/Popup/Popup.action\";\nimport { isSignedIn } from \"/home/arturs/scandiweb/extension/src/util/Auth\";\nimport { fetchMutation, getErrorMessage } from \"/home/arturs/scandiweb/extension/src/util/Request\";\nimport ShareWishlistPopup from \"./ShareWishlistPopup.component\";\n/** #namespace Component/ShareWishlistPopup/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    showNotification: function (message) {\n      return dispatch(showNotification('success', message));\n    },\n    showError: function (message) {\n      return dispatch(showNotification('error', message));\n    },\n    hidePopup: function () {\n      return dispatch(showPopup('', {}));\n    }\n  };\n}, \"Component/ShareWishlistPopup/Container/mapDispatchToProps\");\n/** #namespace Component/ShareWishlistPopup/Container/mapStateToProps */\n\nexport const mapStateToProps = Mosaic.middleware(function () {\n  return {};\n}, \"Component/ShareWishlistPopup/Container/mapStateToProps\");\n/** #namespace Component/ShareWishlistPopup/Container/shareWishlistPopupContainer */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ShareWishlistPopupContainer = Mosaic.middleware((_temp = _class = class ShareWishlistPopupContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.handleFormData = function (fields) {\n      const {\n        hidePopup,\n        showError,\n        showNotification\n      } = _this.props;\n      const {\n        message,\n        emails: initialEmails\n      } = fields;\n      const emails = initialEmails.split(',').map(function (email) {\n        return email.trim();\n      });\n\n      if (!isSignedIn()) {\n        return;\n      }\n\n      fetchMutation(WishlistQuery.getShareWishlistMutation({\n        message,\n        emails\n      })).then(\n      /** #namespace Component/ShareWishlistPopup/Container/handleFormDataFetchMutationThen */\n      Mosaic.middleware(function () {\n        showNotification(__('Wishlist has been shared'));\n        hidePopup();\n      }, \"Component/ShareWishlistPopup/Container/handleFormDataFetchMutationThen\"),\n      /** #namespace Component/ShareWishlistPopup/Container/handleFormDataFetchMutationCatch */\n      Mosaic.middleware(function (error) {\n        return showError(getErrorMessage(error));\n      }, \"Component/ShareWishlistPopup/Container/handleFormDataFetchMutationCatch\"));\n    };\n\n    this.containerFunctions = function () {\n      return {\n        handleFormData: _this.handleFormData\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, ShareWishlistPopup, Object.assign({}, this.props, this.containerFunctions(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  showError: PropTypes.func.isRequired,\n  hidePopup: PropTypes.func.isRequired,\n  showNotification: PropTypes.func.isRequired\n}, _temp), \"Component/ShareWishlistPopup/Container/shareWishlistPopupContainer\");\nexport default connect(mapStateToProps, mapDispatchToProps)(ShareWishlistPopupContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ShareWishlistPopup/ShareWishlistPopup.container.js"],"names":["PropTypes","PureComponent","connect","WishlistQuery","showNotification","showPopup","isSignedIn","fetchMutation","getErrorMessage","ShareWishlistPopup","mapDispatchToProps","dispatch","message","showError","hidePopup","mapStateToProps","handleFormData","fields","props","emails","initialEmails","split","map","email","trim","getShareWishlistMutation","then","__","error","containerFunctions","render","propTypes","func","isRequired","ShareWishlistPopupContainer"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,aAAP;AACA,SAASC,gBAAT;AACA,SAASC,SAAT;AACA,SAASC,UAAT;AACA,SAASC,aAAT,EAAwBC,eAAxB;AAEA,OAAOC,kBAAP;AAEA;;AACA,OAAO,MAAMC,kBAAkB,qBAAG,UAACC,QAAD;AAAA,SAAe;AAC7CP,IAAAA,gBAAgB,EAAE,UAACQ,OAAD;AAAA,aAAaD,QAAQ,CAACP,gBAAgB,CAAC,SAAD,EAAYQ,OAAZ,CAAjB,CAArB;AAAA,KAD2B;AAE7CC,IAAAA,SAAS,EAAE,UAACD,OAAD;AAAA,aAAaD,QAAQ,CAACP,gBAAgB,CAAC,OAAD,EAAUQ,OAAV,CAAjB,CAArB;AAAA,KAFkC;AAG7CE,IAAAA,SAAS,EAAE;AAAA,aAAMH,QAAQ,CAACN,SAAS,CAAC,EAAD,EAAK,EAAL,CAAV,CAAd;AAAA;AAHkC,GAAf;AAAA,CAAH,8DAAxB;AAMP;;AACA,OAAO,MAAMU,eAAe,qBAAG;AAAA,SAAO,EAAP;AAAA,CAAH,2DAArB;AAEP;;;;AACA,4IAAiDd,aAAjD,EAA+D;AAAA;AAAA;;AAAA;AAAA;;AAAA,SAO3De,cAP2D,GAO1C,UAACC,MAAD,EAAY;AACzB,YAAM;AAAEH,QAAAA,SAAF;AAAaD,QAAAA,SAAb;AAAwBT,QAAAA;AAAxB,UAA6C,KAAI,CAACc,KAAxD;AACA,YAAM;AAAEN,QAAAA,OAAF;AAAWO,QAAAA,MAAM,EAAEC;AAAnB,UAAqCH,MAA3C;AACA,YAAME,MAAM,GAAGC,aAAa,CAACC,KAAd,CAAoB,GAApB,EAAyBC,GAAzB,CAA6B,UAACC,KAAD;AAAA,eAAWA,KAAK,CAACC,IAAN,EAAX;AAAA,OAA7B,CAAf;;AAEA,UAAI,CAAClB,UAAU,EAAf,EAAmB;AACf;AACH;;AAEDC,MAAAA,aAAa,CAACJ,aAAa,CAACsB,wBAAd,CAAuC;AAAEb,QAAAA,OAAF;AAAWO,QAAAA;AAAX,OAAvC,CAAD,CAAb,CAA2EO,IAA3E;AACI;AADJ,wBAEI,YAAM;AACFtB,QAAAA,gBAAgB,CAACuB,EAAE,CAAC,0BAAD,CAAH,CAAhB;AACAb,QAAAA,SAAS;AACZ,OALL;AAMI;AANJ,wBAOI,UAACc,KAAD;AAAA,eAAWf,SAAS,CAACL,eAAe,CAACoB,KAAD,CAAhB,CAApB;AAAA,OAPJ;AASH,KAzB0D;;AAAA,SA2B3DC,kBA3B2D,GA2BtC;AAAA,aAAO;AACxBb,QAAAA,cAAc,EAAE,KAAI,CAACA;AADG,OAAP;AAAA,KA3BsC;AAAA;;AA+B3Dc,EAAAA,MAAM,GAAG;AACL,yCACK,kBADL,oBAEW,KAAKZ,KAFhB,EAGW,KAAKW,kBAAL,EAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;;AAtC0D,CAA/D,SACWE,SADX,GACuB;AACflB,EAAAA,SAAS,EAAEb,SAAS,CAACgC,IAAV,CAAeC,UADX;AAEfnB,EAAAA,SAAS,EAAEd,SAAS,CAACgC,IAAV,CAAeC,UAFX;AAGf7B,EAAAA,gBAAgB,EAAEJ,SAAS,CAACgC,IAAV,CAAeC;AAHlB,CADvB;AAyCA,eAAe/B,OAAO,CAACa,eAAD,EAAkBL,kBAAlB,CAAP,CAA6CwB,2BAA7C,CAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport WishlistQuery from 'Query/Wishlist.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { showPopup } from 'Store/Popup/Popup.action';\nimport { isSignedIn } from 'Util/Auth';\nimport { fetchMutation, getErrorMessage } from 'Util/Request';\n\nimport ShareWishlistPopup from './ShareWishlistPopup.component';\n\n/** @namespace Component/ShareWishlistPopup/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showNotification: (message) => dispatch(showNotification('success', message)),\n    showError: (message) => dispatch(showNotification('error', message)),\n    hidePopup: () => dispatch(showPopup('', {}))\n});\n\n/** @namespace Component/ShareWishlistPopup/Container/mapStateToProps */\nexport const mapStateToProps = () => ({});\n\n/** @namespace Component/ShareWishlistPopup/Container/shareWishlistPopupContainer */\nexport class ShareWishlistPopupContainer extends PureComponent {\n    static propTypes = {\n        showError: PropTypes.func.isRequired,\n        hidePopup: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired\n    };\n\n    handleFormData = (fields) => {\n        const { hidePopup, showError, showNotification } = this.props;\n        const { message, emails: initialEmails } = fields;\n        const emails = initialEmails.split(',').map((email) => email.trim());\n\n        if (!isSignedIn()) {\n            return;\n        }\n\n        fetchMutation(WishlistQuery.getShareWishlistMutation({ message, emails })).then(\n            /** @namespace Component/ShareWishlistPopup/Container/handleFormDataFetchMutationThen */\n            () => {\n                showNotification(__('Wishlist has been shared'));\n                hidePopup();\n            },\n            /** @namespace Component/ShareWishlistPopup/Container/handleFormDataFetchMutationCatch */\n            (error) => showError(getErrorMessage(error))\n        );\n    };\n\n    containerFunctions = () => ({\n        handleFormData: this.handleFormData\n    });\n\n    render() {\n        return (\n            <ShareWishlistPopup\n              { ...this.props }\n              { ...this.containerFunctions() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShareWishlistPopupContainer);\n"]},"metadata":{},"sourceType":"module"}