{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/route/NoMatchHandler/NoMatchHandler.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport NoMatch from \"/home/arturs/scandiweb/extension/src/route/NoMatch\";\nimport { ChildrenType } from \"/home/arturs/scandiweb/extension/src/type/Common\";\nimport { LocationType } from \"/home/arturs/scandiweb/extension/src/type/Router\";\n/** #namespace Route/NoMatchHandler/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const NoMatchHandler = Mosaic.middleware((_temp = _class = class NoMatchHandler_ extends Mosaic.Extensible(PureComponent) {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      location: {\n        pathname: newPathname\n      }\n    } = this.props;\n    const {\n      location: {\n        pathname\n      }\n    } = prevProps;\n\n    if (newPathname !== pathname) {\n      // 'window.scrollTo' is used to set correct scroll position for newly opened page. Previously we passed (0, 0)\n      // It caused scroll issue in Firefox, when navigating back from ProductPage to CategoryPage\n      // Not calling 'window.scrollTo' did not help, but passing dummy value for 'y' seems to fix it\n      if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n        window.scrollTo(0, 1);\n      } else {\n        window.scrollTo(0, 0);\n      }\n\n      this.onRouteChanged();\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      noMatch,\n      updateNoMatch\n    } = this.props;\n\n    if (noMatch) {\n      updateNoMatch({\n        noMatch: false\n      });\n    }\n  }\n  /**\n   * On browser route change\n   * @return {void}\n   */\n\n\n  onRouteChanged() {\n    const {\n      noMatch,\n      updateNoMatch\n    } = this.props;\n\n    if (noMatch) {\n      updateNoMatch({\n        noMatch: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      children,\n      noMatch\n    } = this.props;\n\n    if (noMatch) {\n      return /*#__PURE__*/_checkBEM(React, NoMatch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return children;\n  }\n\n}, _class.propTypes = {\n  children: ChildrenType.isRequired,\n  noMatch: PropTypes.bool.isRequired,\n  updateNoMatch: PropTypes.func.isRequired,\n  location: LocationType.isRequired\n}, _temp), \"Route/NoMatchHandler/Component\");\nexport default NoMatchHandler;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/route/NoMatchHandler/NoMatchHandler.component.js"],"names":["PropTypes","PureComponent","NoMatch","ChildrenType","LocationType","componentDidMount","window","scrollTo","componentDidUpdate","prevProps","location","pathname","newPathname","props","navigator","userAgent","toLowerCase","indexOf","onRouteChanged","componentWillUnmount","noMatch","updateNoMatch","render","children","propTypes","isRequired","bool","func","NoMatchHandler"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,OAAP;AACA,SAASC,YAAT;AACA,SAASC,YAAT;AAEA;;;;AACA,kHAAoCH,aAApC,EAAkD;AAQ9CI,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,UAAM;AAAEC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,QAAQ,EAAEC;AAAZ;AAAZ,QAA0C,KAAKC,KAArD;AACA,UAAM;AAAEH,MAAAA,QAAQ,EAAE;AAAEC,QAAAA;AAAF;AAAZ,QAA6BF,SAAnC;;AAEA,QAAIG,WAAW,KAAKD,QAApB,EAA8B;AAC1B;AACA;AACA;AACA,UAAIG,SAAS,CAACC,SAAV,CAAoBC,WAApB,GAAkCC,OAAlC,CAA0C,SAA1C,IAAuD,CAAC,CAA5D,EAA+D;AAC3DX,QAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH,OAFD,MAEO;AACHD,QAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH;;AAED,WAAKW,cAAL;AACH;AACJ;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,UAAM;AACFC,MAAAA,OADE;AAEFC,MAAAA;AAFE,QAGF,KAAKR,KAHT;;AAKA,QAAIO,OAAJ,EAAa;AACTC,MAAAA,aAAa,CAAC;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAb;AACH;AACJ;AAED;AACJ;AACA;AACA;;;AACIF,EAAAA,cAAc,GAAG;AACb,UAAM;AACFE,MAAAA,OADE;AAEFC,MAAAA;AAFE,QAGF,KAAKR,KAHT;;AAKA,QAAIO,OAAJ,EAAa;AACTC,MAAAA,aAAa,CAAC;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAb;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,QAAF;AAAYH,MAAAA;AAAZ,QAAwB,KAAKP,KAAnC;;AACA,QAAIO,OAAJ,EAAa;AACT,2CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AAED,WAAOG,QAAP;AACH;;AA/D6C,CAAlD,SACWC,SADX,GACuB;AACfD,EAAAA,QAAQ,EAAEpB,YAAY,CAACsB,UADR;AAEfL,EAAAA,OAAO,EAAEpB,SAAS,CAAC0B,IAAV,CAAeD,UAFT;AAGfJ,EAAAA,aAAa,EAAErB,SAAS,CAAC2B,IAAV,CAAeF,UAHf;AAIff,EAAAA,QAAQ,EAAEN,YAAY,CAACqB;AAJR,CADvB;AAkEA,eAAeG,cAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport NoMatch from 'Route/NoMatch';\nimport { ChildrenType } from 'Type/Common';\nimport { LocationType } from 'Type/Router';\n\n/** @namespace Route/NoMatchHandler/Component */\nexport class NoMatchHandler extends PureComponent {\n    static propTypes = {\n        children: ChildrenType.isRequired,\n        noMatch: PropTypes.bool.isRequired,\n        updateNoMatch: PropTypes.func.isRequired,\n        location: LocationType.isRequired\n    };\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { location: { pathname: newPathname } } = this.props;\n        const { location: { pathname } } = prevProps;\n\n        if (newPathname !== pathname) {\n            // 'window.scrollTo' is used to set correct scroll position for newly opened page. Previously we passed (0, 0)\n            // It caused scroll issue in Firefox, when navigating back from ProductPage to CategoryPage\n            // Not calling 'window.scrollTo' did not help, but passing dummy value for 'y' seems to fix it\n            if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n                window.scrollTo(0, 1);\n            } else {\n                window.scrollTo(0, 0);\n            }\n\n            this.onRouteChanged();\n        }\n    }\n\n    componentWillUnmount() {\n        const {\n            noMatch,\n            updateNoMatch\n        } = this.props;\n\n        if (noMatch) {\n            updateNoMatch({ noMatch: false });\n        }\n    }\n\n    /**\n     * On browser route change\n     * @return {void}\n     */\n    onRouteChanged() {\n        const {\n            noMatch,\n            updateNoMatch\n        } = this.props;\n\n        if (noMatch) {\n            updateNoMatch({ noMatch: false });\n        }\n    }\n\n    render() {\n        const { children, noMatch } = this.props;\n        if (noMatch) {\n            return <NoMatch />;\n        }\n\n        return children;\n    }\n}\n\nexport default NoMatchHandler;\n"]},"metadata":{},"sourceType":"module"}