{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/* eslint-disable prefer-promise-reject-errors */\n// Disabled due promise being reject with custom error (isCanceled)\n\n/**\n * Promise wrapper to make it cancelable\n * @static\n * @param  {Promise} promise promise which has to be cancelable\n * @return {Promise} Cancelable promise\n * #namespace Util/Promise/makeCancelable\n */\nexport const makeCancelable = Mosaic.middleware(function (promise) {\n  // eslint-disable-next-line fp/no-let\n  let hasCanceled_ = false;\n  const wrappedPromise = new Promise(function (resolve, reject) {\n    promise.then(\n    /** #namespace Util/Promise/MakeCancelable/promiseThen */\n    Mosaic.middleware(function (val) {\n      return !hasCanceled_ && resolve(val);\n    }, \"Util/Promise/MakeCancelable/promiseThen\"),\n    /** #namespace Util/Promise/MakeCancelable/promiseError */\n    Mosaic.middleware(function (error) {\n      return !hasCanceled_ && reject(error);\n    }, \"Util/Promise/MakeCancelable/promiseError\"));\n  });\n  return {\n    promise: wrappedPromise,\n\n    cancel() {\n      hasCanceled_ = true;\n    }\n\n  };\n}, \"Util/Promise/makeCancelable\");\nexport default makeCancelable;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/util/Promise/MakeCancelable.js"],"names":["makeCancelable","promise","hasCanceled_","wrappedPromise","Promise","resolve","reject","then","val","error","cancel"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,cAAc,qBAAG,UAACC,OAAD,EAAa;AACvC;AACA,MAAIC,YAAY,GAAG,KAAnB;AAEA,QAAMC,cAAc,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpDL,IAAAA,OAAO,CAACM,IAAR;AACI;AADJ,sBAEI,UAACC,GAAD;AAAA,aAAU,CAACN,YAAD,IAAiBG,OAAO,CAACG,GAAD,CAAlC;AAAA,KAFJ;AAGI;AAHJ,sBAII,UAACC,KAAD;AAAA,aAAY,CAACP,YAAD,IAAiBI,MAAM,CAACG,KAAD,CAAnC;AAAA,KAJJ;AAMH,GAPsB,CAAvB;AASA,SAAO;AACHR,IAAAA,OAAO,EAAEE,cADN;;AAEHO,IAAAA,MAAM,GAAG;AACLR,MAAAA,YAAY,GAAG,IAAf;AACH;;AAJE,GAAP;AAMH,CAnB0B,gCAApB;AAqBP,eAAeF,cAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/* eslint-disable prefer-promise-reject-errors */\n// Disabled due promise being reject with custom error (isCanceled)\n\n/**\n * Promise wrapper to make it cancelable\n * @static\n * @param  {Promise} promise promise which has to be cancelable\n * @return {Promise} Cancelable promise\n * @namespace Util/Promise/makeCancelable\n */\nexport const makeCancelable = (promise) => {\n    // eslint-disable-next-line fp/no-let\n    let hasCanceled_ = false;\n\n    const wrappedPromise = new Promise((resolve, reject) => {\n        promise.then(\n            /** @namespace Util/Promise/MakeCancelable/promiseThen */\n            (val) => (!hasCanceled_ && resolve(val)),\n            /** @namespace Util/Promise/MakeCancelable/promiseError */\n            (error) => (!hasCanceled_ && reject(error))\n        );\n    });\n\n    return {\n        promise: wrappedPromise,\n        cancel() {\n            hasCanceled_ = true;\n        }\n    };\n};\n\nexport default makeCancelable;\n"]},"metadata":{},"sourceType":"module"}