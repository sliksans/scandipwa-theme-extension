{"ast":null,"code":"/* eslint-disable */\n//smoothscroll.js file\n\n/*\n * smoothscroll polyfill - v0.3.5\n * https://iamdustan.github.io/smoothscroll\n * 2016 (c) Dustan Kasten, Jeremias Menichelli - MIT License\n */\n(function (w, d, undefined) {\n  'use strict';\n  /*\n   * aliases\n   * w: window global object\n   * d: document\n   * undefined: undefined\n   */\n  // polyfill\n\n  function polyfill() {\n    // return when scrollBehavior interface is supported\n    if ('scrollBehavior' in d.documentElement.style) {\n      return;\n    }\n    /*\n     * globals\n     */\n\n\n    var Element = w.HTMLElement || w.Element;\n    var SCROLL_TIME = 468;\n    /*\n     * object gathering original scroll methods\n     */\n\n    var original = {\n      scroll: w.scroll || w.scrollTo,\n      scrollBy: w.scrollBy,\n      elScroll: Element.prototype.scroll || scrollElement,\n      scrollIntoView: Element.prototype.scrollIntoView\n    };\n    /*\n     * define timing method\n     */\n\n    var now = w.performance && w.performance.now ? w.performance.now.bind(w.performance) : Date.now;\n    /**\n     * changes scroll position inside an element\n     * @method scrollElement\n     * @param {Number} x\n     * @param {Number} y\n     */\n\n    function scrollElement(x, y) {\n      this.scrollLeft = x;\n      this.scrollTop = y;\n    }\n    /**\n     * returns result of applying ease math function to a number\n     * @method ease\n     * @param {Number} k\n     * @returns {Number}\n     */\n\n\n    function ease(k) {\n      return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n    /**\n     * indicates if a smooth behavior should be applied\n     * @method shouldBailOut\n     * @param {Number|Object} x\n     * @returns {Boolean}\n     */\n\n\n    function shouldBailOut(x) {\n      if (typeof x !== 'object' || x === null || x.behavior === undefined || x.behavior === 'auto' || x.behavior === 'instant') {\n        // first arg not an object/null\n        // or behavior is auto, instant or undefined\n        return true;\n      }\n\n      if (typeof x === 'object' && x.behavior === 'smooth') {\n        // first argument is an object and behavior is smooth\n        return false;\n      } // throw error when behavior is not supported\n\n\n      throw new TypeError('behavior not valid');\n    }\n    /**\n     * finds scrollable parent of an element\n     * @method findScrollableParent\n     * @param {Node} el\n     * @returns {Node} el\n     */\n\n\n    function findScrollableParent(el) {\n      var isBody;\n      var hasScrollableSpace;\n      var hasVisibleOverflow;\n\n      do {\n        el = el.parentNode; // set condition variables\n\n        isBody = el === d.body;\n        hasScrollableSpace = el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth;\n        hasVisibleOverflow = w.getComputedStyle(el, null).overflow === 'visible';\n      } while (!isBody && !(hasScrollableSpace && !hasVisibleOverflow));\n\n      isBody = hasScrollableSpace = hasVisibleOverflow = null;\n      return el;\n    }\n    /**\n     * self invoked function that, given a context, steps through scrolling\n     * @method step\n     * @param {Object} context\n     */\n\n\n    function step(context) {\n      var time = now();\n      var value;\n      var currentX;\n      var currentY;\n      var elapsed = (time - context.startTime) / SCROLL_TIME; // avoid elapsed times higher than one\n\n      elapsed = elapsed > 1 ? 1 : elapsed; // apply easing to elapsed time\n\n      value = ease(elapsed);\n      currentX = context.startX + (context.x - context.startX) * value;\n      currentY = context.startY + (context.y - context.startY) * value;\n      context.method.call(context.scrollable, currentX, currentY); // scroll more if we have not reached our destination\n\n      if (currentX !== context.x || currentY !== context.y) {\n        w.requestAnimationFrame(step.bind(w, context));\n      }\n    }\n    /**\n     * scrolls window with a smooth behavior\n     * @method smoothScroll\n     * @param {Object|Node} el\n     * @param {Number} x\n     * @param {Number} y\n     */\n\n\n    function smoothScroll(el, x, y) {\n      var scrollable;\n      var startX;\n      var startY;\n      var method;\n      var startTime = now(); // define scroll context\n\n      if (el === d.body) {\n        scrollable = w;\n        startX = w.scrollX || w.pageXOffset;\n        startY = w.scrollY || w.pageYOffset;\n        method = original.scroll;\n      } else {\n        scrollable = el;\n        startX = el.scrollLeft;\n        startY = el.scrollTop;\n        method = scrollElement;\n      } // scroll looping over a frame\n\n\n      step({\n        scrollable: scrollable,\n        method: method,\n        startTime: startTime,\n        startX: startX,\n        startY: startY,\n        x: x,\n        y: y\n      });\n    }\n    /*\n     * ORIGINAL METHODS OVERRIDES\n     */\n    // w.scroll and w.scrollTo\n\n\n    w.scroll = w.scrollTo = function () {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scroll.call(w, arguments[0].left || arguments[0], arguments[0].top || arguments[1]);\n        return;\n      } // LET THE SMOOTHNESS BEGIN!\n\n\n      smoothScroll.call(w, d.body, ~~arguments[0].left, ~~arguments[0].top);\n    }; // w.scrollBy\n\n\n    w.scrollBy = function () {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scrollBy.call(w, arguments[0].left || arguments[0], arguments[0].top || arguments[1]);\n        return;\n      } // LET THE SMOOTHNESS BEGIN!\n\n\n      smoothScroll.call(w, d.body, ~~arguments[0].left + (w.scrollX || w.pageXOffset), ~~arguments[0].top + (w.scrollY || w.pageYOffset));\n    }; // Element.prototype.scroll and Element.prototype.scrollTo\n\n\n    Element.prototype.scroll = Element.prototype.scrollTo = function () {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.elScroll.call(this, arguments[0].left || arguments[0], arguments[0].top || arguments[1]);\n        return;\n      } // LET THE SMOOTHNESS BEGIN!\n\n\n      smoothScroll.call(this, this, arguments[0].left, arguments[0].top);\n    }; // Element.prototype.scrollBy\n\n\n    Element.prototype.scrollBy = function () {\n      var arg0 = arguments[0];\n\n      if (typeof arg0 === 'object') {\n        this.scroll({\n          left: arg0.left + this.scrollLeft,\n          top: arg0.top + this.scrollTop,\n          behavior: arg0.behavior\n        });\n      } else {\n        this.scroll(this.scrollLeft + arg0, this.scrollTop + arguments[1]);\n      }\n    }; // Element.prototype.scrollIntoView\n\n\n    Element.prototype.scrollIntoView = function () {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scrollIntoView.call(this, arguments[0] || true);\n        return;\n      } // LET THE SMOOTHNESS BEGIN!\n\n\n      var scrollableParent = findScrollableParent(this);\n      var parentRects = scrollableParent.getBoundingClientRect();\n      var clientRects = this.getBoundingClientRect();\n\n      if (scrollableParent !== d.body) {\n        // reveal element inside parent\n        smoothScroll.call(this, scrollableParent, scrollableParent.scrollLeft + clientRects.left - parentRects.left, scrollableParent.scrollTop + clientRects.top - parentRects.top); // reveal parent in viewport\n\n        w.scrollBy({\n          left: parentRects.left,\n          top: parentRects.top,\n          behavior: 'smooth'\n        });\n      } else {\n        const top = arguments[0].block === 'center' ? clientRects.top - clientRects.height : clientRects.top; // reveal element in viewport\n\n        w.scrollBy({\n          left: clientRects.left,\n          top: top,\n          behavior: 'smooth'\n        });\n      }\n    };\n  }\n\n  if (typeof exports === 'object') {\n    // commonjs\n    module.exports = {\n      polyfill: polyfill\n    };\n  } else {\n    // global\n    polyfill();\n  }\n})(window, document);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/util/Polyfill/index.js"],"names":["w","d","undefined","polyfill","documentElement","style","Element","HTMLElement","SCROLL_TIME","original","scroll","scrollTo","scrollBy","elScroll","prototype","scrollElement","scrollIntoView","now","performance","bind","Date","x","y","scrollLeft","scrollTop","ease","k","Math","cos","PI","shouldBailOut","behavior","TypeError","findScrollableParent","el","isBody","hasScrollableSpace","hasVisibleOverflow","parentNode","body","clientHeight","scrollHeight","clientWidth","scrollWidth","getComputedStyle","overflow","step","context","time","value","currentX","currentY","elapsed","startTime","startX","startY","method","call","scrollable","requestAnimationFrame","smoothScroll","scrollX","pageXOffset","scrollY","pageYOffset","arguments","left","top","arg0","scrollableParent","parentRects","getBoundingClientRect","clientRects","block","height","exports","module","window","document"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\n//smoothscroll.js file\n\n/*\n * smoothscroll polyfill - v0.3.5\n * https://iamdustan.github.io/smoothscroll\n * 2016 (c) Dustan Kasten, Jeremias Menichelli - MIT License\n */\n\n(function(w, d, undefined) {\n  'use strict';\n\n  /*\n   * aliases\n   * w: window global object\n   * d: document\n   * undefined: undefined\n   */\n\n  // polyfill\n  function polyfill() {\n    // return when scrollBehavior interface is supported\n    if ('scrollBehavior' in d.documentElement.style) {\n      return;\n    }\n\n    /*\n     * globals\n     */\n    var Element = w.HTMLElement || w.Element;\n    var SCROLL_TIME = 468;\n\n    /*\n     * object gathering original scroll methods\n     */\n    var original = {\n      scroll: w.scroll || w.scrollTo,\n      scrollBy: w.scrollBy,\n      elScroll: Element.prototype.scroll || scrollElement,\n      scrollIntoView: Element.prototype.scrollIntoView\n    };\n\n    /*\n     * define timing method\n     */\n    var now = w.performance && w.performance.now\n      ? w.performance.now.bind(w.performance) : Date.now;\n\n    /**\n     * changes scroll position inside an element\n     * @method scrollElement\n     * @param {Number} x\n     * @param {Number} y\n     */\n    function scrollElement(x, y) {\n      this.scrollLeft = x;\n      this.scrollTop = y;\n    }\n\n    /**\n     * returns result of applying ease math function to a number\n     * @method ease\n     * @param {Number} k\n     * @returns {Number}\n     */\n    function ease(k) {\n      return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n\n    /**\n     * indicates if a smooth behavior should be applied\n     * @method shouldBailOut\n     * @param {Number|Object} x\n     * @returns {Boolean}\n     */\n    function shouldBailOut(x) {\n      if (typeof x !== 'object'\n            || x === null\n            || x.behavior === undefined\n            || x.behavior === 'auto'\n            || x.behavior === 'instant') {\n        // first arg not an object/null\n        // or behavior is auto, instant or undefined\n        return true;\n      }\n\n      if (typeof x === 'object'\n            && x.behavior === 'smooth') {\n        // first argument is an object and behavior is smooth\n        return false;\n      }\n\n      // throw error when behavior is not supported\n      throw new TypeError('behavior not valid');\n    }\n\n    /**\n     * finds scrollable parent of an element\n     * @method findScrollableParent\n     * @param {Node} el\n     * @returns {Node} el\n     */\n    function findScrollableParent(el) {\n      var isBody;\n      var hasScrollableSpace;\n      var hasVisibleOverflow;\n\n      do {\n        el = el.parentNode;\n\n        // set condition variables\n        isBody = el === d.body;\n        hasScrollableSpace =\n          el.clientHeight < el.scrollHeight ||\n          el.clientWidth < el.scrollWidth;\n        hasVisibleOverflow =\n          w.getComputedStyle(el, null).overflow === 'visible';\n      } while (!isBody && !(hasScrollableSpace && !hasVisibleOverflow));\n\n      isBody = hasScrollableSpace = hasVisibleOverflow = null;\n\n      return el;\n    }\n\n    /**\n     * self invoked function that, given a context, steps through scrolling\n     * @method step\n     * @param {Object} context\n     */\n    function step(context) {\n      var time = now();\n      var value;\n      var currentX;\n      var currentY;\n      var elapsed = (time - context.startTime) / SCROLL_TIME;\n\n      // avoid elapsed times higher than one\n      elapsed = elapsed > 1 ? 1 : elapsed;\n\n      // apply easing to elapsed time\n      value = ease(elapsed);\n\n      currentX = context.startX + (context.x - context.startX) * value;\n      currentY = context.startY + (context.y - context.startY) * value;\n\n      context.method.call(context.scrollable, currentX, currentY);\n\n      // scroll more if we have not reached our destination\n      if (currentX !== context.x || currentY !== context.y) {\n        w.requestAnimationFrame(step.bind(w, context));\n      }\n    }\n\n    /**\n     * scrolls window with a smooth behavior\n     * @method smoothScroll\n     * @param {Object|Node} el\n     * @param {Number} x\n     * @param {Number} y\n     */\n    function smoothScroll(el, x, y) {\n      var scrollable;\n      var startX;\n      var startY;\n      var method;\n      var startTime = now();\n\n      // define scroll context\n      if (el === d.body) {\n        scrollable = w;\n        startX = w.scrollX || w.pageXOffset;\n        startY = w.scrollY || w.pageYOffset;\n        method = original.scroll;\n      } else {\n        scrollable = el;\n        startX = el.scrollLeft;\n        startY = el.scrollTop;\n        method = scrollElement;\n      }\n\n      // scroll looping over a frame\n      step({\n        scrollable: scrollable,\n        method: method,\n        startTime: startTime,\n        startX: startX,\n        startY: startY,\n        x: x,\n        y: y\n      });\n    }\n\n    /*\n     * ORIGINAL METHODS OVERRIDES\n     */\n\n    // w.scroll and w.scrollTo\n    w.scroll = w.scrollTo = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scroll.call(\n          w,\n          arguments[0].left || arguments[0],\n          arguments[0].top || arguments[1]\n        );\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        ~~arguments[0].left,\n        ~~arguments[0].top\n      );\n    };\n\n    // w.scrollBy\n    w.scrollBy = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scrollBy.call(\n          w,\n          arguments[0].left || arguments[0],\n          arguments[0].top || arguments[1]\n        );\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        ~~arguments[0].left + (w.scrollX || w.pageXOffset),\n        ~~arguments[0].top + (w.scrollY || w.pageYOffset)\n      );\n    };\n\n    // Element.prototype.scroll and Element.prototype.scrollTo\n    Element.prototype.scroll = Element.prototype.scrollTo = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.elScroll.call(\n            this,\n            arguments[0].left || arguments[0],\n            arguments[0].top || arguments[1]\n        );\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n          this,\n          this,\n          arguments[0].left,\n          arguments[0].top\n      );\n    };\n\n    // Element.prototype.scrollBy\n    Element.prototype.scrollBy = function() {\n      var arg0 = arguments[0];\n\n      if (typeof arg0 === 'object') {\n        this.scroll({\n          left: arg0.left + this.scrollLeft,\n          top: arg0.top + this.scrollTop,\n          behavior: arg0.behavior\n        });\n      } else {\n        this.scroll(\n          this.scrollLeft + arg0,\n          this.scrollTop + arguments[1]\n        );\n      }\n    };\n\n    // Element.prototype.scrollIntoView\n    Element.prototype.scrollIntoView = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scrollIntoView.call(this, arguments[0] || true);\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      var scrollableParent = findScrollableParent(this);\n      var parentRects = scrollableParent.getBoundingClientRect();\n      var clientRects = this.getBoundingClientRect();\n\n      if (scrollableParent !== d.body) {\n        // reveal element inside parent\n        smoothScroll.call(\n          this,\n          scrollableParent,\n          scrollableParent.scrollLeft + clientRects.left - parentRects.left,\n          scrollableParent.scrollTop + clientRects.top - parentRects.top\n        );\n        // reveal parent in viewport\n        w.scrollBy({\n          left: parentRects.left,\n          top: parentRects.top,\n          behavior: 'smooth'\n        });\n      } else {\n        const top = arguments[0].block === 'center'\n            ? clientRects.top - clientRects.height\n            : clientRects.top;\n\n        // reveal element in viewport\n        w.scrollBy({\n          left: clientRects.left,\n          top: top,\n          behavior: 'smooth'\n        });\n      }\n    };\n  }\n\n  if (typeof exports === 'object') {\n    // commonjs\n    module.exports = { polyfill: polyfill };\n  } else {\n    // global\n    polyfill();\n  }\n})(window, document);\n"]},"metadata":{},"sourceType":"module"}