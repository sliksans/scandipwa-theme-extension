{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/RenderWhenVisible/RenderWhenVisible.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport 'intersection-observer';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { InView } from 'react-intersection-observer';\nimport { ChildrenType } from \"/home/arturs/scandiweb/scandipwa/src/type/Common\";\nimport { isCrawler, isSSR } from \"/home/arturs/scandiweb/scandipwa/src/util/Browser\";\nimport \"./RenderWhenVisible.style\";\n/** #namespace Component/RenderWhenVisible/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const RenderWhenVisible = Mosaic.middleware((_temp = _class = class RenderWhenVisible_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      wasVisible: false\n    };\n\n    this.checkIsVisible = function () {\n      if (!_this.node) {\n        return;\n      }\n\n      const rect = _this.node.getBoundingClientRect();\n\n      const viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight);\n\n      if (!(rect.bottom < 0 || rect.top - viewHeight >= 0)) {\n        _this.setState({\n          wasVisible: true\n        });\n      }\n    };\n\n    this.handleVisibilityToggle = function (isVisible) {\n      const {\n        wasVisible\n      } = _this.state;\n\n      if (!wasVisible && isVisible) {\n        _this.setState({\n          wasVisible: true\n        });\n      }\n    };\n  }\n\n  __construct(props) {\n    super.__construct(props); // a hack to determine if the element is on screen or not imidiatelly\n\n\n    setTimeout(this.checkIsVisible, 0);\n  }\n\n  shouldRender() {\n    const {\n      wasVisible\n    } = this.state;\n    return !wasVisible && !isSSR() && !isCrawler();\n  }\n\n  renderFallback() {\n    const {\n      fallback\n    } = this.props;\n    const fallbackRender = fallback();\n\n    if (fallbackRender) {\n      return fallbackRender;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"RenderWhenVisible\",\n      elem: \"Detector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderVisibilitySensor() {\n    return /*#__PURE__*/_checkBEM(React, InView, {\n      onChange: this.handleVisibilityToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, this.renderFallback());\n  }\n\n  renderChildren() {\n    const {\n      children\n    } = this.props;\n    return children;\n  }\n\n  renderContent() {\n    if (this.shouldRender()) {\n      return this.renderVisibilitySensor();\n    }\n\n    return this.renderChildren();\n  }\n\n  render() {\n    var _this2 = this;\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"RenderWhenVisible\",\n      ref: function (node) {\n        _this2.node = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, this.renderContent());\n  }\n\n}, _class.propTypes = {\n  children: ChildrenType.isRequired,\n  fallback: PropTypes.func\n}, _class.defaultProps = {\n  fallback: function () {}\n}, _temp), \"Component/RenderWhenVisible/Component\");\nexport default RenderWhenVisible;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/RenderWhenVisible/RenderWhenVisible.component.js"],"names":["PropTypes","PureComponent","InView","ChildrenType","isCrawler","isSSR","state","wasVisible","checkIsVisible","node","rect","getBoundingClientRect","viewHeight","Math","max","document","documentElement","clientHeight","window","innerHeight","bottom","top","setState","handleVisibilityToggle","isVisible","__construct","props","setTimeout","shouldRender","renderFallback","fallback","fallbackRender","renderVisibilitySensor","renderChildren","children","renderContent","render","propTypes","isRequired","func","defaultProps","RenderWhenVisible"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport 'intersection-observer';\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { InView } from 'react-intersection-observer';\n\nimport { ChildrenType } from 'Type/Common';\nimport { isCrawler, isSSR } from 'Util/Browser';\n\nimport './RenderWhenVisible.style';\n\n/** @namespace Component/RenderWhenVisible/Component */\nexport class RenderWhenVisible extends PureComponent {\n    static propTypes = {\n        children: ChildrenType.isRequired,\n        fallback: PropTypes.func\n    };\n\n    static defaultProps = {\n        fallback: () => {}\n    };\n\n    state = {\n        wasVisible: false\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        // a hack to determine if the element is on screen or not imidiatelly\n        setTimeout(this.checkIsVisible, 0);\n    }\n\n    checkIsVisible = () => {\n        if (!this.node) {\n            return;\n        }\n\n        const rect = this.node.getBoundingClientRect();\n        const viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight);\n\n        if (!(rect.bottom < 0 || rect.top - viewHeight >= 0)) {\n            this.setState({ wasVisible: true });\n        }\n    };\n\n    shouldRender() {\n        const { wasVisible } = this.state;\n        return !wasVisible && !isSSR() && !isCrawler();\n    }\n\n    handleVisibilityToggle = (isVisible) => {\n        const { wasVisible } = this.state;\n\n        if (!wasVisible && isVisible) {\n            this.setState({ wasVisible: true });\n        }\n    };\n\n    renderFallback() {\n        const { fallback } = this.props;\n        const fallbackRender = fallback();\n\n        if (fallbackRender) {\n            return fallbackRender;\n        }\n\n        return (\n            <div block=\"RenderWhenVisible\" elem=\"Detector\" />\n        );\n    }\n\n    renderVisibilitySensor() {\n        return (\n            <InView onChange={ this.handleVisibilityToggle }>\n                { this.renderFallback() }\n            </InView>\n        );\n    }\n\n    renderChildren() {\n        const { children } = this.props;\n\n        return children;\n    }\n\n    renderContent() {\n        if (this.shouldRender()) {\n            return this.renderVisibilitySensor();\n        }\n\n        return this.renderChildren();\n    }\n\n    render() {\n        return (\n            <div\n              block=\"RenderWhenVisible\"\n              ref={ (node) => {\n                  this.node = node;\n              } }\n            >\n                { this.renderContent() }\n            </div>\n        );\n    }\n}\n\nexport default RenderWhenVisible;\n"]},"metadata":{},"sourceType":"module"}