{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { DEFAULT_STATE } from \"/home/arturs/scandiweb/extension/src/component/NavigationAbstract/NavigationAbstract.container\";\nimport { CHANGE_NAVIGATION_STATE, GOTO_PREVIOUS_NAVIGATION_STATE } from \"./Navigation.action\";\nexport const TOP_NAVIGATION_TYPE = 'TOP_NAVIGATION_TYPE';\nexport const BOTTOM_NAVIGATION_TYPE = 'BOTTOM_NAVIGATION_TYPE';\n/** #namespace Store/Navigation/Reducer/getInitialState */\n\nexport const getInitialState = Mosaic.middleware(function () {\n  return {\n    [TOP_NAVIGATION_TYPE]: {\n      navigationState: DEFAULT_STATE,\n      navigationStateHistory: [DEFAULT_STATE]\n    },\n    [BOTTOM_NAVIGATION_TYPE]: {\n      navigationState: DEFAULT_STATE,\n      navigationStateHistory: [DEFAULT_STATE]\n    }\n  };\n}, \"Store/Navigation/Reducer/getInitialState\");\n/** #namespace Store/Navigation/Reducer */\n\nexport const NavigationReducer = Mosaic.middleware(_c = function (state = getInitialState(), action) {\n  const {\n    navigationType,\n    navigationState\n  } = action;\n  const {\n    [navigationType]: {\n      navigationStateHistory,\n      navigationState: prevNavigationState\n    } = {}\n  } = state;\n\n  switch (action.type) {\n    case CHANGE_NAVIGATION_STATE:\n      const {\n        name: nextName,\n        force = false\n      } = navigationState;\n      const {\n        name: prevName\n      } = prevNavigationState;\n\n      if (nextName === prevName && !force) {\n        navigationStateHistory[navigationStateHistory.length - 1] = navigationState;\n      } else {\n        navigationStateHistory.push(navigationState);\n      }\n\n      return { ...state,\n        [navigationType]: {\n          navigationStateHistory,\n          navigationState\n        }\n      };\n\n    case GOTO_PREVIOUS_NAVIGATION_STATE:\n      navigationStateHistory.pop();\n      const newNavigationState = navigationStateHistory.slice(-1)[0];\n\n      if (!newNavigationState) {\n        return state;\n      }\n\n      return { ...state,\n        [navigationType]: {\n          navigationStateHistory,\n          navigationState: newNavigationState\n        }\n      };\n\n    default:\n      return state;\n  }\n}, \"Store/Navigation/Reducer\");\n_c2 = NavigationReducer;\nexport default NavigationReducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavigationReducer$\");\n$RefreshReg$(_c2, \"NavigationReducer\");","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/store/Navigation/Navigation.reducer.js"],"names":["DEFAULT_STATE","CHANGE_NAVIGATION_STATE","GOTO_PREVIOUS_NAVIGATION_STATE","TOP_NAVIGATION_TYPE","BOTTOM_NAVIGATION_TYPE","getInitialState","navigationState","navigationStateHistory","NavigationReducer","state","action","navigationType","prevNavigationState","type","name","nextName","force","prevName","length","push","pop","newNavigationState","slice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACIA,aADJ;AAIA,SACIC,uBADJ,EAEIC,8BAFJ;AAKA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP;;AACA,OAAO,MAAMC,eAAe,qBAAG;AAAA,SAAO;AAClC,KAACF,mBAAD,GAAuB;AACnBG,MAAAA,eAAe,EAAEN,aADE;AAEnBO,MAAAA,sBAAsB,EAAE,CAACP,aAAD;AAFL,KADW;AAKlC,KAACI,sBAAD,GAA0B;AACtBE,MAAAA,eAAe,EAAEN,aADK;AAEtBO,MAAAA,sBAAsB,EAAE,CAACP,aAAD;AAFF;AALQ,GAAP;AAAA,CAAH,6CAArB;AAWP;;AACA,OAAO,MAAMQ,iBAAiB,0BAAG,UAC7BC,KAAK,GAAGJ,eAAe,EADM,EAE7BK,MAF6B,EAG5B;AACD,QAAM;AAAEC,IAAAA,cAAF;AAAkBL,IAAAA;AAAlB,MAAsCI,MAA5C;AAEA,QAAM;AACF,KAACC,cAAD,GAAkB;AACdJ,MAAAA,sBADc;AAEdD,MAAAA,eAAe,EAAEM;AAFH,QAGd;AAJF,MAKFH,KALJ;;AAOA,UAAQC,MAAM,CAACG,IAAf;AACA,SAAKZ,uBAAL;AACI,YAAM;AAAEa,QAAAA,IAAI,EAAEC,QAAR;AAAkBC,QAAAA,KAAK,GAAG;AAA1B,UAAoCV,eAA1C;AACA,YAAM;AAAEQ,QAAAA,IAAI,EAAEG;AAAR,UAAqBL,mBAA3B;;AAEA,UAAIG,QAAQ,KAAKE,QAAb,IAAyB,CAACD,KAA9B,EAAqC;AACjCT,QAAAA,sBAAsB,CAACA,sBAAsB,CAACW,MAAvB,GAAgC,CAAjC,CAAtB,GAA4DZ,eAA5D;AACH,OAFD,MAEO;AACHC,QAAAA,sBAAsB,CAACY,IAAvB,CAA4Bb,eAA5B;AACH;;AAED,aAAO,EACH,GAAGG,KADA;AAEH,SAACE,cAAD,GAAkB;AACdJ,UAAAA,sBADc;AAEdD,UAAAA;AAFc;AAFf,OAAP;;AAQJ,SAAKJ,8BAAL;AACIK,MAAAA,sBAAsB,CAACa,GAAvB;AACA,YAAMC,kBAAkB,GAAGd,sBAAsB,CAACe,KAAvB,CAA6B,CAAC,CAA9B,EAAiC,CAAjC,CAA3B;;AAEA,UAAI,CAACD,kBAAL,EAAyB;AACrB,eAAOZ,KAAP;AACH;;AAED,aAAO,EACH,GAAGA,KADA;AAEH,SAACE,cAAD,GAAkB;AACdJ,UAAAA,sBADc;AAEdD,UAAAA,eAAe,EAAEe;AAFH;AAFf,OAAP;;AAQJ;AACI,aAAOZ,KAAP;AApCJ;AAsCH,CAnD6B,6BAAvB;MAAMD,iB;AAqDb,eAAeA,iBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport {\n    DEFAULT_STATE\n} from 'Component/NavigationAbstract/NavigationAbstract.container';\n\nimport {\n    CHANGE_NAVIGATION_STATE,\n    GOTO_PREVIOUS_NAVIGATION_STATE\n} from './Navigation.action';\n\nexport const TOP_NAVIGATION_TYPE = 'TOP_NAVIGATION_TYPE';\nexport const BOTTOM_NAVIGATION_TYPE = 'BOTTOM_NAVIGATION_TYPE';\n\n/** @namespace Store/Navigation/Reducer/getInitialState */\nexport const getInitialState = () => ({\n    [TOP_NAVIGATION_TYPE]: {\n        navigationState: DEFAULT_STATE,\n        navigationStateHistory: [DEFAULT_STATE]\n    },\n    [BOTTOM_NAVIGATION_TYPE]: {\n        navigationState: DEFAULT_STATE,\n        navigationStateHistory: [DEFAULT_STATE]\n    }\n});\n\n/** @namespace Store/Navigation/Reducer */\nexport const NavigationReducer = (\n    state = getInitialState(),\n    action\n) => {\n    const { navigationType, navigationState } = action;\n\n    const {\n        [navigationType]: {\n            navigationStateHistory,\n            navigationState: prevNavigationState\n        } = {}\n    } = state;\n\n    switch (action.type) {\n    case CHANGE_NAVIGATION_STATE:\n        const { name: nextName, force = false } = navigationState;\n        const { name: prevName } = prevNavigationState;\n\n        if (nextName === prevName && !force) {\n            navigationStateHistory[navigationStateHistory.length - 1] = navigationState;\n        } else {\n            navigationStateHistory.push(navigationState);\n        }\n\n        return {\n            ...state,\n            [navigationType]: {\n                navigationStateHistory,\n                navigationState\n            }\n        };\n\n    case GOTO_PREVIOUS_NAVIGATION_STATE:\n        navigationStateHistory.pop();\n        const newNavigationState = navigationStateHistory.slice(-1)[0];\n\n        if (!newNavigationState) {\n            return state;\n        }\n\n        return {\n            ...state,\n            [navigationType]: {\n                navigationStateHistory,\n                navigationState: newNavigationState\n            }\n        };\n\n    default:\n        return state;\n    }\n};\n\nexport default NavigationReducer;\n"]},"metadata":{},"sourceType":"module"}