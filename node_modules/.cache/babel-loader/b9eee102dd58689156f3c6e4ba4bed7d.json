{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductAttributes/ProductAttributes.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { Fragment, PureComponent } from 'react';\nimport ContentWrapper from \"/home/arturs/scandiweb/scandipwa/src/component/ContentWrapper\";\nimport ExpandableContent from \"/home/arturs/scandiweb/scandipwa/src/component/ExpandableContent\";\nimport ProductAttributeValue from \"/home/arturs/scandiweb/scandipwa/src/component/ProductAttributeValue\";\nimport { AttributeType } from \"/home/arturs/scandiweb/scandipwa/src/type/ProductList\";\nimport \"./ProductAttributes.style\";\n/** #namespace Component/ProductAttributes/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductAttributes = Mosaic.middleware((_temp = _class = class ProductAttributes_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.renderAttribute = function (attribute) {\n      return /*#__PURE__*/_checkBEM(React, Fragment, {\n        key: attribute.attribute_label,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/_checkBEM(React, \"dt\", {\n        block: \"ProductAttributes\",\n        elem: \"AttributeLabel\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, attribute.attribute_label), /*#__PURE__*/_checkBEM(React, \"dd\", {\n        block: \"ProductAttributes\",\n        elem: \"ValueLabel\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/_checkBEM(React, ProductAttributeValue, {\n        key: attribute.attribute_label,\n        attribute: attribute,\n        isFormattedAsText: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      })));\n    };\n  }\n\n  renderGroups() {\n    var _this2 = this;\n\n    const {\n      attributesWithValues\n    } = this.props;\n    const groups = Object.values(attributesWithValues).map(function (attribute) {\n      return {\n        attribute_group_id: attribute.attribute_group_id,\n        attribute_group_name: attribute.attribute_group_name,\n        attribute_group_code: attribute.attribute_group_code\n      };\n    });\n    const uniqueGroups = groups.filter(function (group, index, array) {\n      return index === array.findIndex(function (g) {\n        return g.attribute_group_id === group.attribute_group_id;\n      });\n    });\n    return uniqueGroups.map(function (group) {\n      return /*#__PURE__*/_checkBEM(React, Fragment, {\n        key: group.attribute_group_id,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/_checkBEM(React, \"p\", {\n        block: \"ProductAttributes\",\n        elem: \"Group\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, group.attribute_group_name), _this2.renderAttributes(group.attribute_group_id));\n    });\n  }\n\n  renderAttributes(attribute_group_id) {\n    const {\n      attributesWithValues\n    } = this.props;\n\n    if (!Object.keys(attributesWithValues).length) {\n      return null;\n    }\n\n    const filteredAttributesWithValues = Object.values(attributesWithValues).filter(function (attribute) {\n      return attribute.attribute_group_id === attribute_group_id;\n    });\n\n    if (!filteredAttributesWithValues.length) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"dl\", {\n      block: \"ProductAttributes\",\n      elem: \"Attributes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, filteredAttributesWithValues.map(this.renderAttribute));\n  }\n\n  renderContent() {\n    const {\n      areDetailsLoaded\n    } = this.props;\n    const heading = areDetailsLoaded ? __('Product attributes') : '';\n    return /*#__PURE__*/_checkBEM(React, ExpandableContent // show placeholder if the details are not loaded\n    , {\n      heading: heading,\n      mix: {\n        block: 'ProductAttributes',\n        elem: 'Content'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, this.renderGroups()));\n  }\n\n  render() {\n    const {\n      areDetailsLoaded\n    } = this.props;\n\n    if (!areDetailsLoaded) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, ContentWrapper, {\n      label: \"Product attributes\",\n      mix: {\n        block: 'ProductAttributes'\n      },\n      wrapperMix: {\n        block: 'ProductAttributes',\n        elem: 'Wrapper'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, this.renderContent());\n  }\n\n}, _class.propTypes = {\n  areDetailsLoaded: PropTypes.bool.isRequired,\n  attributesWithValues: AttributeType.isRequired\n}, _temp), \"Component/ProductAttributes/Component\");\nexport default ProductAttributes;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductAttributes/ProductAttributes.component.js"],"names":["PropTypes","Fragment","PureComponent","ContentWrapper","ExpandableContent","ProductAttributeValue","AttributeType","renderAttribute","attribute","attribute_label","renderGroups","attributesWithValues","props","groups","Object","values","map","attribute_group_id","attribute_group_name","attribute_group_code","uniqueGroups","filter","group","index","array","findIndex","g","renderAttributes","keys","length","filteredAttributesWithValues","renderContent","areDetailsLoaded","heading","__","block","elem","render","propTypes","bool","isRequired","ProductAttributes"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { Fragment, PureComponent } from 'react';\n\nimport ContentWrapper from 'Component/ContentWrapper';\nimport ExpandableContent from 'Component/ExpandableContent';\nimport ProductAttributeValue from 'Component/ProductAttributeValue';\nimport { AttributeType } from 'Type/ProductList';\n\nimport './ProductAttributes.style';\n\n/** @namespace Component/ProductAttributes/Component */\nexport class ProductAttributes extends PureComponent {\n    static propTypes = {\n        areDetailsLoaded: PropTypes.bool.isRequired,\n        attributesWithValues: AttributeType.isRequired\n    };\n\n    renderGroups() {\n        const { attributesWithValues } = this.props;\n\n        const groups = Object.values(attributesWithValues).map(\n            (attribute) => ({\n                attribute_group_id: attribute.attribute_group_id,\n                attribute_group_name: attribute.attribute_group_name,\n                attribute_group_code: attribute.attribute_group_code\n            })\n        );\n\n        const uniqueGroups = groups.filter(\n            (group, index, array) => (\n                index === array.findIndex((g) => g.attribute_group_id === group.attribute_group_id)\n            )\n        );\n\n        return (\n            uniqueGroups.map(\n                (group) => (\n<Fragment key={ group.attribute_group_id }>\n                    <p block=\"ProductAttributes\" elem=\"Group\">\n                        { group.attribute_group_name }\n                    </p>\n                    { this.renderAttributes(group.attribute_group_id) }\n</Fragment>\n                )\n            )\n        );\n    }\n\n    renderAttribute = (attribute) => (\n        <Fragment key={ attribute.attribute_label }>\n            <dt block=\"ProductAttributes\" elem=\"AttributeLabel\">\n                { attribute.attribute_label }\n            </dt>\n            <dd block=\"ProductAttributes\" elem=\"ValueLabel\">\n                <ProductAttributeValue\n                  key={ attribute.attribute_label }\n                  attribute={ attribute }\n                  isFormattedAsText\n                />\n            </dd>\n        </Fragment>\n    );\n\n    renderAttributes(attribute_group_id) {\n        const { attributesWithValues } = this.props;\n\n        if (!Object.keys(attributesWithValues).length) {\n            return null;\n        }\n\n        const filteredAttributesWithValues = Object.values(attributesWithValues).filter(\n            (attribute) => attribute.attribute_group_id === attribute_group_id\n        );\n\n        if (!filteredAttributesWithValues.length) {\n            return null;\n        }\n\n        return (\n            <dl block=\"ProductAttributes\" elem=\"Attributes\">\n                { filteredAttributesWithValues.map(this.renderAttribute) }\n            </dl>\n        );\n    }\n\n    renderContent() {\n        const { areDetailsLoaded } = this.props;\n        const heading = areDetailsLoaded ? __('Product attributes') : '';\n\n        return (\n            <ExpandableContent\n              // show placeholder if the details are not loaded\n              heading={ heading }\n              mix={ { block: 'ProductAttributes', elem: 'Content' } }\n            >\n                <div>\n                    { this.renderGroups() }\n                </div>\n            </ExpandableContent>\n        );\n    }\n\n    render() {\n        const {\n            areDetailsLoaded\n        } = this.props;\n\n        if (!areDetailsLoaded) {\n            return null;\n        }\n\n        return (\n            <ContentWrapper\n              label=\"Product attributes\"\n              mix={ { block: 'ProductAttributes' } }\n              wrapperMix={ { block: 'ProductAttributes', elem: 'Wrapper' } }\n            >\n                { this.renderContent() }\n            </ContentWrapper>\n        );\n    }\n}\n\nexport default ProductAttributes;\n"]},"metadata":{},"sourceType":"module"}