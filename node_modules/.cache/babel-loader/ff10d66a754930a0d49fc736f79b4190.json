{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductConfigurableAttributeDropdown/ProductConfigurableAttributeDropdown.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport Field from \"/home/arturs/scandiweb/scandipwa/src/component/Field\";\nimport \"./ProductConfigurableAttributeDropdown.style\";\n/** #namespace Component/ProductConfigurableAttributeDropdown/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductConfigurableAttributeDropdown = Mosaic.middleware((_temp = _class = class ProductConfigurableAttributeDropdown_ extends Mosaic.Extensible(PureComponent) {\n  render() {\n    const {\n      selectOptions,\n      selectValue,\n      selectName,\n      selectLabel,\n      onChange\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, Field, {\n      id: selectName,\n      name: selectName,\n      type: \"select\",\n      placeholder: __('Choose %s', selectLabel.toLowerCase()),\n      mix: {\n        block: 'ProductConfigurableAttributeDropdown'\n      },\n      selectOptions: selectOptions,\n      value: selectValue,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    });\n  }\n\n}, _class.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  selectOptions: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    id: PropTypes.string,\n    value: PropTypes.string\n  })).isRequired,\n  selectValue: PropTypes.string,\n  selectLabel: PropTypes.string,\n  selectName: PropTypes.string.isRequired\n}, _class.defaultProps = {\n  selectValue: '',\n  selectLabel: 'attribute'\n}, _temp), \"Component/ProductConfigurableAttributeDropdown/Component\");\nexport default ProductConfigurableAttributeDropdown;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/ProductConfigurableAttributeDropdown/ProductConfigurableAttributeDropdown.component.js"],"names":["PropTypes","PureComponent","Field","render","selectOptions","selectValue","selectName","selectLabel","onChange","props","__","toLowerCase","block","propTypes","func","isRequired","arrayOf","shape","label","string","id","value","defaultProps","ProductConfigurableAttributeDropdown"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,KAAP;AAEA;AAEA;;;;AACA,8JAA0DD,aAA1D,EAAwE;AAkBpEE,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,aADE;AAEFC,MAAAA,WAFE;AAGFC,MAAAA,UAHE;AAIFC,MAAAA,WAJE;AAKFC,MAAAA;AALE,QAMF,KAAKC,KANT;AAQA,yCACK,KADL;AAEM,MAAA,EAAE,EAAGH,UAFX;AAGM,MAAA,IAAI,EAAGA,UAHb;AAIM,MAAA,IAAI,EAAC,QAJX;AAKM,MAAA,WAAW,EAAGI,EAAE,CAAC,WAAD,EAAcH,WAAW,CAACI,WAAZ,EAAd,CALtB;AAMM,MAAA,GAAG,EAAG;AAAEC,QAAAA,KAAK,EAAE;AAAT,OANZ;AAOM,MAAA,aAAa,EAAGR,aAPtB;AAQM,MAAA,KAAK,EAAGC,WARd;AASM,MAAA,QAAQ,EAAGG,QATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYH;;AAvCmE,CAAxE,SACWK,SADX,GACuB;AACfL,EAAAA,QAAQ,EAAER,SAAS,CAACc,IAAV,CAAeC,UADV;AAEfX,EAAAA,aAAa,EAAEJ,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,KAAV,CAAgB;AAC7CC,IAAAA,KAAK,EAAElB,SAAS,CAACmB,MAD4B;AAE7CC,IAAAA,EAAE,EAAEpB,SAAS,CAACmB,MAF+B;AAG7CE,IAAAA,KAAK,EAAErB,SAAS,CAACmB;AAH4B,GAAhB,CAAlB,EAIXJ,UANW;AAOfV,EAAAA,WAAW,EAAEL,SAAS,CAACmB,MAPR;AAQfZ,EAAAA,WAAW,EAAEP,SAAS,CAACmB,MARR;AASfb,EAAAA,UAAU,EAAEN,SAAS,CAACmB,MAAV,CAAiBJ;AATd,CADvB,SAaWO,YAbX,GAa0B;AAClBjB,EAAAA,WAAW,EAAE,EADK;AAElBE,EAAAA,WAAW,EAAE;AAFK,CAb1B;AA0CA,eAAegB,oCAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Field from 'Component/Field';\n\nimport './ProductConfigurableAttributeDropdown.style';\n\n/** @namespace Component/ProductConfigurableAttributeDropdown/Component */\nexport class ProductConfigurableAttributeDropdown extends PureComponent {\n    static propTypes = {\n        onChange: PropTypes.func.isRequired,\n        selectOptions: PropTypes.arrayOf(PropTypes.shape({\n            label: PropTypes.string,\n            id: PropTypes.string,\n            value: PropTypes.string\n        })).isRequired,\n        selectValue: PropTypes.string,\n        selectLabel: PropTypes.string,\n        selectName: PropTypes.string.isRequired\n    };\n\n    static defaultProps = {\n        selectValue: '',\n        selectLabel: 'attribute'\n    };\n\n    render() {\n        const {\n            selectOptions,\n            selectValue,\n            selectName,\n            selectLabel,\n            onChange\n        } = this.props;\n\n        return (\n            <Field\n              id={ selectName }\n              name={ selectName }\n              type=\"select\"\n              placeholder={ __('Choose %s', selectLabel.toLowerCase()) }\n              mix={ { block: 'ProductConfigurableAttributeDropdown' } }\n              selectOptions={ selectOptions }\n              value={ selectValue }\n              onChange={ onChange }\n            />\n        );\n    }\n}\n\nexport default ProductConfigurableAttributeDropdown;\n"]},"metadata":{},"sourceType":"module"}