{"ast":null,"code":"var _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/Klarna/Klarna.container.js\";\n\n/* eslint-disable no-undef */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { showNotification } from \"/home/arturs/scandiweb/extension/src/store/Notification/Notification.action\";\nimport KlarnaComponent from \"./Klarna.component\";\n/** #namespace Component/Klarna/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    showError: function (message) {\n      return dispatch(showNotification('error', message));\n    }\n  };\n}, \"Component/Klarna/Container/mapDispatchToProps\");\n/** #namespace Component/Klarna/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const KlarnaContainer = Mosaic.middleware(class KlarnaContainer_ extends Mosaic.Extensible(PureComponent) {\n  static authorize() {\n    return new Promise(function (resolve, reject) {\n      window.Klarna.Payments.authorize({\n        payment_method_category: localStorage.getItem('kl_pm')\n      }, {}, function (res) {\n        const {\n          error,\n          approved,\n          authorization_token\n        } = res;\n\n        if (!approved) {\n          reject(error);\n        }\n\n        resolve({\n          authorization_token\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, KlarnaComponent, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}, \"Component/Klarna/Container\");\n/** #namespace Component/Klarna/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {};\n}, \"Component/Klarna/Container/mapStateToProps\");\nexport default connect(mapStateToProps, mapDispatchToProps)(KlarnaContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/Klarna/Klarna.container.js"],"names":["PureComponent","connect","showNotification","KlarnaComponent","mapDispatchToProps","dispatch","showError","message","authorize","Promise","resolve","reject","window","Klarna","Payments","payment_method_category","localStorage","getItem","res","error","approved","authorization_token","render","props","mapStateToProps","state","KlarnaContainer"],"mappings":";;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT;AAEA,OAAOC,eAAP;AAEA;;AACA,OAAO,MAAMC,kBAAkB,qBAAG,UAACC,QAAD;AAAA,SAAe;AAC7CC,IAAAA,SAAS,EAAE,UAACC,OAAD;AAAA,aAAaF,QAAQ,CAACH,gBAAgB,CAAC,OAAD,EAAUK,OAAV,CAAjB,CAArB;AAAA;AADkC,GAAf;AAAA,CAAH,kDAAxB;AAIP;;;;AACA,kGAAqCP,aAArC,EAAmD;AAC/B,SAATQ,SAAS,GAAG;AACf,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,MAAAA,MAAM,CAACC,MAAP,CAAcC,QAAd,CAAuBN,SAAvB,CACI;AAAEO,QAAAA,uBAAuB,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAA3B,OADJ,EAEI,EAFJ,EAGI,UAACC,GAAD,EAAS;AACL,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA,QAAT;AAAmBC,UAAAA;AAAnB,YAA2CH,GAAjD;;AACA,YAAI,CAACE,QAAL,EAAe;AACXT,UAAAA,MAAM,CAACQ,KAAD,CAAN;AACH;;AAEDT,QAAAA,OAAO,CAAC;AAAEW,UAAAA;AAAF,SAAD,CAAP;AACH,OAVL;AAYH,KAbM,CAAP;AAcH;;AAEDC,EAAAA,MAAM,GAAG;AACL,yCAAQ,eAAR,oBAA6B,KAAKC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AApB8C,CAAnD;AAuBA;AACA;;AACA,OAAO,MAAMC,eAAe,qBAAG,UAACC,KAAD;AAAA,SAAY,EAAZ;AAAA,CAAH,+CAArB;AAEP,eAAexB,OAAO,CAACuB,eAAD,EAAkBpB,kBAAlB,CAAP,CAA6CsB,eAA7C,CAAf","sourcesContent":["/* eslint-disable no-undef */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { showNotification } from 'Store/Notification/Notification.action';\n\nimport KlarnaComponent from './Klarna.component';\n\n/** @namespace Component/Klarna/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showError: (message) => dispatch(showNotification('error', message))\n});\n\n/** @namespace Component/Klarna/Container */\nexport class KlarnaContainer extends PureComponent {\n    static authorize() {\n        return new Promise((resolve, reject) => {\n            window.Klarna.Payments.authorize(\n                { payment_method_category: localStorage.getItem('kl_pm') },\n                {},\n                (res) => {\n                    const { error, approved, authorization_token } = res;\n                    if (!approved) {\n                        reject(error);\n                    }\n\n                    resolve({ authorization_token });\n                }\n            );\n        });\n    }\n\n    render() {\n        return <KlarnaComponent { ...this.props } />;\n    }\n}\n\n/** @namespace Component/Klarna/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KlarnaContainer);\n"]},"metadata":{},"sourceType":"module"}