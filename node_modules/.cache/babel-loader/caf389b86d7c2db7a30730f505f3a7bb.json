{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountForgotPassword/MyAccountForgotPassword.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { STATE_FORGOT_PASSWORD_SUCCESS } from \"/home/arturs/scandiweb/scandipwa/src/component/MyAccountOverlay/MyAccountOverlay.config\";\nimport { signInStateType } from \"/home/arturs/scandiweb/scandipwa/src/type/Account\";\nimport MyAccountForgotPassword from \"./MyAccountForgotPassword.component\";\nexport const MyAccountDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/scandipwa/src/store/MyAccount/MyAccount.dispatcher\");\n/** #namespace Component/MyAccountForgotPassword/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {};\n}, \"Component/MyAccountForgotPassword/Container/mapStateToProps\");\n/** #namespace Component/MyAccountForgotPassword/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    forgotPassword: function (options) {\n      return MyAccountDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.forgotPassword(options, dispatch);\n      });\n    }\n  };\n}, \"Component/MyAccountForgotPassword/Container/mapDispatchToProps\");\n/** #namespace Component/MyAccountForgotPassword/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountForgotPasswordContainer = Mosaic.middleware((_temp = _class = class MyAccountForgotPasswordContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.containerFunctions = {\n      onForgotPasswordAttempt: this.onForgotPasswordAttempt.bind(this),\n      onForgotPasswordSuccess: this.onForgotPasswordSuccess.bind(this)\n    };\n\n    this.containerProps = function () {\n      const {\n        state,\n        onFormError,\n        handleSignIn,\n        handleCreateAccount,\n        isCheckout\n      } = _this.props;\n      return {\n        state,\n        onFormError,\n        handleSignIn,\n        handleCreateAccount,\n        isCheckout\n      };\n    };\n  }\n\n  onForgotPasswordAttempt() {\n    const {\n      setLoadingState\n    } = this.props;\n    setLoadingState(true);\n  }\n\n  onForgotPasswordSuccess(fields) {\n    const {\n      forgotPassword,\n      setSignInState,\n      setLoadingState\n    } = this.props;\n    forgotPassword(fields).then(\n    /** #namespace Component/MyAccountOverlay/Container/forgotPasswordThen */\n    Mosaic.middleware(function () {\n      setSignInState(STATE_FORGOT_PASSWORD_SUCCESS);\n      setLoadingState(false);\n    }, \"Component/MyAccountOverlay/Container/forgotPasswordThen\"),\n    /** #namespace Component/MyAccountForgotPassword/Container/forgotPasswordThen */\n    Mosaic.middleware(function () {\n      return setLoadingState(false);\n    }, \"Component/MyAccountForgotPassword/Container/forgotPasswordThen\"));\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, MyAccountForgotPassword, Object.assign({}, this.containerFunctions, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  state: signInStateType.isRequired,\n  onFormError: PropTypes.func.isRequired,\n  handleSignIn: PropTypes.func.isRequired,\n  handleCreateAccount: PropTypes.func.isRequired,\n  isCheckout: PropTypes.bool.isRequired,\n  forgotPassword: PropTypes.func.isRequired,\n  setLoadingState: PropTypes.func.isRequired,\n  setSignInState: PropTypes.func.isRequired\n}, _temp), \"Component/MyAccountForgotPassword/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountForgotPasswordContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountForgotPassword/MyAccountForgotPassword.container.js"],"names":["PropTypes","PureComponent","connect","STATE_FORGOT_PASSWORD_SUCCESS","signInStateType","MyAccountForgotPassword","MyAccountDispatcher","mapStateToProps","state","mapDispatchToProps","dispatch","forgotPassword","options","then","default","dispatcher","containerFunctions","onForgotPasswordAttempt","bind","onForgotPasswordSuccess","containerProps","onFormError","handleSignIn","handleCreateAccount","isCheckout","props","setLoadingState","fields","setSignInState","render","propTypes","isRequired","func","bool","MyAccountForgotPasswordContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { STATE_FORGOT_PASSWORD_SUCCESS } from 'Component/MyAccountOverlay/MyAccountOverlay.config';\nimport { signInStateType } from 'Type/Account';\n\nimport MyAccountForgotPassword from './MyAccountForgotPassword.component';\n\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Component/MyAccountForgotPassword/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = (state) => ({});\n\n/** @namespace Component/MyAccountForgotPassword/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({\n    forgotPassword: (options) => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.forgotPassword(options, dispatch)\n    )\n});\n\n/** @namespace Component/MyAccountForgotPassword/Container */\nexport class MyAccountForgotPasswordContainer extends PureComponent {\n    static propTypes = {\n        state: signInStateType.isRequired,\n        onFormError: PropTypes.func.isRequired,\n        handleSignIn: PropTypes.func.isRequired,\n        handleCreateAccount: PropTypes.func.isRequired,\n        isCheckout: PropTypes.bool.isRequired,\n        forgotPassword: PropTypes.func.isRequired,\n        setLoadingState: PropTypes.func.isRequired,\n        setSignInState: PropTypes.func.isRequired\n    };\n\n    containerFunctions = {\n        onForgotPasswordAttempt: this.onForgotPasswordAttempt.bind(this),\n        onForgotPasswordSuccess: this.onForgotPasswordSuccess.bind(this)\n    };\n\n    containerProps = () => {\n        const {\n            state,\n            onFormError,\n            handleSignIn,\n            handleCreateAccount,\n            isCheckout\n        } = this.props;\n\n        return {\n            state,\n            onFormError,\n            handleSignIn,\n            handleCreateAccount,\n            isCheckout\n        };\n    };\n\n    onForgotPasswordAttempt() {\n        const { setLoadingState } = this.props;\n        setLoadingState(true);\n    }\n\n    onForgotPasswordSuccess(fields) {\n        const { forgotPassword, setSignInState, setLoadingState } = this.props;\n\n        forgotPassword(fields).then(\n            /** @namespace Component/MyAccountOverlay/Container/forgotPasswordThen */\n            () => {\n                setSignInState(STATE_FORGOT_PASSWORD_SUCCESS);\n                setLoadingState(false);\n            },\n            /** @namespace Component/MyAccountForgotPassword/Container/forgotPasswordThen */\n            () => setLoadingState(false)\n        );\n    }\n\n    render() {\n        return (\n            <MyAccountForgotPassword\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountForgotPasswordContainer);\n"]},"metadata":{},"sourceType":"module"}