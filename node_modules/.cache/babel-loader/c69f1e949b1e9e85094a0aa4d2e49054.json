{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/Html/Html.component.js\";\n\n/* eslint-disable react/jsx-no-useless-fragment */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/* eslint-disable consistent-return */\n// Disabled due `domToReact` internal logic\nimport parser from 'html-react-parser';\nimport attributesToProps from 'html-react-parser/lib/attributes-to-props';\nimport domToReact from 'html-react-parser/lib/dom-to-react';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport Image from \"/home/arturs/scandiweb/extension/src/component/Image\";\nimport Link from \"/home/arturs/scandiweb/extension/src/component/Link\";\nimport WidgetFactory from \"/home/arturs/scandiweb/extension/src/component/WidgetFactory\";\nimport { hash } from \"/home/arturs/scandiweb/extension/src/util/Request/Hash\";\n/**\n * Html content parser\n * Component converts HTML strings to React components\n * @class Html\n * #namespace Component/Html/Component\n */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const Html = Mosaic.middleware((_temp = _class = class Html_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.createdOutsideElements = {};\n    this.rules = [{\n      query: {\n        name: ['widget']\n      },\n      replace: this.replaceWidget\n    }, {\n      query: {\n        name: ['a']\n      },\n      replace: this.replaceLinks\n    }, {\n      query: {\n        name: ['img']\n      },\n      replace: this.replaceImages\n    }, {\n      query: {\n        name: ['input']\n      },\n      replace: this.replaceInput\n    }, {\n      query: {\n        name: ['script']\n      },\n      replace: this.replaceScript\n    }, {\n      query: {\n        name: ['style']\n      },\n      replace: this.replaceStyle\n    }, {\n      query: {\n        name: ['table']\n      },\n      replace: this.wrapTable\n    }];\n    this.parserOptions = {\n      replace: function (domNode) {\n        const {\n          data,\n          name: domName,\n          attribs: domAttrs\n        } = domNode; // Let's remove empty text nodes\n\n        if (data && !data.replace(/\\u21b5/g, '').replace(/\\s/g, '').length) {\n          return /*#__PURE__*/_checkBEM(React, React.Fragment, null);\n        }\n\n        const rule = _this.rules.find(function (rule) {\n          const {\n            query: {\n              name,\n              attribs\n            }\n          } = rule;\n\n          if (name && domName && name.indexOf(domName) !== -1) {\n            return true;\n          }\n\n          if (attribs && domAttrs) {\n            // eslint-disable-next-line fp/no-loops, fp/no-let\n            for (let i = 0; i < attribs.length; i++) {\n              const attrib = attribs[i];\n\n              if (typeof attrib === 'object') {\n                const queryAttrib = Object.keys(attrib)[0];\n\n                if (Object.prototype.hasOwnProperty.call(domAttrs, queryAttrib)) {\n                  return domAttrs[queryAttrib].match(Object.values(attrib)[0]);\n                }\n              } else if (Object.prototype.hasOwnProperty.call(domAttrs, attrib)) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        });\n\n        if (rule) {\n          const {\n            replace\n          } = rule;\n          return replace.call(_this, domNode);\n        }\n      }\n    };\n  }\n\n  attributesToProps(attribs) {\n    const toCamelCase = function (string) {\n      return string.replace(/_[a-z]/g, function (match) {\n        return match.substr(1).toUpperCase();\n      });\n    };\n\n    const convertPropertiesToValidFormat = function (properties) {\n      return Object.entries(properties).reduce(function (validProps, [key, value]) {\n        // eslint-disable-next-line no-restricted-globals\n        if (!isNaN(value)) {\n          return { ...validProps,\n            [toCamelCase(key)]: +value\n          };\n        }\n\n        return { ...validProps,\n          [toCamelCase(key)]: value\n        };\n      }, {});\n    };\n\n    const properties = convertPropertiesToValidFormat(attribs);\n    return attributesToProps(properties);\n  }\n  /**\n   * Replace links to native React Router links\n   * @param  {{ attribs: Object, children: Array }}\n   * @return {void|JSX} Return JSX if link is allowed to be replaced\n   * @memberof Html\n   */\n\n\n  replaceLinks({\n    attribs,\n    children\n  }) {\n    const {\n      href,\n      ...attrs\n    } = attribs;\n\n    if (href) {\n      const isAbsoluteUrl = function (value) {\n        return new RegExp('^(?:[a-z]+:)?//', 'i').test(value);\n      };\n\n      const isSpecialLink = function (value) {\n        return new RegExp('^(sms|tel|mailto):', 'i').test(value);\n      };\n\n      if (!isAbsoluteUrl(href) && !isSpecialLink(href)) {\n        return /*#__PURE__*/_checkBEM(React, Link, Object.assign({}, attributesToProps({ ...attrs,\n          to: href\n        }), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }\n        }), domToReact(children, this.parserOptions));\n      }\n    }\n  }\n  /**\n   * Replace img to React Images\n   * @param  {{ attribs: Object }}\n   * @return {void|JSX} Return JSX with image\n   * @memberof Html\n   */\n\n\n  replaceImages({\n    attribs\n  }) {\n    const attributes = attributesToProps(attribs);\n\n    if (attribs.src) {\n      return /*#__PURE__*/_checkBEM(React, Image, Object.assign({}, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 20\n        }\n      }));\n    }\n  }\n  /**\n   * Replace input.\n   * @param  {{ attribs: Object }}\n   * @return {void|JSX} Return JSX with image\n   * @memberof Html\n   */\n\n\n  replaceInput({\n    attribs\n  }) {\n    return /*#__PURE__*/_checkBEM(React, \"input\", Object.assign({}, attributesToProps(attribs), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 16\n      }\n    }));\n  }\n  /**\n   * Wrap table in container\n   *\n   * @param attribs\n   * @param children\n   * @returns {*}\n   */\n\n\n  wrapTable({\n    attribs,\n    children\n  }) {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"Table\",\n      elem: \"Wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"table\", Object.assign({}, attributesToProps(attribs), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }), domToReact(children, this.parserOptions)));\n  }\n  /**\n   * Insert corresponding widget\n   *\n   * @param {{ attribs: Object }} { attribs }\n   * @returns {null|JSX} Return Widget\n   * @memberof Html\n   */\n\n\n  replaceWidget({\n    attribs\n  }) {\n    return /*#__PURE__*/_checkBEM(React, WidgetFactory, Object.assign({}, this.attributesToProps(attribs), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 16\n      }\n    }));\n  }\n\n  replaceStyle(elem) {\n    const {\n      children\n    } = elem;\n    const elemHash = hash(elem);\n\n    if (this.createdOutsideElements[elemHash]) {\n      return /*#__PURE__*/_checkBEM(React, React.Fragment, null);\n    }\n\n    const style = document.createElement('style');\n\n    if (children && children[0]) {\n      style.appendChild(document.createTextNode(children[0].data));\n    }\n\n    document.head.appendChild(style);\n    this.createdOutsideElements[elemHash] = true;\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null);\n  }\n\n  replaceScript(elem) {\n    const {\n      attribs,\n      children\n    } = elem;\n    const elemHash = hash(elem);\n\n    if (this.createdOutsideElements[elemHash]) {\n      return /*#__PURE__*/_checkBEM(React, React.Fragment, null);\n    }\n\n    const script = document.createElement('script');\n    Object.entries(attribs).forEach(function ([attr, value]) {\n      return script.setAttribute(attr, value);\n    });\n\n    if (children && children[0]) {\n      script.appendChild(document.createTextNode(children[0].data));\n    }\n\n    document.head.appendChild(script);\n    this.createdOutsideElements[elemHash] = true;\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null);\n  }\n\n  render() {\n    const {\n      content\n    } = this.props;\n    return parser(content, this.parserOptions);\n  }\n\n}, _class.propTypes = {\n  content: PropTypes.string.isRequired\n}, _temp), \"Component/Html/Component\");\nexport default Html;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/Html/Html.component.js"],"names":["parser","attributesToProps","domToReact","PropTypes","PureComponent","Image","Link","WidgetFactory","hash","createdOutsideElements","rules","query","name","replace","replaceWidget","replaceLinks","replaceImages","replaceInput","replaceScript","replaceStyle","wrapTable","parserOptions","domNode","data","domName","attribs","domAttrs","length","rule","find","indexOf","i","attrib","queryAttrib","Object","keys","prototype","hasOwnProperty","call","match","values","toCamelCase","string","substr","toUpperCase","convertPropertiesToValidFormat","properties","entries","reduce","validProps","key","value","isNaN","children","href","attrs","isAbsoluteUrl","RegExp","test","isSpecialLink","to","attributes","src","elem","elemHash","style","document","createElement","appendChild","createTextNode","head","script","forEach","attr","setAttribute","render","content","props","propTypes","isRequired","Html"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-useless-fragment */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/* eslint-disable consistent-return */\n// Disabled due `domToReact` internal logic\nimport parser from 'html-react-parser';\nimport attributesToProps from 'html-react-parser/lib/attributes-to-props';\nimport domToReact from 'html-react-parser/lib/dom-to-react';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Image from 'Component/Image';\nimport Link from 'Component/Link';\nimport WidgetFactory from 'Component/WidgetFactory';\nimport { hash } from 'Util/Request/Hash';\n\n/**\n * Html content parser\n * Component converts HTML strings to React components\n * @class Html\n * @namespace Component/Html/Component\n */\nexport class Html extends PureComponent {\n    static propTypes = {\n        content: PropTypes.string.isRequired\n    };\n\n    createdOutsideElements = {};\n\n    rules = [\n        {\n            query: { name: ['widget'] },\n            replace: this.replaceWidget\n        },\n        {\n            query: { name: ['a'] },\n            replace: this.replaceLinks\n        },\n        {\n            query: { name: ['img'] },\n            replace: this.replaceImages\n        },\n        {\n            query: { name: ['input'] },\n            replace: this.replaceInput\n        },\n        {\n            query: { name: ['script'] },\n            replace: this.replaceScript\n        },\n        {\n            query: { name: ['style'] },\n            replace: this.replaceStyle\n        },\n        {\n            query: { name: ['table'] },\n            replace: this.wrapTable\n        }\n    ];\n\n    parserOptions = {\n        replace: (domNode) => {\n            const { data, name: domName, attribs: domAttrs } = domNode;\n\n            // Let's remove empty text nodes\n            if (data && !data.replace(/\\u21b5/g, '').replace(/\\s/g, '').length) {\n                return <></>;\n            }\n\n            const rule = this.rules.find((rule) => {\n                const { query: { name, attribs } } = rule;\n\n                if (name && domName && name.indexOf(domName) !== -1) {\n                    return true;\n                } if (attribs && domAttrs) {\n                    // eslint-disable-next-line fp/no-loops, fp/no-let\n                    for (let i = 0; i < attribs.length; i++) {\n                        const attrib = attribs[i];\n\n                        if (typeof attrib === 'object') {\n                            const queryAttrib = Object.keys(attrib)[0];\n\n                            if (Object.prototype.hasOwnProperty.call(domAttrs, queryAttrib)) {\n                                return domAttrs[queryAttrib].match(Object.values(attrib)[0]);\n                            }\n                        } else if (Object.prototype.hasOwnProperty.call(domAttrs, attrib)) {\n                            return true;\n                        }\n                    }\n                }\n\n                return false;\n            });\n\n            if (rule) {\n                const { replace } = rule;\n                return replace.call(this, domNode);\n            }\n        }\n    };\n\n    attributesToProps(attribs) {\n        const toCamelCase = (string) => string.replace(/_[a-z]/g, (match) => match.substr(1).toUpperCase());\n\n        const convertPropertiesToValidFormat = (properties) => Object.entries(properties)\n            .reduce((validProps, [key, value]) => {\n                // eslint-disable-next-line no-restricted-globals\n                if (!isNaN(value)) {\n                    return { ...validProps, [toCamelCase(key)]: +value };\n                }\n\n                return { ...validProps, [toCamelCase(key)]: value };\n            }, {});\n\n        const properties = convertPropertiesToValidFormat(attribs);\n        return attributesToProps(properties);\n    }\n\n    /**\n     * Replace links to native React Router links\n     * @param  {{ attribs: Object, children: Array }}\n     * @return {void|JSX} Return JSX if link is allowed to be replaced\n     * @memberof Html\n     */\n    replaceLinks({ attribs, children }) {\n        const { href, ...attrs } = attribs;\n\n        if (href) {\n            const isAbsoluteUrl = (value) => new RegExp('^(?:[a-z]+:)?//', 'i').test(value);\n            const isSpecialLink = (value) => new RegExp('^(sms|tel|mailto):', 'i').test(value);\n\n            if (!isAbsoluteUrl(href) && !isSpecialLink(href)) {\n                return (\n                    <Link { ...attributesToProps({ ...attrs, to: href }) }>\n                        { domToReact(children, this.parserOptions) }\n                    </Link>\n                );\n            }\n        }\n    }\n\n    /**\n     * Replace img to React Images\n     * @param  {{ attribs: Object }}\n     * @return {void|JSX} Return JSX with image\n     * @memberof Html\n     */\n    replaceImages({ attribs }) {\n        const attributes = attributesToProps(attribs);\n\n        if (attribs.src) {\n            return <Image { ...attributes } />;\n        }\n    }\n\n    /**\n     * Replace input.\n     * @param  {{ attribs: Object }}\n     * @return {void|JSX} Return JSX with image\n     * @memberof Html\n     */\n    replaceInput({ attribs }) {\n        return <input { ...attributesToProps(attribs) } />;\n    }\n\n    /**\n     * Wrap table in container\n     *\n     * @param attribs\n     * @param children\n     * @returns {*}\n     */\n    wrapTable({ attribs, children }) {\n        return (\n            <div block=\"Table\" elem=\"Wrapper\">\n                <table { ...attributesToProps(attribs) }>\n                    { domToReact(children, this.parserOptions) }\n                </table>\n            </div>\n        );\n    }\n\n    /**\n     * Insert corresponding widget\n     *\n     * @param {{ attribs: Object }} { attribs }\n     * @returns {null|JSX} Return Widget\n     * @memberof Html\n     */\n    replaceWidget({ attribs }) {\n        return <WidgetFactory { ...this.attributesToProps(attribs) } />;\n    }\n\n    replaceStyle(elem) {\n        const { children } = elem;\n        const elemHash = hash(elem);\n\n        if (this.createdOutsideElements[elemHash]) {\n            return <></>;\n        }\n\n        const style = document.createElement('style');\n\n        if (children && children[0]) {\n            style.appendChild(document.createTextNode(children[0].data));\n        }\n\n        document.head.appendChild(style);\n        this.createdOutsideElements[elemHash] = true;\n\n        return <></>;\n    }\n\n    replaceScript(elem) {\n        const { attribs, children } = elem;\n        const elemHash = hash(elem);\n\n        if (this.createdOutsideElements[elemHash]) {\n            return <></>;\n        }\n\n        const script = document.createElement('script');\n\n        Object.entries(attribs).forEach(([attr, value]) => script.setAttribute(attr, value));\n\n        if (children && children[0]) {\n            script.appendChild(document.createTextNode(children[0].data));\n        }\n\n        document.head.appendChild(script);\n        this.createdOutsideElements[elemHash] = true;\n\n        return <></>;\n    }\n\n    render() {\n        const { content } = this.props;\n        return parser(content, this.parserOptions);\n    }\n}\n\nexport default Html;\n"]},"metadata":{},"sourceType":"module"}