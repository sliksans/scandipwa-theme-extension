{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { UPDATE_META } from \"./Meta.action\";\nexport const updateEveryTime = ['title', 'description', 'keywords', 'canonical_url', 'robots', 'status_code'];\n/** #namespace Store/Meta/Reducer/filterData */\n\nexport const filterData = Mosaic.middleware(function (data) {\n  const updated = updateEveryTime.reduce(function (acc, key) {\n    acc[key] = data[key];\n    return acc;\n  }, {});\n  return { ...data,\n    ...updated\n  };\n}, \"Store/Meta/Reducer/filterData\");\n/** #namespace Store/Meta/Reducer/getInitialState */\n\nexport const getInitialState = Mosaic.middleware(function () {\n  return {\n    title: '',\n    title_prefix: '',\n    title_suffix: '',\n    description: '',\n    keywords: '',\n    canonical_url: '',\n    robots: '',\n    status_code: ''\n  };\n}, \"Store/Meta/Reducer/getInitialState\");\n/** #namespace Store/Meta/Reducer */\n\nexport const MetaReducer = Mosaic.middleware(_c = function (state = getInitialState(), action) {\n  const {\n    payload = {},\n    type\n  } = action;\n\n  switch (type) {\n    case UPDATE_META:\n      const filteredData = filterData(payload);\n      return { ...state,\n        ...filteredData\n      };\n\n    default:\n      return state;\n  }\n}, \"Store/Meta/Reducer\");\n_c2 = MetaReducer;\nexport default MetaReducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MetaReducer$\");\n$RefreshReg$(_c2, \"MetaReducer\");","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/store/Meta/Meta.reducer.js"],"names":["UPDATE_META","updateEveryTime","filterData","data","updated","reduce","acc","key","getInitialState","title","title_prefix","title_suffix","description","keywords","canonical_url","robots","status_code","MetaReducer","state","action","payload","type","filteredData"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,WAAT;AAEA,OAAO,MAAMC,eAAe,GAAG,CAC3B,OAD2B,EAE3B,aAF2B,EAG3B,UAH2B,EAI3B,eAJ2B,EAK3B,QAL2B,EAM3B,aAN2B,CAAxB;AASP;;AACA,OAAO,MAAMC,UAAU,qBAAG,UAACC,IAAD,EAAU;AAChC,QAAMC,OAAO,GAAGH,eAAe,CAACI,MAAhB,CAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjDD,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWJ,IAAI,CAACI,GAAD,CAAf;AACA,WAAOD,GAAP;AACH,GAHe,EAGb,EAHa,CAAhB;AAKA,SAAO,EAAE,GAAGH,IAAL;AAAW,OAAGC;AAAd,GAAP;AACH,CAPsB,kCAAhB;AASP;;AACA,OAAO,MAAMI,eAAe,qBAAG;AAAA,SAAO;AAClCC,IAAAA,KAAK,EAAE,EAD2B;AAElCC,IAAAA,YAAY,EAAE,EAFoB;AAGlCC,IAAAA,YAAY,EAAE,EAHoB;AAIlCC,IAAAA,WAAW,EAAE,EAJqB;AAKlCC,IAAAA,QAAQ,EAAE,EALwB;AAMlCC,IAAAA,aAAa,EAAE,EANmB;AAOlCC,IAAAA,MAAM,EAAE,EAP0B;AAQlCC,IAAAA,WAAW,EAAE;AARqB,GAAP;AAAA,CAAH,uCAArB;AAWP;;AACA,OAAO,MAAMC,WAAW,0BAAG,UACvBC,KAAK,GAAGV,eAAe,EADA,EAEvBW,MAFuB,EAGtB;AACD,QAAM;AAAEC,IAAAA,OAAO,GAAG,EAAZ;AAAgBC,IAAAA;AAAhB,MAAyBF,MAA/B;;AAEA,UAAQE,IAAR;AACA,SAAKrB,WAAL;AACI,YAAMsB,YAAY,GAAGpB,UAAU,CAACkB,OAAD,CAA/B;AAEA,aAAO,EACH,GAAGF,KADA;AAEH,WAAGI;AAFA,OAAP;;AAKJ;AACI,aAAOJ,KAAP;AAVJ;AAYH,CAlBuB,uBAAjB;MAAMD,W;AAoBb,eAAeA,WAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { UPDATE_META } from './Meta.action';\n\nexport const updateEveryTime = [\n    'title',\n    'description',\n    'keywords',\n    'canonical_url',\n    'robots',\n    'status_code'\n];\n\n/** @namespace Store/Meta/Reducer/filterData */\nexport const filterData = (data) => {\n    const updated = updateEveryTime.reduce((acc, key) => {\n        acc[key] = data[key];\n        return acc;\n    }, {});\n\n    return { ...data, ...updated };\n};\n\n/** @namespace Store/Meta/Reducer/getInitialState */\nexport const getInitialState = () => ({\n    title: '',\n    title_prefix: '',\n    title_suffix: '',\n    description: '',\n    keywords: '',\n    canonical_url: '',\n    robots: '',\n    status_code: ''\n});\n\n/** @namespace Store/Meta/Reducer */\nexport const MetaReducer = (\n    state = getInitialState(),\n    action\n) => {\n    const { payload = {}, type } = action;\n\n    switch (type) {\n    case UPDATE_META:\n        const filteredData = filterData(payload);\n\n        return {\n            ...state,\n            ...filteredData\n        };\n\n    default:\n        return state;\n    }\n};\n\nexport default MetaReducer;\n"]},"metadata":{},"sourceType":"module"}