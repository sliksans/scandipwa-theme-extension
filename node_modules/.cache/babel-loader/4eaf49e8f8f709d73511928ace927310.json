{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/SearchField/SearchField.component.js\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { createRef, lazy, PureComponent, Suspense } from 'react';\nimport ClickOutside from \"/home/arturs/scandiweb/extension/src/component/ClickOutside\";\nimport Loader from \"/home/arturs/scandiweb/extension/src/component/Loader\";\nimport { DeviceType } from \"/home/arturs/scandiweb/extension/src/type/Device\";\nimport history from \"/home/arturs/scandiweb/extension/src/util/History\";\nimport { appendWithStoreCode } from \"/home/arturs/scandiweb/extension/src/util/Url\";\nimport \"./SearchField.style\";\nexport const SearchOverlay = /*#__PURE__*/lazy(_c = function () {\n  return import(\n  /* webpackMode: \"lazy\", webpackChunkName: \"category\" */\n  \"/home/arturs/scandiweb/extension/src/component/SearchOverlay\");\n});\n/** #namespace Component/SearchField/Component */\n\n_c2 = SearchOverlay;\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const SearchField = Mosaic.middleware((_temp = _class = class SearchField_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.searchBarRef = /*#__PURE__*/createRef();\n    this.state = {\n      isPlaceholderVisible: true,\n      showSearch: false\n    };\n\n    this.onSearchEnterPress = function (e) {\n      const {\n        searchCriteria,\n        hideActiveOverlay,\n        onSearchBarChange\n      } = _this.props;\n      const search = searchCriteria.trim().replace(/\\s\\s+/g, '%20');\n      const trimmedSearch = searchCriteria.trim();\n\n      if (e.key === 'Enter' && trimmedSearch !== '') {\n        history.push(appendWithStoreCode(`/search/${search}`));\n        hideActiveOverlay();\n        onSearchBarChange({\n          target: {\n            value: ''\n          }\n        });\n\n        _this.searchBarRef.current.blur();\n\n        _this.closeSearch();\n      }\n    };\n\n    this.onIconClick = function () {\n      _this.searchBarRef.current.focus();\n    };\n\n    this.openSearch = function () {\n      const {\n        onSearchBarFocus\n      } = _this.props;\n      onSearchBarFocus();\n\n      _this.setState({\n        showSearch: true\n      });\n    };\n\n    this.closeSearch = function () {\n      const {\n        onSearchOutsideClick\n      } = _this.props;\n      onSearchOutsideClick();\n\n      _this.setState({\n        showSearch: false\n      });\n    };\n\n    this.handleChange = function (e) {\n      const {\n        target: {\n          value\n        }\n      } = e;\n      const {\n        onSearchBarChange\n      } = _this.props;\n      onSearchBarChange(e);\n\n      _this.setState({\n        isPlaceholderVisible: value === ''\n      });\n    };\n\n    this.clearSearch = function () {\n      _this.onClearSearchButtonClick(false);\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    const {\n      isActive\n    } = props;\n\n    if (isActive) {\n      return null;\n    }\n\n    return {\n      isPlaceholderVisible: true\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      showSearch\n    } = this.state;\n\n    if (showSearch) {\n      this.onIconClick();\n    }\n  }\n\n  onClearSearchButtonClick(isFocusOnSearchBar = true) {\n    const {\n      onClearSearchButtonClick\n    } = this.props;\n\n    if (isFocusOnSearchBar) {\n      this.searchBarRef.current.focus();\n    }\n\n    onClearSearchButtonClick();\n  }\n\n  renderClearSearch() {\n    const {\n      isVisible\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"button\", {\n      block: \"Header\",\n      elem: \"Button\",\n      onClick: this.onClearSearchButtonClick,\n      mods: {\n        type: 'searchClear',\n        isVisible\n      },\n      \"aria-label\": \"Clear search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderOverlayFallback() {\n    return /*#__PURE__*/_checkBEM(React, Loader, {\n      isLoading: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 16\n      }\n    });\n  }\n\n  renderSearch() {\n    const {\n      searchCriteria,\n      onSearchBarFocus,\n      isActive\n    } = this.props;\n    const {\n      showSearch\n    } = this.state;\n\n    if (!showSearch) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"SearchField\",\n      elem: \"SearchInnerWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"input\", {\n      id: \"search-field\",\n      ref: this.searchBarRef,\n      block: \"SearchField\",\n      elem: \"Input\",\n      onFocus: onSearchBarFocus,\n      onChange: this.handleChange,\n      onKeyDown: this.onSearchEnterPress,\n      value: searchCriteria,\n      mods: {\n        isActive\n      },\n      autoComplete: \"off\",\n      \"aria-label\": __('Search'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"SearchField\",\n      elem: \"SearchIcon\",\n      role: \"button\",\n      tabIndex: \"0\",\n      onClick: this.onIconClick,\n      \"aria-label\": __('Search'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, Suspense, {\n      fallback: this.renderOverlayFallback(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, SearchOverlay, {\n      isHideOverlay: true,\n      clearSearch: this.clearSearch,\n      searchCriteria: searchCriteria,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  renderSearchIcon() {\n    const {\n      showSearch\n    } = this.state;\n\n    if (showSearch) {\n      return /*#__PURE__*/_checkBEM(React, \"div\", {\n        block: \"SearchField\",\n        elem: \"CloseIcon\",\n        role: \"button\",\n        tabIndex: \"0\",\n        onClick: this.closeSearch,\n        \"aria-label\": __('Close'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"SearchField\",\n      elem: \"SearchIcon\",\n      role: \"button\",\n      tabIndex: \"0\",\n      onClick: this.openSearch,\n      \"aria-label\": __('Search'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderDesktopContent() {\n    const {\n      device\n    } = this.props;\n    const {\n      showSearch\n    } = this.state;\n\n    if (device.isMobile) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, this.renderSearchIcon(), /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"SearchField\",\n      elem: \"SearchWrapper\",\n      mods: {\n        isVisible: showSearch\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, this.renderSearch()));\n  }\n\n  renderMobileContent() {\n    const {\n      searchCriteria,\n      onSearchBarFocus,\n      isActive,\n      device\n    } = this.props;\n\n    if (!device.isMobile) {\n      return null;\n    }\n\n    const {\n      isPlaceholderVisible\n    } = this.state;\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, /*#__PURE__*/_checkBEM(React, \"input\", {\n      id: \"search-field\",\n      ref: this.searchBarRef,\n      block: \"SearchField\",\n      elem: \"Input\",\n      onFocus: onSearchBarFocus,\n      onChange: this.handleChange,\n      onKeyDown: this.onSearchEnterPress,\n      value: searchCriteria,\n      mods: {\n        isActive\n      },\n      autoComplete: \"off\",\n      \"aria-label\": __('Search'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"SearchField\",\n      elem: \"Placeholder\",\n      mods: {\n        isActive,\n        isPlaceholderVisible\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }\n    }, __('Search'))), /*#__PURE__*/_checkBEM(React, Suspense, {\n      fallback: this.renderOverlayFallback(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, SearchOverlay, {\n      clearSearch: this.clearSearch,\n      searchCriteria: searchCriteria,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  render() {\n    const {\n      isVisible,\n      isActive\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"SearchField\",\n      mods: {\n        isVisible,\n        isActive\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, ClickOutside, {\n      onClick: this.closeSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"SearchField\",\n      elem: \"Wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }\n    }, this.renderMobileContent(), this.renderDesktopContent())));\n  }\n\n}, _class.propTypes = {\n  searchCriteria: PropTypes.string,\n  onSearchBarFocus: PropTypes.func.isRequired,\n  onSearchBarChange: PropTypes.func.isRequired,\n  onSearchOutsideClick: PropTypes.func.isRequired,\n  onClearSearchButtonClick: PropTypes.func.isRequired,\n  isVisible: PropTypes.bool,\n  isActive: PropTypes.bool,\n  hideActiveOverlay: PropTypes.func,\n  device: DeviceType.isRequired\n}, _class.defaultProps = {\n  isVisible: true,\n  isActive: true,\n  searchCriteria: '',\n  hideActiveOverlay: function () {}\n}, _temp), \"Component/SearchField/Component\");\nexport default SearchField;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchOverlay$lazy\");\n$RefreshReg$(_c2, \"SearchOverlay\");","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/SearchField/SearchField.component.js"],"names":["PropTypes","createRef","lazy","PureComponent","Suspense","ClickOutside","Loader","DeviceType","history","appendWithStoreCode","SearchOverlay","searchBarRef","state","isPlaceholderVisible","showSearch","onSearchEnterPress","e","searchCriteria","hideActiveOverlay","onSearchBarChange","props","search","trim","replace","trimmedSearch","key","push","target","value","current","blur","closeSearch","onIconClick","focus","openSearch","onSearchBarFocus","setState","onSearchOutsideClick","handleChange","clearSearch","onClearSearchButtonClick","getDerivedStateFromProps","isActive","componentDidUpdate","isFocusOnSearchBar","renderClearSearch","isVisible","type","renderOverlayFallback","renderSearch","__","renderSearchIcon","renderDesktopContent","device","isMobile","renderMobileContent","render","propTypes","string","func","isRequired","bool","defaultProps","SearchField"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport {\n    createRef,\n    lazy,\n    PureComponent,\n    Suspense\n} from 'react';\n\nimport ClickOutside from 'Component/ClickOutside';\nimport Loader from 'Component/Loader';\nimport { DeviceType } from 'Type/Device';\nimport history from 'Util/History';\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport './SearchField.style';\n\nexport const SearchOverlay = lazy(\n    () => import(\n        /* webpackMode: \"lazy\", webpackChunkName: \"category\" */\n        'Component/SearchOverlay'\n    )\n);\n\n/** @namespace Component/SearchField/Component */\nexport class SearchField extends PureComponent {\n    static propTypes = {\n        searchCriteria: PropTypes.string,\n        onSearchBarFocus: PropTypes.func.isRequired,\n        onSearchBarChange: PropTypes.func.isRequired,\n        onSearchOutsideClick: PropTypes.func.isRequired,\n        onClearSearchButtonClick: PropTypes.func.isRequired,\n        isVisible: PropTypes.bool,\n        isActive: PropTypes.bool,\n        hideActiveOverlay: PropTypes.func,\n        device: DeviceType.isRequired\n    };\n\n    static defaultProps = {\n        isVisible: true,\n        isActive: true,\n        searchCriteria: '',\n        hideActiveOverlay: () => {}\n    };\n\n    searchBarRef = createRef();\n\n    state = {\n        isPlaceholderVisible: true,\n        showSearch: false\n    };\n\n    static getDerivedStateFromProps(props) {\n        const { isActive } = props;\n        if (isActive) {\n            return null;\n        }\n\n        return { isPlaceholderVisible: true };\n    }\n\n    componentDidUpdate() {\n        const { showSearch } = this.state;\n\n        if (showSearch) {\n            this.onIconClick();\n        }\n    }\n\n    onClearSearchButtonClick(isFocusOnSearchBar = true) {\n        const { onClearSearchButtonClick } = this.props;\n        if (isFocusOnSearchBar) {\n            this.searchBarRef.current.focus();\n        }\n        onClearSearchButtonClick();\n    }\n\n    onSearchEnterPress = (e) => {\n        const { searchCriteria, hideActiveOverlay, onSearchBarChange } = this.props;\n        const search = searchCriteria.trim().replace(/\\s\\s+/g, '%20');\n        const trimmedSearch = searchCriteria.trim();\n\n        if (e.key === 'Enter' && trimmedSearch !== '') {\n            history.push(appendWithStoreCode(`/search/${ search }`));\n            hideActiveOverlay();\n            onSearchBarChange({ target: { value: '' } });\n            this.searchBarRef.current.blur();\n            this.closeSearch();\n        }\n    };\n\n    onIconClick = () => {\n        this.searchBarRef.current.focus();\n    };\n\n    openSearch = () => {\n        const { onSearchBarFocus } = this.props;\n\n        onSearchBarFocus();\n        this.setState({ showSearch: true });\n    };\n\n    closeSearch = () => {\n        const { onSearchOutsideClick } = this.props;\n\n        onSearchOutsideClick();\n        this.setState({ showSearch: false });\n    };\n\n    handleChange = (e) => {\n        const { target: { value } } = e;\n        const { onSearchBarChange } = this.props;\n        onSearchBarChange(e);\n\n        this.setState({ isPlaceholderVisible: value === '' });\n    };\n\n    clearSearch = () => {\n        this.onClearSearchButtonClick(false);\n    };\n\n    renderClearSearch() {\n        const { isVisible } = this.props;\n\n        return (\n            <button\n              block=\"Header\"\n              elem=\"Button\"\n              onClick={ this.onClearSearchButtonClick }\n              mods={ {\n                  type: 'searchClear',\n                  isVisible\n              } }\n              aria-label=\"Clear search\"\n            />\n        );\n    }\n\n    renderOverlayFallback() {\n        return <Loader isLoading />;\n    }\n\n    renderSearch() {\n        const {\n            searchCriteria,\n            onSearchBarFocus,\n            isActive\n        } = this.props;\n\n        const { showSearch } = this.state;\n\n        if (!showSearch) {\n            return null;\n        }\n\n        return (\n            <div\n              block=\"SearchField\"\n              elem=\"SearchInnerWrapper\"\n            >\n                <input\n                  id=\"search-field\"\n                  ref={ this.searchBarRef }\n                  block=\"SearchField\"\n                  elem=\"Input\"\n                  onFocus={ onSearchBarFocus }\n                  onChange={ this.handleChange }\n                  onKeyDown={ this.onSearchEnterPress }\n                  value={ searchCriteria }\n                  mods={ { isActive } }\n                  autoComplete=\"off\"\n                  aria-label={ __('Search') }\n                />\n                <div\n                  block=\"SearchField\"\n                  elem=\"SearchIcon\"\n                  role=\"button\"\n                  tabIndex=\"0\"\n                  onClick={ this.onIconClick }\n                  aria-label={ __('Search') }\n                />\n                <Suspense fallback={ this.renderOverlayFallback() }>\n                    <SearchOverlay\n                      isHideOverlay\n                      clearSearch={ this.clearSearch }\n                      searchCriteria={ searchCriteria }\n                    />\n                </Suspense>\n            </div>\n        );\n    }\n\n    renderSearchIcon() {\n        const { showSearch } = this.state;\n\n        if (showSearch) {\n            return (\n                <div\n                  block=\"SearchField\"\n                  elem=\"CloseIcon\"\n                  role=\"button\"\n                  tabIndex=\"0\"\n                  onClick={ this.closeSearch }\n                  aria-label={ __('Close') }\n                />\n            );\n        }\n\n        return (\n            <div\n              block=\"SearchField\"\n              elem=\"SearchIcon\"\n              role=\"button\"\n              tabIndex=\"0\"\n              onClick={ this.openSearch }\n              aria-label={ __('Search') }\n            />\n        );\n    }\n\n    renderDesktopContent() {\n        const { device } = this.props;\n        const { showSearch } = this.state;\n\n        if (device.isMobile) {\n            return null;\n        }\n\n        return (\n            <>\n                { this.renderSearchIcon() }\n                <div\n                  block=\"SearchField\"\n                  elem=\"SearchWrapper\"\n                  mods={ { isVisible: showSearch } }\n                >\n                    { this.renderSearch() }\n                </div>\n            </>\n        );\n    }\n\n    renderMobileContent() {\n        const {\n            searchCriteria,\n            onSearchBarFocus,\n            isActive,\n            device\n        } = this.props;\n\n        if (!device.isMobile) {\n            return null;\n        }\n\n        const { isPlaceholderVisible } = this.state;\n\n        return (\n            <>\n                <input\n                  id=\"search-field\"\n                  ref={ this.searchBarRef }\n                  block=\"SearchField\"\n                  elem=\"Input\"\n                  onFocus={ onSearchBarFocus }\n                  onChange={ this.handleChange }\n                  onKeyDown={ this.onSearchEnterPress }\n                  value={ searchCriteria }\n                  mods={ { isActive } }\n                  autoComplete=\"off\"\n                  aria-label={ __('Search') }\n                />\n                <div\n                  block=\"SearchField\"\n                  elem=\"Placeholder\"\n                  mods={ {\n                      isActive,\n                      isPlaceholderVisible\n                  } }\n                >\n                    <span>{ __('Search') }</span>\n                </div>\n                <Suspense fallback={ this.renderOverlayFallback() }>\n                    <SearchOverlay clearSearch={ this.clearSearch } searchCriteria={ searchCriteria } />\n                </Suspense>\n            </>\n        );\n    }\n\n    render() {\n        const {\n            isVisible,\n            isActive\n        } = this.props;\n\n        return (\n            <div block=\"SearchField\" mods={ { isVisible, isActive } }>\n                <ClickOutside onClick={ this.closeSearch }>\n                    <div block=\"SearchField\" elem=\"Wrapper\">\n                        { this.renderMobileContent() }\n                        { this.renderDesktopContent() }\n                    </div>\n                </ClickOutside>\n            </div>\n        );\n    }\n}\n\nexport default SearchField;\n"]},"metadata":{},"sourceType":"module"}