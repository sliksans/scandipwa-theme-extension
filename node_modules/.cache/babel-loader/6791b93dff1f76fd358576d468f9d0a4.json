{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Field/Field.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/* eslint-disable react/jsx-no-bind */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport FieldInput from \"/home/arturs/scandiweb/scandipwa/src/component/FieldInput\";\nimport FieldSelect from \"/home/arturs/scandiweb/scandipwa/src/component/FieldSelect\";\nimport FieldTextarea from \"/home/arturs/scandiweb/scandipwa/src/component/FieldTextarea\";\nimport Image from \"/home/arturs/scandiweb/scandipwa/src/component/Image\";\nimport { MixType } from \"/home/arturs/scandiweb/scandipwa/src/type/Common\";\nimport { CHECKBOX_TYPE, FILE_TYPE, NUMBER_TYPE, PASSWORD_TYPE, RADIO_TYPE, SELECT_TYPE, TEXTAREA_TYPE } from \"./Field.config\";\nimport upload from \"./icons/upload.svg\";\nimport \"./Field.style\";\n/**\n * Input fields component\n * @class Field\n * #namespace Component/Field/Component\n */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const Field = Mosaic.middleware((_temp = _class = class Field_ extends Mosaic.Extensible(PureComponent) {\n  renderTextarea() {\n    return /*#__PURE__*/_checkBEM(React, FieldTextarea, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }));\n  }\n  /**\n   * Render Type Text, default value is passed from parent\n   * handleToUpdate used to pass child data to parent\n   */\n\n\n  renderTypeText() {\n    return /*#__PURE__*/_checkBEM(React, FieldInput, Object.assign({}, this.props, {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  renderTypePassword() {\n    return /*#__PURE__*/_checkBEM(React, FieldInput, Object.assign({}, this.props, {\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  renderTypeNumber() {\n    const {\n      min,\n      max,\n      value,\n      onKeyEnterDown,\n      handleChange\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, /*#__PURE__*/_checkBEM(React, FieldInput, Object.assign({}, this.props, {\n      type: \"number\",\n      readOnly: true // eslint-disable-next-line react/jsx-no-bind\n      ,\n      onChange: function (e) {\n        return handleChange(e.target.value, false);\n      },\n      onKeyDown: onKeyEnterDown,\n      \"aria-label\": __('Value'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/_checkBEM(React, \"button\", {\n      disabled: +value === max // eslint-disable-next-line react/jsx-no-bind\n      ,\n      onClick: function () {\n        return handleChange(+value + 1);\n      },\n      \"aria-label\": __('Add'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"button\", {\n      disabled: +value === min // eslint-disable-next-line react/jsx-no-bind\n      ,\n      onClick: function () {\n        return handleChange(+value - 1);\n      },\n      \"aria-label\": __('Subtract'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderCheckbox() {\n    const {\n      id,\n      onChangeCheckbox,\n      label\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"label\", {\n      htmlFor: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, label, /*#__PURE__*/_checkBEM(React, FieldInput, Object.assign({}, this.props, {\n      type: \"checkbox\",\n      onChange: onChangeCheckbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"input-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderFile() {\n    const {\n      filename,\n      id,\n      onChange,\n      fileExtensions\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, React.Fragment, null, /*#__PURE__*/_checkBEM(React, FieldInput, Object.assign({}, this.props, {\n      type: \"file\",\n      onChange: function (e) {\n        return onChange(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    })), this.renderLabelForFile(id, filename), /*#__PURE__*/_checkBEM(React, \"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, __('Compatible file extensions to upload: '), /*#__PURE__*/_checkBEM(React, \"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, fileExtensions)));\n  }\n\n  renderRadioButton() {\n    const {\n      id,\n      label,\n      onClick\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"label\", {\n      htmlFor: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, FieldInput, Object.assign({}, this.props, {\n      type: \"radio\",\n      onChange: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"input-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }), label);\n  }\n\n  renderSelectWithOptions() {\n    return /*#__PURE__*/_checkBEM(React, FieldSelect, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  renderInputOfType(type) {\n    switch (type) {\n      case CHECKBOX_TYPE:\n        return this.renderCheckbox();\n\n      case RADIO_TYPE:\n        return this.renderRadioButton();\n\n      case NUMBER_TYPE:\n        return this.renderTypeNumber();\n\n      case TEXTAREA_TYPE:\n        return this.renderTextarea();\n\n      case PASSWORD_TYPE:\n        return this.renderTypePassword();\n\n      case SELECT_TYPE:\n        return this.renderSelectWithOptions();\n\n      case FILE_TYPE:\n        return this.renderFile();\n\n      default:\n        return this.renderTypeText();\n    }\n  }\n\n  renderLabelForFile(id, filename = '') {\n    if (filename) {\n      return /*#__PURE__*/_checkBEM(React, \"label\", {\n        htmlFor: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/_checkBEM(React, \"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }\n      }, filename));\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"label\", {\n      htmlFor: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, Image, {\n      src: upload,\n      alt: \"Upload icon\",\n      ratio: \"square\",\n      height: \"50px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/_checkBEM(React, \"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, __('Drop files here or')), /*#__PURE__*/_checkBEM(React, \"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, __('Select files')));\n  }\n\n  renderLabel() {\n    const {\n      id,\n      label,\n      validation,\n      type\n    } = this.props;\n    const isRequired = validation.includes('notEmpty');\n    const noRenderLabel = type === CHECKBOX_TYPE || type === RADIO_TYPE;\n\n    if (!label || noRenderLabel) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"label\", {\n      block: \"Field\",\n      elem: \"Label\",\n      mods: {\n        isRequired\n      },\n      htmlFor: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, label);\n  }\n\n  renderMessage() {\n    const {\n      message\n    } = this.props;\n\n    if (!message) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"p\", {\n      block: \"Field\",\n      elem: \"Message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }, message);\n  }\n\n  render() {\n    const {\n      mix,\n      type,\n      message,\n      validationStatus\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"Field\",\n      mods: {\n        type,\n        hasError: validationStatus === false || !!message,\n        isValid: validationStatus === true\n      },\n      mix: mix,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }\n    }, this.renderLabel(), this.renderInputOfType(type), this.renderMessage());\n  }\n\n}, _class.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  onChangeCheckbox: PropTypes.func.isRequired,\n  onFocus: PropTypes.func.isRequired,\n  onKeyPress: PropTypes.func.isRequired,\n  onKeyEnterDown: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  message: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  validation: PropTypes.arrayOf(PropTypes.string).isRequired,\n  validationStatus: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  checked: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  mix: MixType,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  filename: PropTypes.string,\n  fileExtensions: PropTypes.string\n}, _class.defaultProps = {\n  min: 1,\n  max: 99,\n  checked: false,\n  mix: {},\n  label: '',\n  value: null,\n  message: '',\n  validationStatus: null,\n  filename: '',\n  fileExtensions: ''\n}, _temp), \"Component/Field/Component\");\nexport default Field;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/Field/Field.component.js"],"names":["PropTypes","PureComponent","FieldInput","FieldSelect","FieldTextarea","Image","MixType","CHECKBOX_TYPE","FILE_TYPE","NUMBER_TYPE","PASSWORD_TYPE","RADIO_TYPE","SELECT_TYPE","TEXTAREA_TYPE","renderTextarea","props","renderTypeText","renderTypePassword","renderTypeNumber","min","max","value","onKeyEnterDown","handleChange","e","target","__","renderCheckbox","id","onChangeCheckbox","label","renderFile","filename","onChange","fileExtensions","renderLabelForFile","renderRadioButton","onClick","renderSelectWithOptions","renderInputOfType","type","upload","renderLabel","validation","isRequired","includes","noRenderLabel","renderMessage","message","render","mix","validationStatus","hasError","isValid","propTypes","string","func","onFocus","onKeyPress","oneOfType","object","number","bool","arrayOf","checked","defaultProps","Field"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n/* eslint-disable react/jsx-no-bind */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport FieldInput from 'Component/FieldInput';\nimport FieldSelect from 'Component/FieldSelect';\nimport FieldTextarea from 'Component/FieldTextarea';\nimport Image from 'Component/Image';\nimport { MixType } from 'Type/Common';\n\nimport {\n    CHECKBOX_TYPE,\n    FILE_TYPE,\n    NUMBER_TYPE,\n    PASSWORD_TYPE,\n    RADIO_TYPE,\n    SELECT_TYPE,\n    TEXTAREA_TYPE\n} from './Field.config';\nimport upload from './icons/upload.svg';\n\nimport './Field.style';\n\n/**\n * Input fields component\n * @class Field\n * @namespace Component/Field/Component\n */\nexport class Field extends PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        handleChange: PropTypes.func.isRequired,\n        onChangeCheckbox: PropTypes.func.isRequired,\n        onFocus: PropTypes.func.isRequired,\n        onKeyPress: PropTypes.func.isRequired,\n        onKeyEnterDown: PropTypes.func.isRequired,\n        onClick: PropTypes.func.isRequired,\n        label: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n        message: PropTypes.string,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.bool\n        ]),\n        validation: PropTypes.arrayOf(PropTypes.string).isRequired,\n        validationStatus: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.string\n        ]),\n        checked: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.string\n        ]),\n        mix: MixType,\n        min: PropTypes.number,\n        max: PropTypes.number,\n        filename: PropTypes.string,\n        fileExtensions: PropTypes.string\n    };\n\n    static defaultProps = {\n        min: 1,\n        max: 99,\n        checked: false,\n        mix: {},\n        label: '',\n        value: null,\n        message: '',\n        validationStatus: null,\n        filename: '',\n        fileExtensions: ''\n    };\n\n    renderTextarea() {\n        return (\n            <FieldTextarea\n              { ...this.props }\n            />\n        );\n    }\n\n    /**\n     * Render Type Text, default value is passed from parent\n     * handleToUpdate used to pass child data to parent\n     */\n    renderTypeText() {\n        return (\n            <FieldInput\n              { ...this.props }\n              type=\"text\"\n            />\n        );\n    }\n\n    renderTypePassword() {\n        return (\n            <FieldInput\n              { ...this.props }\n              type=\"password\"\n            />\n        );\n    }\n\n    renderTypeNumber() {\n        const {\n            min,\n            max,\n            value,\n            onKeyEnterDown,\n            handleChange\n        } = this.props;\n\n        return (\n            <>\n                <FieldInput\n                  { ...this.props }\n                  type=\"number\"\n                  readOnly\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onChange={ (e) => handleChange(e.target.value, false) }\n                  onKeyDown={ onKeyEnterDown }\n                  aria-label={ __('Value') }\n                />\n                <button\n                  disabled={ +value === max }\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={ () => handleChange(+value + 1) }\n                  aria-label={ __('Add') }\n                />\n                <button\n                  disabled={ +value === min }\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={ () => handleChange(+value - 1) }\n                  aria-label={ __('Subtract') }\n                />\n            </>\n        );\n    }\n\n    renderCheckbox() {\n        const {\n            id,\n            onChangeCheckbox,\n            label\n        } = this.props;\n\n        return (\n            <label htmlFor={ id }>\n                { label }\n                <FieldInput\n                  { ...this.props }\n                  type=\"checkbox\"\n                  onChange={ onChangeCheckbox }\n                />\n                <div block=\"input-control\" />\n            </label>\n        );\n    }\n\n    renderFile() {\n        const {\n            filename,\n            id,\n            onChange,\n            fileExtensions\n        } = this.props;\n\n        return (\n            <>\n                <FieldInput\n                  { ...this.props }\n                  type=\"file\"\n                  onChange={ (e) => onChange(e) }\n                />\n                { this.renderLabelForFile(id, filename) }\n                <p>\n                    { __('Compatible file extensions to upload: ') }\n                    <b>{ fileExtensions }</b>\n                </p>\n            </>\n        );\n    }\n\n    renderRadioButton() {\n        const {\n            id,\n            label,\n            onClick\n        } = this.props;\n\n        return (\n            <label htmlFor={ id }>\n                <FieldInput\n                  { ...this.props }\n                  type=\"radio\"\n                  onChange={ onClick }\n                />\n                <div block=\"input-control\" />\n                { label }\n            </label>\n        );\n    }\n\n    renderSelectWithOptions() {\n        return (\n            <FieldSelect\n              { ...this.props }\n            />\n        );\n    }\n\n    renderInputOfType(type) {\n        switch (type) {\n        case CHECKBOX_TYPE:\n            return this.renderCheckbox();\n        case RADIO_TYPE:\n            return this.renderRadioButton();\n        case NUMBER_TYPE:\n            return this.renderTypeNumber();\n        case TEXTAREA_TYPE:\n            return this.renderTextarea();\n        case PASSWORD_TYPE:\n            return this.renderTypePassword();\n        case SELECT_TYPE:\n            return this.renderSelectWithOptions();\n        case FILE_TYPE:\n            return this.renderFile();\n        default:\n            return this.renderTypeText();\n        }\n    }\n\n    renderLabelForFile(id, filename = '') {\n        if (filename) {\n            return (\n                <label htmlFor={ id }>\n                    <p>{ filename }</p>\n                </label>\n            );\n        }\n\n        return (\n            <label htmlFor={ id }>\n                <Image src={ upload } alt=\"Upload icon\" ratio=\"square\" height=\"50px\" />\n                <p>{ __('Drop files here or') }</p>\n                <span>{ __('Select files') }</span>\n            </label>\n        );\n    }\n\n    renderLabel() {\n        const {\n            id,\n            label,\n            validation,\n            type\n        } = this.props;\n        const isRequired = validation.includes('notEmpty');\n        const noRenderLabel = type === CHECKBOX_TYPE || type === RADIO_TYPE;\n\n        if (!label || noRenderLabel) {\n            return null;\n        }\n\n        return (\n            <label\n              block=\"Field\"\n              elem=\"Label\"\n              mods={ { isRequired } }\n              htmlFor={ id }\n            >\n                { label }\n            </label>\n        );\n    }\n\n    renderMessage() {\n        const { message } = this.props;\n\n        if (!message) {\n            return null;\n        }\n\n        return (\n            <p block=\"Field\" elem=\"Message\">\n                { message }\n            </p>\n        );\n    }\n\n    render() {\n        const {\n            mix,\n            type,\n            message,\n            validationStatus\n        } = this.props;\n\n        return (\n            <div\n              block=\"Field\"\n              mods={ {\n                  type,\n                  hasError: validationStatus === false || !!message,\n                  isValid: validationStatus === true\n              } }\n              mix={ mix }\n            >\n                { this.renderLabel() }\n                { this.renderInputOfType(type) }\n                { this.renderMessage() }\n            </div>\n        );\n    }\n}\n\nexport default Field;\n"]},"metadata":{},"sourceType":"module"}