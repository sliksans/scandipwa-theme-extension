{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductList/ProductList.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport CategoryPagination from \"/home/arturs/scandiweb/extension/src/component/CategoryPagination\";\nimport ProductListPage from \"/home/arturs/scandiweb/extension/src/component/ProductListPage\";\nimport { MixType } from \"/home/arturs/scandiweb/extension/src/type/Common\";\nimport { DeviceType } from \"/home/arturs/scandiweb/extension/src/type/Device\";\nimport { FilterType, PagesType } from \"/home/arturs/scandiweb/extension/src/type/ProductList\";\nimport { observerThreshold } from \"./ProductList.config\";\nimport \"./ProductList.style\";\n/**\n * List of category products\n * @class ProductList\n * #namespace Component/ProductList/Component\n */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const ProductList = Mosaic.middleware((_temp = _class = class ProductList_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.nodes = {};\n    this.observedNodes = [];\n    this.pagesIntersecting = [];\n\n    this.renderProductPage = function ([key, items = []]) {\n      const {\n        selectedFilters\n      } = _this.props;\n      const pageNumber = +key;\n      return _this.renderPage({\n        selectedFilters,\n        pageNumber,\n        items,\n        key,\n        wrapperRef: function (node) {\n          _this.nodes[pageNumber] = node;\n        }\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      isWidget,\n      currentPage,\n      device\n    } = this.props;\n    const {\n      currentPage: prevCurrentPage\n    } = prevProps; // Scroll up on page change, ignore widgets\n\n    if (prevCurrentPage !== currentPage && !isWidget && !device.isMobile) {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n\n    const {\n      isInfiniteLoaderEnabled\n    } = this.props;\n\n    if (isInfiniteLoaderEnabled) {\n      this.observePageChange();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.observer && this.observer.disconnect) {\n      this.observer.disconnect();\n    }\n\n    this.observer = null;\n  }\n\n  observePageChange() {\n    var _this2 = this;\n\n    const {\n      updatePage,\n      isLoading\n    } = this.props;\n\n    if (isLoading) {\n      this.pagesIntersecting = [];\n    }\n\n    if (!this.observer && 'IntersectionObserver' in window) {\n      const threshold = this._getThreshold();\n\n      this.observer = new IntersectionObserver(function (entries) {\n        const {\n          currentPage\n        } = _this2.props;\n        entries.forEach(function ({\n          target,\n          isIntersecting\n        }) {\n          const page = +Object.keys(_this2.nodes).find(function (node) {\n            return _this2.nodes[node] === target;\n          });\n\n          const index = _this2.pagesIntersecting.indexOf(page);\n\n          if (isIntersecting && index === -1) {\n            _this2.pagesIntersecting.push(page);\n          }\n\n          if (!isIntersecting && index > -1) {\n            _this2.pagesIntersecting.splice(index, 1);\n          }\n        });\n        const minPage = Math.min(..._this2.pagesIntersecting);\n\n        if (minPage < Infinity && minPage !== currentPage) {\n          updatePage(minPage);\n        }\n      }, {\n        rootMargin: '0px',\n        threshold\n      });\n    }\n\n    this.updateObserver();\n  }\n\n  updateObserver() {\n    var _this3 = this;\n\n    const currentNodes = Object.values(this.nodes);\n\n    if (!this.observer || currentNodes.length <= 0) {\n      return;\n    }\n\n    currentNodes.forEach(function (node) {\n      if (node && !_this3.observedNodes.includes(node)) {\n        _this3.observer.observe(node);\n\n        _this3.observedNodes.push(node);\n      }\n    });\n    this.observedNodes = this.observedNodes.reduce(function (acc, node) {\n      if (!currentNodes.includes(node)) {\n        _this3.observer.unobserve(node);\n      } else {\n        acc.push(node);\n      }\n\n      return acc;\n    }, []);\n  }\n\n  _getThreshold() {\n    const hundredPercent = 100;\n    return Array.from({\n      length: hundredPercent / observerThreshold + 1\n    }, function (_, i) {\n      return i * (observerThreshold / hundredPercent);\n    });\n  }\n\n  renderLoadButton() {\n    const {\n      isShowLoading,\n      isInfiniteLoaderEnabled,\n      loadPrevPage\n    } = this.props;\n\n    if (!isShowLoading || !isInfiniteLoaderEnabled) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductList\",\n      elem: \"LoadButton\",\n      role: \"button\",\n      tabIndex: \"0\",\n      onKeyUp: loadPrevPage,\n      onClick: loadPrevPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, __('Load previous'));\n  }\n\n  renderNoProducts() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductList\",\n      elem: \"ProductsMissing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, __('We are sorry!')), /*#__PURE__*/_checkBEM(React, \"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, __('There were no products found matching your request.')), /*#__PURE__*/_checkBEM(React, \"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, __('Please, try removing selected filters and try again!'))));\n  }\n\n  renderPages() {\n    const {\n      pages,\n      isVisible,\n      isLoading,\n      isInfiniteLoaderEnabled\n    } = this.props;\n\n    if (isLoading) {\n      return this.renderPage();\n    }\n\n    const pageRenders = Object.entries(pages).map(this.renderProductPage);\n\n    if (isVisible && isInfiniteLoaderEnabled) {\n      // add placeholders to the end of pages if needed\n      const key = Math.max(Object.keys(pages)) + 1; // the key should match next page key\n\n      pageRenders.push(this.renderPage({\n        key\n      }));\n    }\n\n    return pageRenders;\n  }\n\n  _processProps(props) {\n    const {\n      isInfiniteLoaderEnabled\n    } = this.props;\n\n    if (isInfiniteLoaderEnabled) {\n      return props;\n    } // there must be no more then one page per screen\n    // if the \"isInfiniteLoaderEnabled\" is false\n\n\n    const {\n      key,\n      ...restProps\n    } = props;\n    restProps.key = 0;\n    return restProps;\n  }\n\n  renderPage(props = {}) {\n    const {\n      isInfiniteLoaderEnabled,\n      loadPage,\n      isLoading,\n      isVisible,\n      currentPage,\n      mix\n    } = this.props;\n\n    const newProps = this._processProps(props);\n\n    return /*#__PURE__*/_checkBEM(React, ProductListPage, Object.assign({\n      key: currentPage,\n      isInfiniteLoaderEnabled: isInfiniteLoaderEnabled,\n      updatePages: loadPage,\n      isLoading: isLoading,\n      isVisible: isVisible,\n      mix: mix\n    }, newProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  renderPagination() {\n    const {\n      isLoading,\n      totalPages,\n      requestPage,\n      isPaginationEnabled\n    } = this.props;\n\n    if (!isPaginationEnabled) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, CategoryPagination, {\n      isLoading: isLoading,\n      totalPages: totalPages,\n      onPageSelect: requestPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderTitle() {\n    const {\n      title\n    } = this.props;\n\n    if (!title) {\n      return null;\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }, title);\n  }\n\n  render() {\n    const {\n      totalPages,\n      isLoading,\n      mix\n    } = this.props;\n\n    if (!isLoading && totalPages === 0) {\n      return this.renderNoProducts();\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductList\",\n      mods: {\n        isLoading\n      },\n      mix: mix,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, this.renderPagination(), this.renderTitle(), this.renderLoadButton(), this.renderPages(), this.renderPagination());\n  }\n\n}, _class.propTypes = {\n  device: DeviceType.isRequired,\n  title: PropTypes.string,\n  pages: PagesType.isRequired,\n  selectedFilters: FilterType,\n  isLoading: PropTypes.bool,\n  updatePage: PropTypes.func,\n  totalPages: PropTypes.number,\n  loadPage: PropTypes.func,\n  requestPage: PropTypes.func,\n  loadPrevPage: PropTypes.func,\n  currentPage: PropTypes.number,\n  isShowLoading: PropTypes.bool,\n  isVisible: PropTypes.bool,\n  isInfiniteLoaderEnabled: PropTypes.bool,\n  isPaginationEnabled: PropTypes.bool,\n  isWidget: PropTypes.bool,\n  mix: MixType\n}, _class.defaultProps = {\n  mix: {},\n  title: '',\n  isInfiniteLoaderEnabled: false,\n  isPaginationEnabled: false,\n  selectedFilters: {},\n  isLoading: false,\n  updatePage: function () {},\n  totalPages: 1,\n  loadPage: function () {},\n  requestPage: function () {},\n  loadPrevPage: function () {},\n  currentPage: 1,\n  isShowLoading: false,\n  isVisible: true,\n  isWidget: false\n}, _temp), \"Component/ProductList/Component\");\nexport default ProductList;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/ProductList/ProductList.component.js"],"names":["PropTypes","PureComponent","CategoryPagination","ProductListPage","MixType","DeviceType","FilterType","PagesType","observerThreshold","nodes","observedNodes","pagesIntersecting","renderProductPage","key","items","selectedFilters","props","pageNumber","renderPage","wrapperRef","node","componentDidUpdate","prevProps","isWidget","currentPage","device","prevCurrentPage","isMobile","window","scrollTo","top","behavior","isInfiniteLoaderEnabled","observePageChange","componentWillUnmount","observer","disconnect","updatePage","isLoading","threshold","_getThreshold","IntersectionObserver","entries","forEach","target","isIntersecting","page","Object","keys","find","index","indexOf","push","splice","minPage","Math","min","Infinity","rootMargin","updateObserver","currentNodes","values","length","includes","observe","reduce","acc","unobserve","hundredPercent","Array","from","_","i","renderLoadButton","isShowLoading","loadPrevPage","__","renderNoProducts","renderPages","pages","isVisible","pageRenders","map","max","_processProps","restProps","loadPage","mix","newProps","renderPagination","totalPages","requestPage","isPaginationEnabled","renderTitle","title","render","propTypes","isRequired","string","bool","func","number","defaultProps","ProductList"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CategoryPagination from 'Component/CategoryPagination';\nimport ProductListPage from 'Component/ProductListPage';\nimport { MixType } from 'Type/Common';\nimport { DeviceType } from 'Type/Device';\nimport { FilterType, PagesType } from 'Type/ProductList';\n\nimport { observerThreshold } from './ProductList.config';\n\nimport './ProductList.style';\n\n/**\n * List of category products\n * @class ProductList\n * @namespace Component/ProductList/Component\n */\nexport class ProductList extends PureComponent {\n    static propTypes = {\n        device: DeviceType.isRequired,\n        title: PropTypes.string,\n        pages: PagesType.isRequired,\n        selectedFilters: FilterType,\n        isLoading: PropTypes.bool,\n        updatePage: PropTypes.func,\n        totalPages: PropTypes.number,\n        loadPage: PropTypes.func,\n        requestPage: PropTypes.func,\n        loadPrevPage: PropTypes.func,\n        currentPage: PropTypes.number,\n        isShowLoading: PropTypes.bool,\n        isVisible: PropTypes.bool,\n        isInfiniteLoaderEnabled: PropTypes.bool,\n        isPaginationEnabled: PropTypes.bool,\n        isWidget: PropTypes.bool,\n        mix: MixType\n    };\n\n    static defaultProps = {\n        mix: {},\n        title: '',\n        isInfiniteLoaderEnabled: false,\n        isPaginationEnabled: false,\n        selectedFilters: {},\n        isLoading: false,\n        updatePage: () => {},\n        totalPages: 1,\n        loadPage: () => {},\n        requestPage: () => {},\n        loadPrevPage: () => {},\n        currentPage: 1,\n        isShowLoading: false,\n        isVisible: true,\n        isWidget: false\n    };\n\n    nodes = {};\n\n    observedNodes = [];\n\n    pagesIntersecting = [];\n\n    componentDidUpdate(prevProps) {\n        const { isWidget, currentPage, device } = this.props;\n        const { currentPage: prevCurrentPage } = prevProps;\n\n        // Scroll up on page change, ignore widgets\n        if (prevCurrentPage !== currentPage && !isWidget && !device.isMobile) {\n            window.scrollTo({ top: 0, behavior: 'smooth' });\n        }\n\n        const { isInfiniteLoaderEnabled } = this.props;\n\n        if (isInfiniteLoaderEnabled) {\n            this.observePageChange();\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.observer && this.observer.disconnect) {\n            this.observer.disconnect();\n        }\n\n        this.observer = null;\n    }\n\n    observePageChange() {\n        const { updatePage, isLoading } = this.props;\n\n        if (isLoading) {\n            this.pagesIntersecting = [];\n        }\n\n        if (!this.observer && 'IntersectionObserver' in window) {\n            const threshold = this._getThreshold();\n\n            this.observer = new IntersectionObserver((entries) => {\n                const { currentPage } = this.props;\n\n                entries.forEach(({ target, isIntersecting }) => {\n                    const page = +Object.keys(this.nodes).find((node) => this.nodes[node] === target);\n                    const index = this.pagesIntersecting.indexOf(page);\n\n                    if (isIntersecting && index === -1) {\n                        this.pagesIntersecting.push(page);\n                    }\n\n                    if (!isIntersecting && index > -1) {\n                        this.pagesIntersecting.splice(index, 1);\n                    }\n                });\n\n                const minPage = Math.min(...this.pagesIntersecting);\n\n                if (minPage < Infinity && minPage !== currentPage) {\n                    updatePage(minPage);\n                }\n            }, {\n                rootMargin: '0px',\n                threshold\n            });\n        }\n\n        this.updateObserver();\n    }\n\n    updateObserver() {\n        const currentNodes = Object.values(this.nodes);\n\n        if (!this.observer || currentNodes.length <= 0) {\n            return;\n        }\n\n        currentNodes.forEach((node) => {\n            if (node && !this.observedNodes.includes(node)) {\n                this.observer.observe(node);\n                this.observedNodes.push(node);\n            }\n        });\n\n        this.observedNodes = this.observedNodes.reduce((acc, node) => {\n            if (!currentNodes.includes(node)) {\n                this.observer.unobserve(node);\n            } else {\n                acc.push(node);\n            }\n\n            return acc;\n        }, []);\n    }\n\n    _getThreshold() {\n        const hundredPercent = 100;\n\n        return Array.from(\n            { length: (hundredPercent / observerThreshold) + 1 },\n            (_, i) => i * (observerThreshold / hundredPercent)\n        );\n    }\n\n    renderLoadButton() {\n        const {\n            isShowLoading,\n            isInfiniteLoaderEnabled,\n            loadPrevPage\n        } = this.props;\n\n        if (!isShowLoading || !isInfiniteLoaderEnabled) {\n            return null;\n        }\n\n        return (\n            <div\n              block=\"ProductList\"\n              elem=\"LoadButton\"\n              role=\"button\"\n              tabIndex=\"0\"\n              onKeyUp={ loadPrevPage }\n              onClick={ loadPrevPage }\n            >\n                { __('Load previous') }\n            </div>\n        );\n    }\n\n    renderNoProducts() {\n        return (\n            <div block=\"ProductList\">\n                <div\n                  block=\"ProductList\"\n                  elem=\"ProductsMissing\"\n                >\n                    <h2>{ __('We are sorry!') }</h2>\n                    <h3>{ __('There were no products found matching your request.') }</h3>\n                    <p>{ __('Please, try removing selected filters and try again!') }</p>\n                </div>\n            </div>\n        );\n    }\n\n    renderPages() {\n        const {\n            pages,\n            isVisible,\n            isLoading,\n            isInfiniteLoaderEnabled\n        } = this.props;\n\n        if (isLoading) {\n            return this.renderPage();\n        }\n\n        const pageRenders = Object.entries(pages).map(this.renderProductPage);\n\n        if (isVisible && isInfiniteLoaderEnabled) { // add placeholders to the end of pages if needed\n            const key = Math.max(Object.keys(pages)) + 1; // the key should match next page key\n            pageRenders.push(this.renderPage({ key }));\n        }\n\n        return pageRenders;\n    }\n\n    _processProps(props) {\n        const { isInfiniteLoaderEnabled } = this.props;\n\n        if (isInfiniteLoaderEnabled) {\n            return props;\n        }\n\n        // there must be no more then one page per screen\n        // if the \"isInfiniteLoaderEnabled\" is false\n        const { key, ...restProps } = props;\n        restProps.key = 0;\n        return restProps;\n    }\n\n    renderPage(props = {}) {\n        const {\n            isInfiniteLoaderEnabled,\n            loadPage,\n            isLoading,\n            isVisible,\n            currentPage,\n            mix\n        } = this.props;\n\n        const newProps = this._processProps(props);\n\n        return (\n            <ProductListPage\n              key={ currentPage }\n              isInfiniteLoaderEnabled={ isInfiniteLoaderEnabled }\n              updatePages={ loadPage }\n              isLoading={ isLoading }\n              isVisible={ isVisible }\n              mix={ mix }\n              { ...newProps }\n            />\n        );\n    }\n\n    renderProductPage = ([key, items = []]) => {\n        const { selectedFilters } = this.props;\n\n        const pageNumber = +key;\n\n        return this.renderPage({\n            selectedFilters,\n            pageNumber,\n            items,\n            key,\n            wrapperRef: (node) => {\n                this.nodes[pageNumber] = node;\n            }\n        });\n    };\n\n    renderPagination() {\n        const {\n            isLoading,\n            totalPages,\n            requestPage,\n            isPaginationEnabled\n        } = this.props;\n\n        if (!isPaginationEnabled) {\n            return null;\n        }\n\n        return (\n            <CategoryPagination\n              isLoading={ isLoading }\n              totalPages={ totalPages }\n              onPageSelect={ requestPage }\n            />\n        );\n    }\n\n    renderTitle() {\n        const { title } = this.props;\n\n        if (!title) {\n            return null;\n        }\n\n        return (\n            <h2>{ title }</h2>\n        );\n    }\n\n    render() {\n        const {\n            totalPages,\n            isLoading,\n            mix\n        } = this.props;\n\n        if (!isLoading && totalPages === 0) {\n            return this.renderNoProducts();\n        }\n\n        return (\n            <div\n              block=\"ProductList\"\n              mods={ { isLoading } }\n              mix={ mix }\n            >\n                { this.renderPagination() }\n                { this.renderTitle() }\n                { this.renderLoadButton() }\n                { this.renderPages() }\n                { this.renderPagination() }\n            </div>\n        );\n    }\n}\n\nexport default ProductList;\n"]},"metadata":{},"sourceType":"module"}