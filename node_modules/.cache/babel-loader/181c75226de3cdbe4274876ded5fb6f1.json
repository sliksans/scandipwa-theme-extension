{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CheckoutDeliveryOptions/CheckoutDeliveryOptions.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport CheckoutDeliveryOption from \"/home/arturs/scandiweb/scandipwa/src/component/CheckoutDeliveryOption\";\nimport StoreInPickUp from \"/home/arturs/scandiweb/scandipwa/src/component/StoreInPickUp\";\nimport { STORE_IN_PICK_UP_METHOD_CODE } from \"/home/arturs/scandiweb/scandipwa/src/component/StoreInPickUp/StoreInPickUp.config\";\nimport { addressType } from \"/home/arturs/scandiweb/scandipwa/src/type/Account\";\nimport { shippingMethodsType } from \"/home/arturs/scandiweb/scandipwa/src/type/Checkout\";\nimport \"./CheckoutDeliveryOptions.style\";\n/** #namespace Component/CheckoutDeliveryOptions/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CheckoutDeliveryOptions = Mosaic.middleware((_temp = _class = class CheckoutDeliveryOptions_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.shippingRenderMap = {\n      [STORE_IN_PICK_UP_METHOD_CODE]: this.renderStoreInPickUp.bind(this)\n    };\n\n    this.renderDeliveryOption = function (option) {\n      const {\n        selectedShippingMethodCode,\n        selectShippingMethod\n      } = _this.props;\n      const {\n        method_code\n      } = option;\n      const isSelected = selectedShippingMethodCode === method_code;\n      return /*#__PURE__*/_checkBEM(React, CheckoutDeliveryOption, {\n        key: method_code,\n        isSelected: isSelected,\n        option: option,\n        onClick: selectShippingMethod,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      });\n    };\n  }\n\n  renderHeading() {\n    return /*#__PURE__*/_checkBEM(React, \"h2\", {\n      block: \"Checkout\",\n      elem: \"Heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, __('Select shipping method'));\n  }\n\n  renderStoreInPickUp() {\n    const {\n      estimateAddress,\n      shippingMethods,\n      onStoreSelect,\n      onShippingMethodSelect,\n      setSelectedShippingMethodCode\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, StoreInPickUp, {\n      estimateAddress: estimateAddress,\n      shippingMethods: shippingMethods,\n      onStoreSelect: onStoreSelect,\n      onShippingMethodSelect: onShippingMethodSelect,\n      setSelectedShippingMethodCode: setSelectedShippingMethodCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderNoDeliveryOptions() {\n    return /*#__PURE__*/_checkBEM(React, \"p\", {\n      block: \"CheckoutDeliveryOptions\",\n      elem: \"NoOptions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, __('There are no shipping methods available, try different address.'));\n  }\n\n  renderShippingMethods() {\n    const {\n      shippingMethods\n    } = this.props;\n\n    if (!shippingMethods.length) {\n      return this.renderNoDeliveryOptions();\n    }\n\n    return shippingMethods.map(this.renderDeliveryOption);\n  }\n\n  renderSelectedShippingMethod() {\n    const {\n      selectedShippingMethodCode\n    } = this.props;\n    const render = this.shippingRenderMap[selectedShippingMethodCode];\n\n    if (!render) {\n      return null;\n    }\n\n    return render();\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"CheckoutDeliveryOptions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, this.renderHeading(), /*#__PURE__*/_checkBEM(React, \"ul\", {\n      block: \"CheckoutPayments\",\n      elem: \"Methods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, this.renderShippingMethods()), this.renderSelectedShippingMethod());\n  }\n\n}, _class.propTypes = {\n  shippingMethods: shippingMethodsType.isRequired,\n  selectShippingMethod: PropTypes.func.isRequired,\n  onStoreSelect: PropTypes.func.isRequired,\n  onShippingMethodSelect: PropTypes.func.isRequired,\n  setSelectedShippingMethodCode: PropTypes.func.isRequired,\n  selectedShippingMethodCode: PropTypes.string,\n  estimateAddress: addressType.isRequired\n}, _class.defaultProps = {\n  selectedShippingMethodCode: null\n}, _temp), \"Component/CheckoutDeliveryOptions/Component\");\nexport default CheckoutDeliveryOptions;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CheckoutDeliveryOptions/CheckoutDeliveryOptions.component.js"],"names":["PropTypes","PureComponent","CheckoutDeliveryOption","StoreInPickUp","STORE_IN_PICK_UP_METHOD_CODE","addressType","shippingMethodsType","shippingRenderMap","renderStoreInPickUp","bind","renderDeliveryOption","option","selectedShippingMethodCode","selectShippingMethod","props","method_code","isSelected","renderHeading","__","estimateAddress","shippingMethods","onStoreSelect","onShippingMethodSelect","setSelectedShippingMethodCode","renderNoDeliveryOptions","renderShippingMethods","length","map","renderSelectedShippingMethod","render","propTypes","isRequired","func","string","defaultProps","CheckoutDeliveryOptions"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CheckoutDeliveryOption from 'Component/CheckoutDeliveryOption';\nimport StoreInPickUp from 'Component/StoreInPickUp';\nimport { STORE_IN_PICK_UP_METHOD_CODE } from 'Component/StoreInPickUp/StoreInPickUp.config';\nimport { addressType } from 'Type/Account';\nimport { shippingMethodsType } from 'Type/Checkout';\n\nimport './CheckoutDeliveryOptions.style';\n\n/** @namespace Component/CheckoutDeliveryOptions/Component */\nexport class CheckoutDeliveryOptions extends PureComponent {\n    static propTypes = {\n        shippingMethods: shippingMethodsType.isRequired,\n        selectShippingMethod: PropTypes.func.isRequired,\n        onStoreSelect: PropTypes.func.isRequired,\n        onShippingMethodSelect: PropTypes.func.isRequired,\n        setSelectedShippingMethodCode: PropTypes.func.isRequired,\n        selectedShippingMethodCode: PropTypes.string,\n        estimateAddress: addressType.isRequired\n    };\n\n    static defaultProps = {\n        selectedShippingMethodCode: null\n    };\n\n    shippingRenderMap = {\n        [STORE_IN_PICK_UP_METHOD_CODE]: this.renderStoreInPickUp.bind(this)\n    };\n\n    renderHeading() {\n        return (\n            <h2 block=\"Checkout\" elem=\"Heading\">\n                { __('Select shipping method') }\n            </h2>\n        );\n    }\n\n    renderStoreInPickUp() {\n        const {\n            estimateAddress,\n            shippingMethods,\n            onStoreSelect,\n            onShippingMethodSelect,\n            setSelectedShippingMethodCode\n        } = this.props;\n\n        return (\n            <StoreInPickUp\n              estimateAddress={ estimateAddress }\n              shippingMethods={ shippingMethods }\n              onStoreSelect={ onStoreSelect }\n              onShippingMethodSelect={ onShippingMethodSelect }\n              setSelectedShippingMethodCode={ setSelectedShippingMethodCode }\n            />\n        );\n    }\n\n    renderDeliveryOption = (option) => {\n        const {\n            selectedShippingMethodCode,\n            selectShippingMethod\n        } = this.props;\n\n        const { method_code } = option;\n        const isSelected = selectedShippingMethodCode === method_code;\n\n        return (\n            <CheckoutDeliveryOption\n              key={ method_code }\n              isSelected={ isSelected }\n              option={ option }\n              onClick={ selectShippingMethod }\n            />\n        );\n    };\n\n    renderNoDeliveryOptions() {\n        return (\n            <p block=\"CheckoutDeliveryOptions\" elem=\"NoOptions\">\n                { __('There are no shipping methods available, try different address.') }\n            </p>\n        );\n    }\n\n    renderShippingMethods() {\n        const { shippingMethods } = this.props;\n        if (!shippingMethods.length) {\n            return this.renderNoDeliveryOptions();\n        }\n\n        return shippingMethods.map(this.renderDeliveryOption);\n    }\n\n    renderSelectedShippingMethod() {\n        const { selectedShippingMethodCode } = this.props;\n        const render = this.shippingRenderMap[selectedShippingMethodCode];\n        if (!render) {\n            return null;\n        }\n\n        return render();\n    }\n\n    render() {\n        return (\n            <div block=\"CheckoutDeliveryOptions\">\n                { this.renderHeading() }\n                <ul block=\"CheckoutPayments\" elem=\"Methods\">\n                    { this.renderShippingMethods() }\n                </ul>\n                { this.renderSelectedShippingMethod() }\n            </div>\n        );\n    }\n}\n\nexport default CheckoutDeliveryOptions;\n"]},"metadata":{},"sourceType":"module"}