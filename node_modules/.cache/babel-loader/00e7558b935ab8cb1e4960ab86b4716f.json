{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nexport const UPDATE_URL_REWRITE = 'UPDATE_URL_REWRITE';\nexport const IS_LOADING_URL_REWRITE = 'IS_LOADING_URL_REWRITE';\n/** #namespace Store/UrlRewrites/Action/updateUrlRewrite */\n\nexport const updateUrlRewrite = Mosaic.middleware(function (urlRewrite, requestedUrl) {\n  return {\n    type: UPDATE_URL_REWRITE,\n    urlRewrite,\n    requestedUrl\n  };\n}, \"Store/UrlRewrites/Action/updateUrlRewrite\");\n/** #namespace Store/UrlRewrites/Action/clearUrlRewrite */\n\nexport const setIsUrlRewritesLoading = Mosaic.middleware(function (isLoading) {\n  return {\n    type: IS_LOADING_URL_REWRITE,\n    isLoading\n  };\n}, \"Store/UrlRewrites/Action/clearUrlRewrite\");","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/store/UrlRewrites/UrlRewrites.action.js"],"names":["UPDATE_URL_REWRITE","IS_LOADING_URL_REWRITE","updateUrlRewrite","urlRewrite","requestedUrl","type","setIsUrlRewritesLoading","isLoading"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP;;AACA,OAAO,MAAMC,gBAAgB,qBAAG,UAACC,UAAD,EAAaC,YAAb;AAAA,SAA+B;AAC3DC,IAAAA,IAAI,EAAEL,kBADqD;AAE3DG,IAAAA,UAF2D;AAG3DC,IAAAA;AAH2D,GAA/B;AAAA,CAAH,8CAAtB;AAMP;;AACA,OAAO,MAAME,uBAAuB,qBAAG,UAACC,SAAD;AAAA,SAAgB;AACnDF,IAAAA,IAAI,EAAEJ,sBAD6C;AAEnDM,IAAAA;AAFmD,GAAhB;AAAA,CAAH,6CAA7B","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport const UPDATE_URL_REWRITE = 'UPDATE_URL_REWRITE';\nexport const IS_LOADING_URL_REWRITE = 'IS_LOADING_URL_REWRITE';\n\n/** @namespace Store/UrlRewrites/Action/updateUrlRewrite */\nexport const updateUrlRewrite = (urlRewrite, requestedUrl) => ({\n    type: UPDATE_URL_REWRITE,\n    urlRewrite,\n    requestedUrl\n});\n\n/** @namespace Store/UrlRewrites/Action/clearUrlRewrite */\nexport const setIsUrlRewritesLoading = (isLoading) => ({\n    type: IS_LOADING_URL_REWRITE,\n    isLoading\n});\n"]},"metadata":{},"sourceType":"module"}