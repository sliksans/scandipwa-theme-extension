{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport BrowserDatabase from \"/home/arturs/scandiweb/scandipwa/src/util/BrowserDatabase\";\nimport { ONE_MONTH_IN_SECONDS } from \"/home/arturs/scandiweb/scandipwa/src/util/Request/QueryDispatcher\";\nimport { GET_ORDER_LIST } from \"./Order.action\";\nexport const ORDERS = 'orders';\n/** #namespace Store/Order/Reducer/getFormattedDate */\n\nexport const getFormattedDate = Mosaic.middleware(function (rawDate = '') {\n  const date = new Date(rawDate.replace(/\\s/, 'T'));\n  const RADIX = 10;\n\n  const addLeadingZero = function (value) {\n    return value < RADIX ? `0${value}` : value;\n  };\n\n  const day = addLeadingZero(date.getDate());\n  const month = addLeadingZero(date.getMonth() + 1);\n  return `${date.getFullYear()}-${month}-${day}`;\n}, \"Store/Order/Reducer/getFormattedDate\");\n/** #namespace Store/Order/Reducer/formatOrders */\n\nexport const formatOrders = Mosaic.middleware(function (orders) {\n  return orders.reduce(function (acc, order) {\n    const {\n      base_order_info\n    } = order;\n    const {\n      created_at\n    } = base_order_info;\n    const formattedDate = getFormattedDate(created_at);\n    return [...acc, { ...order,\n      base_order_info: { ...order.base_order_info,\n        created_at: formattedDate\n      }\n    }];\n  }, []);\n}, \"Store/Order/Reducer/formatOrders\");\nexport const orderList = BrowserDatabase.getItem(ORDERS) || [];\n/** #namespace Store/Order/Reducer/getInitialState */\n\nexport const getInitialState = Mosaic.middleware(function () {\n  return {\n    orderList,\n    isLoading: !orderList.length\n  };\n}, \"Store/Order/Reducer/getInitialState\");\n/** #namespace Store/Order/Reducer */\n\nexport const OrderReducer = Mosaic.middleware(_c = function (state = getInitialState(), action) {\n  const {\n    type,\n    orderList,\n    status\n  } = action;\n\n  switch (type) {\n    case GET_ORDER_LIST:\n      const {\n        items = []\n      } = orderList;\n      const formattedOrders = formatOrders(items);\n      BrowserDatabase.setItem(formattedOrders, ORDERS, ONE_MONTH_IN_SECONDS);\n      return { ...state,\n        isLoading: status,\n        orderList: formattedOrders\n      };\n\n    default:\n      return state;\n  }\n}, \"Store/Order/Reducer\");\n_c2 = OrderReducer;\nexport default OrderReducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderReducer$\");\n$RefreshReg$(_c2, \"OrderReducer\");","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/store/Order/Order.reducer.js"],"names":["BrowserDatabase","ONE_MONTH_IN_SECONDS","GET_ORDER_LIST","ORDERS","getFormattedDate","rawDate","date","Date","replace","RADIX","addLeadingZero","value","day","getDate","month","getMonth","getFullYear","formatOrders","orders","reduce","acc","order","base_order_info","created_at","formattedDate","orderList","getItem","getInitialState","isLoading","length","OrderReducer","state","action","type","status","items","formattedOrders","setItem"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,eAAP;AACA,SAASC,oBAAT;AAEA,SAASC,cAAT;AAEA,OAAO,MAAMC,MAAM,GAAG,QAAf;AAEP;;AACA,OAAO,MAAMC,gBAAgB,qBAAG,UAACC,OAAO,GAAG,EAAX,EAAkB;AAC9C,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,OAAO,CAACG,OAAR,CAAgB,IAAhB,EAAsB,GAAtB,CAAT,CAAb;AACA,QAAMC,KAAK,GAAG,EAAd;;AAEA,QAAMC,cAAc,GAAG,UAACC,KAAD;AAAA,WAAYA,KAAK,GAAGF,KAAR,GAAiB,IAAGE,KAAM,EAA1B,GAA8BA,KAA1C;AAAA,GAAvB;;AAEA,QAAMC,GAAG,GAAGF,cAAc,CAACJ,IAAI,CAACO,OAAL,EAAD,CAA1B;AACA,QAAMC,KAAK,GAAGJ,cAAc,CAACJ,IAAI,CAACS,QAAL,KAAkB,CAAnB,CAA5B;AAEA,SAAQ,GAAET,IAAI,CAACU,WAAL,EAAmB,IAAGF,KAAM,IAAGF,GAAI,EAA7C;AACH,CAV4B,yCAAtB;AAYP;;AACA,OAAO,MAAMK,YAAY,qBAAG,UAACC,MAAD;AAAA,SAAYA,MAAM,CAACC,MAAP,CAAc,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAClE,UAAM;AAAEC,MAAAA;AAAF,QAAsBD,KAA5B;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAiBD,eAAvB;AACA,UAAME,aAAa,GAAGpB,gBAAgB,CAACmB,UAAD,CAAtC;AAEA,WAAO,CACH,GAAGH,GADA,EAEH,EACI,GAAGC,KADP;AAEIC,MAAAA,eAAe,EAAE,EACb,GAAGD,KAAK,CAACC,eADI;AAEbC,QAAAA,UAAU,EAAEC;AAFC;AAFrB,KAFG,CAAP;AAUH,GAfuC,EAerC,EAfqC,CAAZ;AAAA,CAAH,qCAAlB;AAiBP,OAAO,MAAMC,SAAS,GAAGzB,eAAe,CAAC0B,OAAhB,CAAwBvB,MAAxB,KAAmC,EAArD;AAEP;;AACA,OAAO,MAAMwB,eAAe,qBAAG;AAAA,SAAO;AAClCF,IAAAA,SADkC;AAElCG,IAAAA,SAAS,EAAE,CAACH,SAAS,CAACI;AAFY,GAAP;AAAA,CAAH,wCAArB;AAKP;;AACA,OAAO,MAAMC,YAAY,0BAAG,UACxBC,KAAK,GAAGJ,eAAe,EADC,EAExBK,MAFwB,EAGvB;AACD,QAAM;AACFC,IAAAA,IADE;AAEFR,IAAAA,SAFE;AAGFS,IAAAA;AAHE,MAIFF,MAJJ;;AAMA,UAAQC,IAAR;AACA,SAAK/B,cAAL;AACI,YAAM;AAAEiC,QAAAA,KAAK,GAAG;AAAV,UAAiBV,SAAvB;AACA,YAAMW,eAAe,GAAGnB,YAAY,CAACkB,KAAD,CAApC;AAEAnC,MAAAA,eAAe,CAACqC,OAAhB,CAAwBD,eAAxB,EAAyCjC,MAAzC,EAAiDF,oBAAjD;AAEA,aAAO,EACH,GAAG8B,KADA;AAEHH,QAAAA,SAAS,EAAEM,MAFR;AAGHT,QAAAA,SAAS,EAAEW;AAHR,OAAP;;AAMJ;AACI,aAAOL,KAAP;AAdJ;AAgBH,CA1BwB,wBAAlB;MAAMD,Y;AA4Bb,eAAeA,YAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport BrowserDatabase from 'Util/BrowserDatabase';\nimport { ONE_MONTH_IN_SECONDS } from 'Util/Request/QueryDispatcher';\n\nimport { GET_ORDER_LIST } from './Order.action';\n\nexport const ORDERS = 'orders';\n\n/** @namespace Store/Order/Reducer/getFormattedDate */\nexport const getFormattedDate = (rawDate = '') => {\n    const date = new Date(rawDate.replace(/\\s/, 'T'));\n    const RADIX = 10;\n\n    const addLeadingZero = (value) => (value < RADIX ? `0${value}` : value);\n\n    const day = addLeadingZero(date.getDate());\n    const month = addLeadingZero(date.getMonth() + 1);\n\n    return `${date.getFullYear()}-${month}-${day}`;\n};\n\n/** @namespace Store/Order/Reducer/formatOrders */\nexport const formatOrders = (orders) => orders.reduce((acc, order) => {\n    const { base_order_info } = order;\n    const { created_at } = base_order_info;\n    const formattedDate = getFormattedDate(created_at);\n\n    return [\n        ...acc,\n        {\n            ...order,\n            base_order_info: {\n                ...order.base_order_info,\n                created_at: formattedDate\n            }\n        }\n    ];\n}, []);\n\nexport const orderList = BrowserDatabase.getItem(ORDERS) || [];\n\n/** @namespace Store/Order/Reducer/getInitialState */\nexport const getInitialState = () => ({\n    orderList,\n    isLoading: !orderList.length\n});\n\n/** @namespace Store/Order/Reducer */\nexport const OrderReducer = (\n    state = getInitialState(),\n    action\n) => {\n    const {\n        type,\n        orderList,\n        status\n    } = action;\n\n    switch (type) {\n    case GET_ORDER_LIST:\n        const { items = [] } = orderList;\n        const formattedOrders = formatOrders(items);\n\n        BrowserDatabase.setItem(formattedOrders, ORDERS, ONE_MONTH_IN_SECONDS);\n\n        return {\n            ...state,\n            isLoading: status,\n            orderList: formattedOrders\n        };\n\n    default:\n        return state;\n    }\n};\n\nexport default OrderReducer;\n"]},"metadata":{},"sourceType":"module"}