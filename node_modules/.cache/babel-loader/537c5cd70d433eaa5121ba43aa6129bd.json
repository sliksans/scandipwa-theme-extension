{"ast":null,"code":"import _asyncToGenerator from \"/home/arturs/scandiweb/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountSignIn/MyAccountSignIn.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { showNotification } from \"/home/arturs/scandiweb/scandipwa/src/store/Notification/Notification.action\";\nimport { getErrorMessage } from \"/home/arturs/scandiweb/scandipwa/src/util/Request\";\nimport MyAccountSignIn from \"./MyAccountSignIn.component\";\nexport const MyAccountDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/arturs/scandiweb/scandipwa/src/store/MyAccount/MyAccount.dispatcher\");\n/** #namespace Component/MyAccountSignIn/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapStateToProps = Mosaic.middleware(function (state) {\n  return {\n    isEmailAvailable: state.CheckoutReducer.isEmailAvailable\n  };\n}, \"Component/MyAccountSignIn/Container/mapStateToProps\");\n/** #namespace Component/MyAccountSignIn/Container/mapDispatchtoProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapDispatchToProps = Mosaic.middleware(function (dispatch) {\n  return {\n    signIn: function (options) {\n      return MyAccountDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.signIn(options, dispatch);\n      });\n    },\n    showNotification: function (type, message) {\n      return dispatch(showNotification(type, message));\n    }\n  };\n}, \"Component/MyAccountSignIn/Container/mapDispatchtoProps\");\n/** #namespace Component/MyAccountSignIn/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const MyAccountSignInContainer = Mosaic.middleware((_temp = _class = class MyAccountSignInContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.containerFunctions = {\n      onSignInSuccess: this.onSignInSuccess.bind(this),\n      onSignInAttempt: this.onSignInAttempt.bind(this)\n    };\n\n    this.containerProps = function () {\n      const {\n        state,\n        onFormError,\n        handleForgotPassword,\n        handleCreateAccount,\n        isCheckout,\n        setLoadingState,\n        emailValue,\n        handleEmailInput\n      } = _this.props;\n      return {\n        state,\n        onFormError,\n        handleForgotPassword,\n        handleCreateAccount,\n        isCheckout,\n        setLoadingState,\n        emailValue,\n        handleEmailInput\n      };\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      isCheckout,\n      isEmailAvailable,\n      setSignInState\n    } = this.props;\n    const {\n      isEmailAvailable: prevIsEmailAvailable\n    } = prevProps;\n\n    if (isCheckout && isEmailAvailable && !prevIsEmailAvailable) {\n      setSignInState('');\n    }\n  }\n\n  onSignInSuccess(fields) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        signIn,\n        showNotification,\n        onSignIn,\n        setLoadingState\n      } = _this2.props;\n\n      try {\n        yield signIn(fields);\n        onSignIn();\n      } catch (error) {\n        showNotification('error', getErrorMessage(error));\n      }\n\n      setLoadingState(false);\n    })();\n  }\n\n  onSignInAttempt() {\n    const {\n      setLoadingState\n    } = this.props;\n    setLoadingState(true);\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, MyAccountSignIn, Object.assign({}, this.containerFunctions, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  state: PropTypes.string.isRequired,\n  onFormError: PropTypes.func.isRequired,\n  handleForgotPassword: PropTypes.func.isRequired,\n  handleCreateAccount: PropTypes.func.isRequired,\n  isCheckout: PropTypes.bool.isRequired,\n  signIn: PropTypes.func.isRequired,\n  showNotification: PropTypes.func.isRequired,\n  onSignIn: PropTypes.func.isRequired,\n  setLoadingState: PropTypes.func.isRequired,\n  emailValue: PropTypes.string,\n  isEmailAvailable: PropTypes.bool,\n  setSignInState: PropTypes.func,\n  handleEmailInput: PropTypes.func\n}, _class.defaultProps = {\n  emailValue: '',\n  isEmailAvailable: true,\n  setSignInState: function () {},\n  handleEmailInput: function () {}\n}, _temp), \"Component/MyAccountSignIn/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountSignInContainer);","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/MyAccountSignIn/MyAccountSignIn.container.js"],"names":["PropTypes","PureComponent","connect","showNotification","getErrorMessage","MyAccountSignIn","MyAccountDispatcher","mapStateToProps","state","isEmailAvailable","CheckoutReducer","mapDispatchToProps","dispatch","signIn","options","then","default","dispatcher","type","message","containerFunctions","onSignInSuccess","bind","onSignInAttempt","containerProps","onFormError","handleForgotPassword","handleCreateAccount","isCheckout","setLoadingState","emailValue","handleEmailInput","props","componentDidUpdate","prevProps","setSignInState","prevIsEmailAvailable","fields","onSignIn","error","render","propTypes","string","isRequired","func","bool","defaultProps","MyAccountSignInContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { getErrorMessage } from 'Util/Request';\n\nimport MyAccountSignIn from './MyAccountSignIn.component';\n\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Component/MyAccountSignIn/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = (state) => ({\n    isEmailAvailable: state.CheckoutReducer.isEmailAvailable\n});\n\n/** @namespace Component/MyAccountSignIn/Container/mapDispatchtoProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({\n    signIn: (options) => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.signIn(options, dispatch)\n    ),\n    showNotification: (type, message) => dispatch(showNotification(type, message))\n});\n\n/** @namespace Component/MyAccountSignIn/Container */\nexport class MyAccountSignInContainer extends PureComponent {\n    static propTypes = {\n        state: PropTypes.string.isRequired,\n        onFormError: PropTypes.func.isRequired,\n        handleForgotPassword: PropTypes.func.isRequired,\n        handleCreateAccount: PropTypes.func.isRequired,\n        isCheckout: PropTypes.bool.isRequired,\n        signIn: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired,\n        onSignIn: PropTypes.func.isRequired,\n        setLoadingState: PropTypes.func.isRequired,\n        emailValue: PropTypes.string,\n        isEmailAvailable: PropTypes.bool,\n        setSignInState: PropTypes.func,\n        handleEmailInput: PropTypes.func\n    };\n\n    static defaultProps = {\n        emailValue: '',\n        isEmailAvailable: true,\n        setSignInState: () => {},\n        handleEmailInput: () => {}\n    };\n\n    containerFunctions = {\n        onSignInSuccess: this.onSignInSuccess.bind(this),\n        onSignInAttempt: this.onSignInAttempt.bind(this)\n    };\n\n    componentDidUpdate(prevProps) {\n        const { isCheckout, isEmailAvailable, setSignInState } = this.props;\n        const { isEmailAvailable: prevIsEmailAvailable } = prevProps;\n\n        if (isCheckout && isEmailAvailable && !prevIsEmailAvailable) {\n            setSignInState('');\n        }\n    }\n\n    containerProps = () => {\n        const {\n            state,\n            onFormError,\n            handleForgotPassword,\n            handleCreateAccount,\n            isCheckout,\n            setLoadingState,\n            emailValue,\n            handleEmailInput\n        } = this.props;\n\n        return {\n            state,\n            onFormError,\n            handleForgotPassword,\n            handleCreateAccount,\n            isCheckout,\n            setLoadingState,\n            emailValue,\n            handleEmailInput\n        };\n    };\n\n    async onSignInSuccess(fields) {\n        const {\n            signIn,\n            showNotification,\n            onSignIn,\n            setLoadingState\n        } = this.props;\n\n        try {\n            await signIn(fields);\n            onSignIn();\n        } catch (error) {\n            showNotification('error', getErrorMessage(error));\n        }\n\n        setLoadingState(false);\n    }\n\n    onSignInAttempt() {\n        const { setLoadingState } = this.props;\n        setLoadingState(true);\n    }\n\n    render() {\n        return (\n            <MyAccountSignIn\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountSignInContainer);\n"]},"metadata":{},"sourceType":"module"}