{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CategorySort/CategorySort.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport CategorySort from \"./CategorySort.component\";\n/** #namespace Component/CategorySort/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const CategorySortContainer = Mosaic.middleware((_temp = _class = class CategorySortContainer_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.containerProps = function () {\n      return {\n        selectOptions: _this._prepareOptions()\n      };\n    };\n  }\n\n  _getLabel(option) {\n    const {\n      id,\n      label: pureLabel\n    } = option; // eslint-disable-next-line fp/no-let\n\n    let [label] = pureLabel.split(' ');\n    label = label.charAt(0).toUpperCase() + label.slice(1);\n\n    switch (id) {\n      case 'name':\n        return {\n          asc: __('Name: A to Z', label),\n          desc: __('Name: Z to A', label)\n        };\n\n      case 'position':\n        return {\n          asc: __('Best match')\n        };\n\n      case 'price':\n        return {\n          asc: __('%s: Low to High', label),\n          desc: __('%s: High to Low', label)\n        };\n\n      default:\n        return {\n          asc: __('%s: Ascending', label),\n          desc: __('%s: Descending', label)\n        };\n    }\n  }\n\n  _prepareOptions() {\n    var _this2 = this;\n\n    const {\n      sortFields\n    } = this.props;\n\n    if (!sortFields) {\n      return [];\n    }\n\n    const selectOptions = sortFields.reduce(function (acc, option) {\n      const {\n        id\n      } = option;\n\n      const label = _this2._getLabel(option);\n\n      const {\n        asc,\n        desc\n      } = label;\n\n      if (asc) {\n        acc.push({\n          id: `ASC ${id}`,\n          name: id,\n          value: `ASC ${id}`,\n          label: asc\n        });\n      }\n\n      if (desc) {\n        acc.push({\n          id: `DESC ${id}`,\n          name: id,\n          value: `DESC ${id}`,\n          label: desc\n        });\n      }\n\n      return acc;\n    }, []);\n    return selectOptions;\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, CategorySort, Object.assign({}, this.props, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}, _class.propTypes = {\n  sortFields: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    label: PropTypes.string\n  }))])\n}, _class.defaultProps = {\n  sortFields: []\n}, _temp), \"Component/CategorySort/Container\");\nexport default CategorySortContainer;","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/component/CategorySort/CategorySort.container.js"],"names":["PropTypes","PureComponent","CategorySort","containerProps","selectOptions","_prepareOptions","_getLabel","option","id","label","pureLabel","split","charAt","toUpperCase","slice","asc","__","desc","sortFields","props","reduce","acc","push","name","value","render","propTypes","oneOfType","bool","arrayOf","shape","string","defaultProps","CategorySortContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport CategorySort from './CategorySort.component';\n\n/** @namespace Component/CategorySort/Container */\nexport class CategorySortContainer extends PureComponent {\n    static propTypes = {\n        sortFields: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.arrayOf(PropTypes.shape({\n                id: PropTypes.string,\n                label: PropTypes.string\n            }))\n        ])\n    };\n\n    static defaultProps = {\n        sortFields: []\n    };\n\n    containerProps = () => ({\n        selectOptions: this._prepareOptions()\n    });\n\n    _getLabel(option) {\n        const { id, label: pureLabel } = option;\n\n        // eslint-disable-next-line fp/no-let\n        let [label] = pureLabel.split(' ');\n        label = label.charAt(0).toUpperCase() + label.slice(1);\n\n        switch (id) {\n        case 'name':\n            return {\n                asc: __('Name: A to Z', label),\n                desc: __('Name: Z to A', label)\n            };\n        case 'position':\n            return {\n                asc: __('Best match')\n            };\n        case 'price':\n            return {\n                asc: __('%s: Low to High', label),\n                desc: __('%s: High to Low', label)\n            };\n        default:\n            return {\n                asc: __('%s: Ascending', label),\n                desc: __('%s: Descending', label)\n            };\n        }\n    }\n\n    _prepareOptions() {\n        const { sortFields } = this.props;\n\n        if (!sortFields) {\n            return [];\n        }\n\n        const selectOptions = sortFields.reduce((acc, option) => {\n            const { id } = option;\n            const label = this._getLabel(option);\n            const { asc, desc } = label;\n\n            if (asc) {\n                acc.push({\n                    id: `ASC ${id}`,\n                    name: id,\n                    value: `ASC ${id}`,\n                    label: asc\n                });\n            }\n\n            if (desc) {\n                acc.push({\n                    id: `DESC ${id}`,\n                    name: id,\n                    value: `DESC ${id}`,\n                    label: desc\n                });\n            }\n\n            return acc;\n        }, []);\n\n        return selectOptions;\n    }\n\n    render() {\n        return (\n            <CategorySort\n              { ...this.props }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default CategorySortContainer;\n"]},"metadata":{},"sourceType":"module"}