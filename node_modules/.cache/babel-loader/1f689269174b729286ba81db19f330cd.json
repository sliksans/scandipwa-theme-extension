{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/* eslint-disable import/prefer-default-export */\nimport currencyMap from \"./Price.config\";\n/** #namespace Util/Price/formatCurrency */\n\nexport const formatCurrency = Mosaic.middleware(function (currency = 'USD') {\n  return currencyMap[currency];\n}, \"Util/Price/formatCurrency\");\n/** #namespace Util/Price/formatPrice */\n\nexport const formatPrice = Mosaic.middleware(function (price, currency = 'USD') {\n  const language = navigator.languages ? navigator.languages[0] : navigator.language;\n  return new Intl.NumberFormat(language, {\n    style: 'currency',\n    currency\n  }).format(price);\n}, \"Util/Price/formatPrice\");\n/**\n * Calculate final price\n * @param {Number} discount discount percentage\n * @param {Number} min minimum price\n * @param {Number} reg regular price\n * @return {Number} final price\n * #namespace Util/Price/calculateFinalPrice\n */\n\nexport const calculateFinalPrice = Mosaic.middleware(function (discount, min, reg) {\n  return discount ? min : reg;\n}, \"Util/Price/calculateFinalPrice\");\n/**\n * Calculate final price\n * @param {Number} price\n * @return {Number} price rounded to 2 digits\n * #namespace Util/Price/roundPrice\n */\n\nexport const roundPrice = Mosaic.middleware(function (price) {\n  return parseFloat(price).toFixed(2);\n}, \"Util/Price/roundPrice\");","map":{"version":3,"sources":["/home/arturs/scandiweb/scandipwa/node_modules/@scandipwa/scandipwa/src/util/Price/Price.js"],"names":["currencyMap","formatCurrency","currency","formatPrice","price","language","navigator","languages","Intl","NumberFormat","style","format","calculateFinalPrice","discount","min","reg","roundPrice","parseFloat","toFixed"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,WAAP;AAEA;;AACA,OAAO,MAAMC,cAAc,qBAAG,UAACC,QAAQ,GAAG,KAAZ;AAAA,SAAsBF,WAAW,CAACE,QAAD,CAAjC;AAAA,CAAH,8BAApB;AAEP;;AACA,OAAO,MAAMC,WAAW,qBAAG,UAACC,KAAD,EAAQF,QAAQ,GAAG,KAAnB,EAA6B;AACpD,QAAMG,QAAQ,GAAGC,SAAS,CAACC,SAAV,GAAsBD,SAAS,CAACC,SAAV,CAAoB,CAApB,CAAtB,GAA+CD,SAAS,CAACD,QAA1E;AACA,SAAO,IAAIG,IAAI,CAACC,YAAT,CAAsBJ,QAAtB,EAAgC;AAAEK,IAAAA,KAAK,EAAE,UAAT;AAAqBR,IAAAA;AAArB,GAAhC,EAAiES,MAAjE,CAAwEP,KAAxE,CAAP;AACH,CAHuB,2BAAjB;AAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMQ,mBAAmB,qBAAG,UAACC,QAAD,EAAWC,GAAX,EAAgBC,GAAhB;AAAA,SAAyBF,QAAQ,GAAGC,GAAH,GAASC,GAA1C;AAAA,CAAH,mCAAzB;AAEP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,qBAAG,UAACZ,KAAD;AAAA,SAAWa,UAAU,CAACb,KAAD,CAAV,CAAkBc,OAAlB,CAA0B,CAA1B,CAAX;AAAA,CAAH,0BAAhB","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/* eslint-disable import/prefer-default-export */\nimport currencyMap from './Price.config';\n\n/** @namespace Util/Price/formatCurrency */\nexport const formatCurrency = (currency = 'USD') => currencyMap[currency];\n\n/** @namespace Util/Price/formatPrice */\nexport const formatPrice = (price, currency = 'USD') => {\n    const language = navigator.languages ? navigator.languages[0] : navigator.language;\n    return new Intl.NumberFormat(language, { style: 'currency', currency }).format(price);\n};\n\n/**\n * Calculate final price\n * @param {Number} discount discount percentage\n * @param {Number} min minimum price\n * @param {Number} reg regular price\n * @return {Number} final price\n * @namespace Util/Price/calculateFinalPrice\n */\nexport const calculateFinalPrice = (discount, min, reg) => (discount ? min : reg);\n\n/**\n * Calculate final price\n * @param {Number} price\n * @return {Number} price rounded to 2 digits\n * @namespace Util/Price/roundPrice\n */\nexport const roundPrice = (price) => parseFloat(price).toFixed(2);\n"]},"metadata":{},"sourceType":"module"}