{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/SharedTransition/SharedTransition.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\nimport { SHARED_ELEMENT_TRANSITION } from \"./SharedTransition.config\";\nimport \"./SharedTransition.style\";\n/** #namespace Component/SharedTransition/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const SharedTransition = Mosaic.middleware((_temp = _class = class SharedTransition_ extends Mosaic.Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.sharedContainer = /*#__PURE__*/createRef();\n    this.animationSpeed = SHARED_ELEMENT_TRANSITION;\n    this.setDestinationTransform = this.setTransform.bind(this, 'destinationPosition');\n    this.setStartingTransform = this.setTransform.bind(this, 'startingPosition');\n\n    this.cleanUpTransition = function () {\n      const {\n        current: wrapper\n      } = _this.sharedContainer;\n      const {\n        cleanUpTransition\n      } = _this.props;\n      const range = document.createRange();\n      range.selectNodeContents(wrapper);\n      range.deleteContents();\n      _this.transitionInAction = false;\n      cleanUpTransition();\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.transitionInAction) {\n      return;\n    }\n\n    this.updateSharedElement();\n  }\n\n  setTransform(key) {\n    const {\n      state: {\n        [key]: {\n          width,\n          height,\n          left,\n          top\n        }\n      }\n    } = this.props;\n    this.sharedContainer.current.style.cssText = `\n            --shared-element-width: ${width}px;\n            --shared-element-height: ${height}px;\n            --shared-element-top: ${top}px;\n            --shared-element-left: ${left}px;\n            --shared-element-animation-speed: ${this.animationSpeed}ms;\n        `;\n  }\n\n  updateSharedElement() {\n    const {\n      state: {\n        sharedElementDestination,\n        sharedElement\n      }\n    } = this.props;\n    const {\n      current: wrapper\n    } = this.sharedContainer;\n\n    if (!sharedElement || !sharedElementDestination || !wrapper) {\n      // this.cleanUpTransition();\n      return;\n    }\n\n    this.transitionInAction = true;\n    this.setStartingTransform();\n    wrapper.appendChild(sharedElement);\n    setTimeout(this.setDestinationTransform, 0);\n    setTimeout(this.cleanUpTransition, this.animationSpeed);\n  }\n\n  render() {\n    const {\n      state: {\n        sharedElement\n      }\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"SharedTransition\",\n      mods: {\n        isVisible: !!sharedElement\n      },\n      ref: this.sharedContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    });\n  }\n\n}, _class.propTypes = {\n  state: PropTypes.shape({\n    startingPosition: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      left: PropTypes.number,\n      top: PropTypes.number\n    }),\n    destinationPosition: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      left: PropTypes.number,\n      top: PropTypes.number\n    }),\n    sharedElementDestination: PropTypes.object,\n    sharedElement: PropTypes.object\n  }).isRequired,\n  cleanUpTransition: PropTypes.func.isRequired\n}, _temp), \"Component/SharedTransition/Component\");\nexport default SharedTransition;","map":{"version":3,"sources":["/home/arturs/scandiweb/extension/node_modules/@scandipwa/scandipwa/src/component/SharedTransition/SharedTransition.component.js"],"names":["PropTypes","createRef","PureComponent","SHARED_ELEMENT_TRANSITION","sharedContainer","animationSpeed","setDestinationTransform","setTransform","bind","setStartingTransform","cleanUpTransition","current","wrapper","props","range","document","createRange","selectNodeContents","deleteContents","transitionInAction","componentDidUpdate","updateSharedElement","key","state","width","height","left","top","style","cssText","sharedElementDestination","sharedElement","appendChild","setTimeout","render","isVisible","propTypes","shape","startingPosition","number","destinationPosition","object","isRequired","func","SharedTransition"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\n\nimport { SHARED_ELEMENT_TRANSITION } from './SharedTransition.config';\n\nimport './SharedTransition.style';\n\n/** @namespace Component/SharedTransition/Component */\nexport class SharedTransition extends PureComponent {\n    static propTypes = {\n        state: PropTypes.shape({\n            startingPosition: PropTypes.shape({\n                width: PropTypes.number,\n                height: PropTypes.number,\n                left: PropTypes.number,\n                top: PropTypes.number\n            }),\n            destinationPosition: PropTypes.shape({\n                width: PropTypes.number,\n                height: PropTypes.number,\n                left: PropTypes.number,\n                top: PropTypes.number\n            }),\n            sharedElementDestination: PropTypes.object,\n            sharedElement: PropTypes.object\n        }).isRequired,\n        cleanUpTransition: PropTypes.func.isRequired\n    };\n\n    sharedContainer = createRef();\n\n    animationSpeed = SHARED_ELEMENT_TRANSITION;\n\n    setDestinationTransform = this.setTransform.bind(this, 'destinationPosition');\n\n    setStartingTransform = this.setTransform.bind(this, 'startingPosition');\n\n    componentDidUpdate() {\n        if (this.transitionInAction) {\n            return;\n        }\n        this.updateSharedElement();\n    }\n\n    setTransform(key) {\n        const {\n            state: {\n                [key]: {\n                    width,\n                    height,\n                    left,\n                    top\n                }\n            }\n        } = this.props;\n\n        this.sharedContainer.current.style.cssText = `\n            --shared-element-width: ${width}px;\n            --shared-element-height: ${height}px;\n            --shared-element-top: ${top}px;\n            --shared-element-left: ${left}px;\n            --shared-element-animation-speed: ${this.animationSpeed}ms;\n        `;\n    }\n\n    cleanUpTransition = () => {\n        const { current: wrapper } = this.sharedContainer;\n        const { cleanUpTransition } = this.props;\n\n        const range = document.createRange();\n        range.selectNodeContents(wrapper);\n        range.deleteContents();\n\n        this.transitionInAction = false;\n        cleanUpTransition();\n    };\n\n    updateSharedElement() {\n        const {\n            state: {\n                sharedElementDestination,\n                sharedElement\n            }\n        } = this.props;\n\n        const { current: wrapper } = this.sharedContainer;\n\n        if (\n            !sharedElement\n            || !sharedElementDestination\n            || !wrapper\n        ) {\n            // this.cleanUpTransition();\n            return;\n        }\n\n        this.transitionInAction = true;\n        this.setStartingTransform();\n        wrapper.appendChild(sharedElement);\n        setTimeout(this.setDestinationTransform, 0);\n        setTimeout(this.cleanUpTransition, this.animationSpeed);\n    }\n\n    render() {\n        const { state: { sharedElement } } = this.props;\n\n        return (\n            <div\n              block=\"SharedTransition\"\n              mods={ { isVisible: !!sharedElement } }\n              ref={ this.sharedContainer }\n            />\n        );\n    }\n}\n\nexport default SharedTransition;\n"]},"metadata":{},"sourceType":"module"}